//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.225
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace WF.DA {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DA.DASoap")]
    public interface DASoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginHelloWorld(string text, System.AsyncCallback callback, object asyncState);
        
        string EndHelloWorld(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RunSQL", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRunSQL(string sql, System.AsyncCallback callback, object asyncState);
        
        int EndRunSQL(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RunSQLReturnTable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRunSQLReturnTable(string sql, System.AsyncCallback callback, object asyncState);
        
        WF.DA.RunSQLReturnTableResponseRunSQLReturnTableResult EndRunSQLReturnTable(System.IAsyncResult result);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class RunSQLReturnTableResponseRunSQLReturnTableResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.Linq.XElement[] anyField;
        
        private System.Xml.Linq.XElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.Linq.XElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.Linq.XElement Any1 {
            get {
                return this.any1Field;
            }
            set {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DASoapChannel : WF.DA.DASoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunSQLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunSQLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunSQLReturnTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunSQLReturnTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WF.DA.RunSQLReturnTableResponseRunSQLReturnTableResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WF.DA.RunSQLReturnTableResponseRunSQLReturnTableResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DASoapClient : System.ServiceModel.ClientBase<WF.DA.DASoap>, WF.DA.DASoap {
        
        private BeginOperationDelegate onBeginHelloWorldDelegate;
        
        private EndOperationDelegate onEndHelloWorldDelegate;
        
        private System.Threading.SendOrPostCallback onHelloWorldCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunSQLDelegate;
        
        private EndOperationDelegate onEndRunSQLDelegate;
        
        private System.Threading.SendOrPostCallback onRunSQLCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunSQLReturnTableDelegate;
        
        private EndOperationDelegate onEndRunSQLReturnTableDelegate;
        
        private System.Threading.SendOrPostCallback onRunSQLReturnTableCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public DASoapClient() {
        }
        
        public DASoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DASoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DASoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DASoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<HelloWorldCompletedEventArgs> HelloWorldCompleted;
        
        public event System.EventHandler<RunSQLCompletedEventArgs> RunSQLCompleted;
        
        public event System.EventHandler<RunSQLReturnTableCompletedEventArgs> RunSQLReturnTableCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.DA.DASoap.BeginHelloWorld(string text, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHelloWorld(text, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WF.DA.DASoap.EndHelloWorld(System.IAsyncResult result) {
            return base.Channel.EndHelloWorld(result);
        }
        
        private System.IAsyncResult OnBeginHelloWorld(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string text = ((string)(inValues[0]));
            return ((WF.DA.DASoap)(this)).BeginHelloWorld(text, callback, asyncState);
        }
        
        private object[] OnEndHelloWorld(System.IAsyncResult result) {
            string retVal = ((WF.DA.DASoap)(this)).EndHelloWorld(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHelloWorldCompleted(object state) {
            if ((this.HelloWorldCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HelloWorldAsync(string text) {
            this.HelloWorldAsync(text, null);
        }
        
        public void HelloWorldAsync(string text, object userState) {
            if ((this.onBeginHelloWorldDelegate == null)) {
                this.onBeginHelloWorldDelegate = new BeginOperationDelegate(this.OnBeginHelloWorld);
            }
            if ((this.onEndHelloWorldDelegate == null)) {
                this.onEndHelloWorldDelegate = new EndOperationDelegate(this.OnEndHelloWorld);
            }
            if ((this.onHelloWorldCompletedDelegate == null)) {
                this.onHelloWorldCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHelloWorldCompleted);
            }
            base.InvokeAsync(this.onBeginHelloWorldDelegate, new object[] {
                        text}, this.onEndHelloWorldDelegate, this.onHelloWorldCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.DA.DASoap.BeginRunSQL(string sql, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunSQL(sql, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int WF.DA.DASoap.EndRunSQL(System.IAsyncResult result) {
            return base.Channel.EndRunSQL(result);
        }
        
        private System.IAsyncResult OnBeginRunSQL(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sql = ((string)(inValues[0]));
            return ((WF.DA.DASoap)(this)).BeginRunSQL(sql, callback, asyncState);
        }
        
        private object[] OnEndRunSQL(System.IAsyncResult result) {
            int retVal = ((WF.DA.DASoap)(this)).EndRunSQL(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRunSQLCompleted(object state) {
            if ((this.RunSQLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunSQLCompleted(this, new RunSQLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunSQLAsync(string sql) {
            this.RunSQLAsync(sql, null);
        }
        
        public void RunSQLAsync(string sql, object userState) {
            if ((this.onBeginRunSQLDelegate == null)) {
                this.onBeginRunSQLDelegate = new BeginOperationDelegate(this.OnBeginRunSQL);
            }
            if ((this.onEndRunSQLDelegate == null)) {
                this.onEndRunSQLDelegate = new EndOperationDelegate(this.OnEndRunSQL);
            }
            if ((this.onRunSQLCompletedDelegate == null)) {
                this.onRunSQLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunSQLCompleted);
            }
            base.InvokeAsync(this.onBeginRunSQLDelegate, new object[] {
                        sql}, this.onEndRunSQLDelegate, this.onRunSQLCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.DA.DASoap.BeginRunSQLReturnTable(string sql, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunSQLReturnTable(sql, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WF.DA.RunSQLReturnTableResponseRunSQLReturnTableResult WF.DA.DASoap.EndRunSQLReturnTable(System.IAsyncResult result) {
            return base.Channel.EndRunSQLReturnTable(result);
        }
        
        private System.IAsyncResult OnBeginRunSQLReturnTable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sql = ((string)(inValues[0]));
            return ((WF.DA.DASoap)(this)).BeginRunSQLReturnTable(sql, callback, asyncState);
        }
        
        private object[] OnEndRunSQLReturnTable(System.IAsyncResult result) {
            WF.DA.RunSQLReturnTableResponseRunSQLReturnTableResult retVal = ((WF.DA.DASoap)(this)).EndRunSQLReturnTable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRunSQLReturnTableCompleted(object state) {
            if ((this.RunSQLReturnTableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunSQLReturnTableCompleted(this, new RunSQLReturnTableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunSQLReturnTableAsync(string sql) {
            this.RunSQLReturnTableAsync(sql, null);
        }
        
        public void RunSQLReturnTableAsync(string sql, object userState) {
            if ((this.onBeginRunSQLReturnTableDelegate == null)) {
                this.onBeginRunSQLReturnTableDelegate = new BeginOperationDelegate(this.OnBeginRunSQLReturnTable);
            }
            if ((this.onEndRunSQLReturnTableDelegate == null)) {
                this.onEndRunSQLReturnTableDelegate = new EndOperationDelegate(this.OnEndRunSQLReturnTable);
            }
            if ((this.onRunSQLReturnTableCompletedDelegate == null)) {
                this.onRunSQLReturnTableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunSQLReturnTableCompleted);
            }
            base.InvokeAsync(this.onBeginRunSQLReturnTableDelegate, new object[] {
                        sql}, this.onEndRunSQLReturnTableDelegate, this.onRunSQLReturnTableCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override WF.DA.DASoap CreateChannel() {
            return new DASoapClientChannel(this);
        }
        
        private class DASoapClientChannel : ChannelBase<WF.DA.DASoap>, WF.DA.DASoap {
            
            public DASoapClientChannel(System.ServiceModel.ClientBase<WF.DA.DASoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginHelloWorld(string text, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = text;
                System.IAsyncResult _result = base.BeginInvoke("HelloWorld", _args, callback, asyncState);
                return _result;
            }
            
            public string EndHelloWorld(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("HelloWorld", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRunSQL(string sql, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = sql;
                System.IAsyncResult _result = base.BeginInvoke("RunSQL", _args, callback, asyncState);
                return _result;
            }
            
            public int EndRunSQL(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("RunSQL", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRunSQLReturnTable(string sql, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = sql;
                System.IAsyncResult _result = base.BeginInvoke("RunSQLReturnTable", _args, callback, asyncState);
                return _result;
            }
            
            public WF.DA.RunSQLReturnTableResponseRunSQLReturnTableResult EndRunSQLReturnTable(System.IAsyncResult result) {
                object[] _args = new object[0];
                WF.DA.RunSQLReturnTableResponseRunSQLReturnTableResult _result = ((WF.DA.RunSQLReturnTableResponseRunSQLReturnTableResult)(base.EndInvoke("RunSQLReturnTable", _args, result)));
                return _result;
            }
        }
    }
}
