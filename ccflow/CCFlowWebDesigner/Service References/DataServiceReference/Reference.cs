//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.235
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace WF.DataServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DataServiceReference.WebServiceSoap")]
    public interface WebServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetDTOfWorkList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetDTOfWorkList(string fk_flow, string workid, System.AsyncCallback callback, object asyncState);
        
        string EndGetDTOfWorkList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/LetAdminLogin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginLetAdminLogin(string lang, bool islogin, System.AsyncCallback callback, object asyncState);
        
        void EndLetAdminLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WinOpenEns", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginWinOpenEns(string lang, string dotype, string fk_dept, string fk_emp, string enName, bool isLogin, System.AsyncCallback callback, object asyncState);
        
        string EndWinOpenEns(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetRelativeUrl", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetRelativeUrl(string lang, string dotype, string fk_flow, string node1, string node2, bool isLogin, System.AsyncCallback callback, object asyncState);
        
        string EndGetRelativeUrl(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RunSQLReturnTablePeng", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRunSQLReturnTablePeng(string sql, System.AsyncCallback callback, object asyncState);
        
        WF.DataServiceReference.RunSQLReturnTablePengResponseRunSQLReturnTablePengResult EndRunSQLReturnTablePeng(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RunSQLReturnTable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRunSQLReturnTable(string sql, bool isLogin, System.AsyncCallback callback, object asyncState);
        
        string EndRunSQLReturnTable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetFlowSort", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetFlowSort(System.AsyncCallback callback, object asyncState);
        
        string EndGetFlowSort(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetFlowBySort", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetFlowBySort(string sort, System.AsyncCallback callback, object asyncState);
        
        string EndGetFlowBySort(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetFlows", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetFlows(System.AsyncCallback callback, object asyncState);
        
        string EndGetFlows(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetStationEmps", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetStationEmps(System.AsyncCallback callback, object asyncState);
        
        string EndGetStationEmps(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MaintainStation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginMaintainStation(string pk, System.AsyncCallback callback, object asyncState);
        
        string EndMaintainStation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MaintainDept", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginMaintainDept(string pk, System.AsyncCallback callback, object asyncState);
        
        string EndMaintainDept(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/MaintainEmp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginMaintainEmp(string pk, System.AsyncCallback callback, object asyncState);
        
        string EndMaintainEmp(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RunSQL", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRunSQL(string sql, System.AsyncCallback callback, object asyncState);
        
        int EndRunSQL(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Do", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDo(string doWhat, string para1, bool isLogin, System.AsyncCallback callback, object asyncState);
        
        string EndDo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DoNewNode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDoNewNode(string fk_flow, int x, int y, string nodeName, bool isLogin, System.AsyncCallback callback, object asyncState);
        
        int EndDoNewNode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DoDrewLine", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDoDrewLine(int from, int to, System.AsyncCallback callback, object asyncState);
        
        bool EndDoDrewLine(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DoDropLine", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDoDropLine(int from, int to, System.AsyncCallback callback, object asyncState);
        
        bool EndDoDropLine(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DoNewLabel", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDoNewLabel(string fk_flow, int x, int y, string name, string lableId, System.AsyncCallback callback, object asyncState);
        
        string EndDoNewLabel(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/FlowTemplete_Gener", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginFlowTemplete_Gener(string fk_flow, bool islogin, System.AsyncCallback callback, object asyncState);
        
        string EndFlowTemplete_Gener(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/FlowTemplete_Load", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginFlowTemplete_Load(string fk_flowSort, string path, bool islogin, System.AsyncCallback callback, object asyncState);
        
        string EndFlowTemplete_Load(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetDirection", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetDirection(string flowid, System.AsyncCallback callback, object asyncState);
        
        string EndGetDirection(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetLables", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetLables(string flowid, System.AsyncCallback callback, object asyncState);
        
        string EndGetLables(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DoSaveFlow", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDoSaveFlow(string paras, System.AsyncCallback callback, object asyncState);
        
        void EndDoSaveFlow(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DoSaveFlowNode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDoSaveFlowNode(int nodeID, int x, int y, string nodeName, int nodeType, bool islogin, System.AsyncCallback callback, object asyncState);
        
        void EndDoSaveFlowNode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Uploadfile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginUploadfile(WF.DataServiceReference.UploadfileRequest request, System.AsyncCallback callback, object asyncState);
        
        WF.DataServiceReference.UploadfileResponse EndUploadfile(System.IAsyncResult result);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class RunSQLReturnTablePengResponseRunSQLReturnTablePengResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.Linq.XElement[] anyField;
        
        private System.Xml.Linq.XElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.Linq.XElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.Linq.XElement Any1 {
            get {
                return this.any1Field;
            }
            set {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Uploadfile", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadfileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FileByte;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string fileName;
        
        public UploadfileRequest() {
        }
        
        public UploadfileRequest(byte[] FileByte, string fileName) {
            this.FileByte = FileByte;
            this.fileName = fileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadfileResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadfileResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string UploadfileResult;
        
        public UploadfileResponse() {
        }
        
        public UploadfileResponse(string UploadfileResult) {
            this.UploadfileResult = UploadfileResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebServiceSoapChannel : WF.DataServiceReference.WebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDTOfWorkListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDTOfWorkListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WinOpenEnsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WinOpenEnsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRelativeUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRelativeUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunSQLReturnTablePengCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunSQLReturnTablePengCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WF.DataServiceReference.RunSQLReturnTablePengResponseRunSQLReturnTablePengResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WF.DataServiceReference.RunSQLReturnTablePengResponseRunSQLReturnTablePengResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunSQLReturnTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunSQLReturnTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFlowSortCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFlowSortCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFlowBySortCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFlowBySortCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFlowsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFlowsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStationEmpsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStationEmpsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MaintainStationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MaintainStationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MaintainDeptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MaintainDeptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MaintainEmpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MaintainEmpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunSQLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunSQLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DoNewNodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DoNewNodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DoDrewLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DoDrewLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DoDropLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DoDropLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DoNewLabelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DoNewLabelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FlowTemplete_GenerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FlowTemplete_GenerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FlowTemplete_LoadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FlowTemplete_LoadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDirectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDirectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLablesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLablesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UploadfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UploadfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebServiceSoapClient : System.ServiceModel.ClientBase<WF.DataServiceReference.WebServiceSoap>, WF.DataServiceReference.WebServiceSoap {
        
        private BeginOperationDelegate onBeginGetDTOfWorkListDelegate;
        
        private EndOperationDelegate onEndGetDTOfWorkListDelegate;
        
        private System.Threading.SendOrPostCallback onGetDTOfWorkListCompletedDelegate;
        
        private BeginOperationDelegate onBeginLetAdminLoginDelegate;
        
        private EndOperationDelegate onEndLetAdminLoginDelegate;
        
        private System.Threading.SendOrPostCallback onLetAdminLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginWinOpenEnsDelegate;
        
        private EndOperationDelegate onEndWinOpenEnsDelegate;
        
        private System.Threading.SendOrPostCallback onWinOpenEnsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRelativeUrlDelegate;
        
        private EndOperationDelegate onEndGetRelativeUrlDelegate;
        
        private System.Threading.SendOrPostCallback onGetRelativeUrlCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunSQLReturnTablePengDelegate;
        
        private EndOperationDelegate onEndRunSQLReturnTablePengDelegate;
        
        private System.Threading.SendOrPostCallback onRunSQLReturnTablePengCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunSQLReturnTableDelegate;
        
        private EndOperationDelegate onEndRunSQLReturnTableDelegate;
        
        private System.Threading.SendOrPostCallback onRunSQLReturnTableCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFlowSortDelegate;
        
        private EndOperationDelegate onEndGetFlowSortDelegate;
        
        private System.Threading.SendOrPostCallback onGetFlowSortCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFlowBySortDelegate;
        
        private EndOperationDelegate onEndGetFlowBySortDelegate;
        
        private System.Threading.SendOrPostCallback onGetFlowBySortCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFlowsDelegate;
        
        private EndOperationDelegate onEndGetFlowsDelegate;
        
        private System.Threading.SendOrPostCallback onGetFlowsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStationEmpsDelegate;
        
        private EndOperationDelegate onEndGetStationEmpsDelegate;
        
        private System.Threading.SendOrPostCallback onGetStationEmpsCompletedDelegate;
        
        private BeginOperationDelegate onBeginMaintainStationDelegate;
        
        private EndOperationDelegate onEndMaintainStationDelegate;
        
        private System.Threading.SendOrPostCallback onMaintainStationCompletedDelegate;
        
        private BeginOperationDelegate onBeginMaintainDeptDelegate;
        
        private EndOperationDelegate onEndMaintainDeptDelegate;
        
        private System.Threading.SendOrPostCallback onMaintainDeptCompletedDelegate;
        
        private BeginOperationDelegate onBeginMaintainEmpDelegate;
        
        private EndOperationDelegate onEndMaintainEmpDelegate;
        
        private System.Threading.SendOrPostCallback onMaintainEmpCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunSQLDelegate;
        
        private EndOperationDelegate onEndRunSQLDelegate;
        
        private System.Threading.SendOrPostCallback onRunSQLCompletedDelegate;
        
        private BeginOperationDelegate onBeginDoDelegate;
        
        private EndOperationDelegate onEndDoDelegate;
        
        private System.Threading.SendOrPostCallback onDoCompletedDelegate;
        
        private BeginOperationDelegate onBeginDoNewNodeDelegate;
        
        private EndOperationDelegate onEndDoNewNodeDelegate;
        
        private System.Threading.SendOrPostCallback onDoNewNodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginDoDrewLineDelegate;
        
        private EndOperationDelegate onEndDoDrewLineDelegate;
        
        private System.Threading.SendOrPostCallback onDoDrewLineCompletedDelegate;
        
        private BeginOperationDelegate onBeginDoDropLineDelegate;
        
        private EndOperationDelegate onEndDoDropLineDelegate;
        
        private System.Threading.SendOrPostCallback onDoDropLineCompletedDelegate;
        
        private BeginOperationDelegate onBeginDoNewLabelDelegate;
        
        private EndOperationDelegate onEndDoNewLabelDelegate;
        
        private System.Threading.SendOrPostCallback onDoNewLabelCompletedDelegate;
        
        private BeginOperationDelegate onBeginFlowTemplete_GenerDelegate;
        
        private EndOperationDelegate onEndFlowTemplete_GenerDelegate;
        
        private System.Threading.SendOrPostCallback onFlowTemplete_GenerCompletedDelegate;
        
        private BeginOperationDelegate onBeginFlowTemplete_LoadDelegate;
        
        private EndOperationDelegate onEndFlowTemplete_LoadDelegate;
        
        private System.Threading.SendOrPostCallback onFlowTemplete_LoadCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDirectionDelegate;
        
        private EndOperationDelegate onEndGetDirectionDelegate;
        
        private System.Threading.SendOrPostCallback onGetDirectionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLablesDelegate;
        
        private EndOperationDelegate onEndGetLablesDelegate;
        
        private System.Threading.SendOrPostCallback onGetLablesCompletedDelegate;
        
        private BeginOperationDelegate onBeginDoSaveFlowDelegate;
        
        private EndOperationDelegate onEndDoSaveFlowDelegate;
        
        private System.Threading.SendOrPostCallback onDoSaveFlowCompletedDelegate;
        
        private BeginOperationDelegate onBeginDoSaveFlowNodeDelegate;
        
        private EndOperationDelegate onEndDoSaveFlowNodeDelegate;
        
        private System.Threading.SendOrPostCallback onDoSaveFlowNodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginUploadfileDelegate;
        
        private EndOperationDelegate onEndUploadfileDelegate;
        
        private System.Threading.SendOrPostCallback onUploadfileCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public WebServiceSoapClient() {
        }
        
        public WebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<GetDTOfWorkListCompletedEventArgs> GetDTOfWorkListCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> LetAdminLoginCompleted;
        
        public event System.EventHandler<WinOpenEnsCompletedEventArgs> WinOpenEnsCompleted;
        
        public event System.EventHandler<GetRelativeUrlCompletedEventArgs> GetRelativeUrlCompleted;
        
        public event System.EventHandler<RunSQLReturnTablePengCompletedEventArgs> RunSQLReturnTablePengCompleted;
        
        public event System.EventHandler<RunSQLReturnTableCompletedEventArgs> RunSQLReturnTableCompleted;
        
        public event System.EventHandler<GetFlowSortCompletedEventArgs> GetFlowSortCompleted;
        
        public event System.EventHandler<GetFlowBySortCompletedEventArgs> GetFlowBySortCompleted;
        
        public event System.EventHandler<GetFlowsCompletedEventArgs> GetFlowsCompleted;
        
        public event System.EventHandler<GetStationEmpsCompletedEventArgs> GetStationEmpsCompleted;
        
        public event System.EventHandler<MaintainStationCompletedEventArgs> MaintainStationCompleted;
        
        public event System.EventHandler<MaintainDeptCompletedEventArgs> MaintainDeptCompleted;
        
        public event System.EventHandler<MaintainEmpCompletedEventArgs> MaintainEmpCompleted;
        
        public event System.EventHandler<RunSQLCompletedEventArgs> RunSQLCompleted;
        
        public event System.EventHandler<DoCompletedEventArgs> DoCompleted;
        
        public event System.EventHandler<DoNewNodeCompletedEventArgs> DoNewNodeCompleted;
        
        public event System.EventHandler<DoDrewLineCompletedEventArgs> DoDrewLineCompleted;
        
        public event System.EventHandler<DoDropLineCompletedEventArgs> DoDropLineCompleted;
        
        public event System.EventHandler<DoNewLabelCompletedEventArgs> DoNewLabelCompleted;
        
        public event System.EventHandler<FlowTemplete_GenerCompletedEventArgs> FlowTemplete_GenerCompleted;
        
        public event System.EventHandler<FlowTemplete_LoadCompletedEventArgs> FlowTemplete_LoadCompleted;
        
        public event System.EventHandler<GetDirectionCompletedEventArgs> GetDirectionCompleted;
        
        public event System.EventHandler<GetLablesCompletedEventArgs> GetLablesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DoSaveFlowCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DoSaveFlowNodeCompleted;
        
        public event System.EventHandler<UploadfileCompletedEventArgs> UploadfileCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.DataServiceReference.WebServiceSoap.BeginGetDTOfWorkList(string fk_flow, string workid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDTOfWorkList(fk_flow, workid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WF.DataServiceReference.WebServiceSoap.EndGetDTOfWorkList(System.IAsyncResult result) {
            return base.Channel.EndGetDTOfWorkList(result);
        }
        
        private System.IAsyncResult OnBeginGetDTOfWorkList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fk_flow = ((string)(inValues[0]));
            string workid = ((string)(inValues[1]));
            return ((WF.DataServiceReference.WebServiceSoap)(this)).BeginGetDTOfWorkList(fk_flow, workid, callback, asyncState);
        }
        
        private object[] OnEndGetDTOfWorkList(System.IAsyncResult result) {
            string retVal = ((WF.DataServiceReference.WebServiceSoap)(this)).EndGetDTOfWorkList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDTOfWorkListCompleted(object state) {
            if ((this.GetDTOfWorkListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDTOfWorkListCompleted(this, new GetDTOfWorkListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDTOfWorkListAsync(string fk_flow, string workid) {
            this.GetDTOfWorkListAsync(fk_flow, workid, null);
        }
        
        public void GetDTOfWorkListAsync(string fk_flow, string workid, object userState) {
            if ((this.onBeginGetDTOfWorkListDelegate == null)) {
                this.onBeginGetDTOfWorkListDelegate = new BeginOperationDelegate(this.OnBeginGetDTOfWorkList);
            }
            if ((this.onEndGetDTOfWorkListDelegate == null)) {
                this.onEndGetDTOfWorkListDelegate = new EndOperationDelegate(this.OnEndGetDTOfWorkList);
            }
            if ((this.onGetDTOfWorkListCompletedDelegate == null)) {
                this.onGetDTOfWorkListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDTOfWorkListCompleted);
            }
            base.InvokeAsync(this.onBeginGetDTOfWorkListDelegate, new object[] {
                        fk_flow,
                        workid}, this.onEndGetDTOfWorkListDelegate, this.onGetDTOfWorkListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.DataServiceReference.WebServiceSoap.BeginLetAdminLogin(string lang, bool islogin, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLetAdminLogin(lang, islogin, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void WF.DataServiceReference.WebServiceSoap.EndLetAdminLogin(System.IAsyncResult result) {
            base.Channel.EndLetAdminLogin(result);
        }
        
        private System.IAsyncResult OnBeginLetAdminLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string lang = ((string)(inValues[0]));
            bool islogin = ((bool)(inValues[1]));
            return ((WF.DataServiceReference.WebServiceSoap)(this)).BeginLetAdminLogin(lang, islogin, callback, asyncState);
        }
        
        private object[] OnEndLetAdminLogin(System.IAsyncResult result) {
            ((WF.DataServiceReference.WebServiceSoap)(this)).EndLetAdminLogin(result);
            return null;
        }
        
        private void OnLetAdminLoginCompleted(object state) {
            if ((this.LetAdminLoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LetAdminLoginCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LetAdminLoginAsync(string lang, bool islogin) {
            this.LetAdminLoginAsync(lang, islogin, null);
        }
        
        public void LetAdminLoginAsync(string lang, bool islogin, object userState) {
            if ((this.onBeginLetAdminLoginDelegate == null)) {
                this.onBeginLetAdminLoginDelegate = new BeginOperationDelegate(this.OnBeginLetAdminLogin);
            }
            if ((this.onEndLetAdminLoginDelegate == null)) {
                this.onEndLetAdminLoginDelegate = new EndOperationDelegate(this.OnEndLetAdminLogin);
            }
            if ((this.onLetAdminLoginCompletedDelegate == null)) {
                this.onLetAdminLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLetAdminLoginCompleted);
            }
            base.InvokeAsync(this.onBeginLetAdminLoginDelegate, new object[] {
                        lang,
                        islogin}, this.onEndLetAdminLoginDelegate, this.onLetAdminLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.DataServiceReference.WebServiceSoap.BeginWinOpenEns(string lang, string dotype, string fk_dept, string fk_emp, string enName, bool isLogin, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWinOpenEns(lang, dotype, fk_dept, fk_emp, enName, isLogin, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WF.DataServiceReference.WebServiceSoap.EndWinOpenEns(System.IAsyncResult result) {
            return base.Channel.EndWinOpenEns(result);
        }
        
        private System.IAsyncResult OnBeginWinOpenEns(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string lang = ((string)(inValues[0]));
            string dotype = ((string)(inValues[1]));
            string fk_dept = ((string)(inValues[2]));
            string fk_emp = ((string)(inValues[3]));
            string enName = ((string)(inValues[4]));
            bool isLogin = ((bool)(inValues[5]));
            return ((WF.DataServiceReference.WebServiceSoap)(this)).BeginWinOpenEns(lang, dotype, fk_dept, fk_emp, enName, isLogin, callback, asyncState);
        }
        
        private object[] OnEndWinOpenEns(System.IAsyncResult result) {
            string retVal = ((WF.DataServiceReference.WebServiceSoap)(this)).EndWinOpenEns(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWinOpenEnsCompleted(object state) {
            if ((this.WinOpenEnsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WinOpenEnsCompleted(this, new WinOpenEnsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WinOpenEnsAsync(string lang, string dotype, string fk_dept, string fk_emp, string enName, bool isLogin) {
            this.WinOpenEnsAsync(lang, dotype, fk_dept, fk_emp, enName, isLogin, null);
        }
        
        public void WinOpenEnsAsync(string lang, string dotype, string fk_dept, string fk_emp, string enName, bool isLogin, object userState) {
            if ((this.onBeginWinOpenEnsDelegate == null)) {
                this.onBeginWinOpenEnsDelegate = new BeginOperationDelegate(this.OnBeginWinOpenEns);
            }
            if ((this.onEndWinOpenEnsDelegate == null)) {
                this.onEndWinOpenEnsDelegate = new EndOperationDelegate(this.OnEndWinOpenEns);
            }
            if ((this.onWinOpenEnsCompletedDelegate == null)) {
                this.onWinOpenEnsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWinOpenEnsCompleted);
            }
            base.InvokeAsync(this.onBeginWinOpenEnsDelegate, new object[] {
                        lang,
                        dotype,
                        fk_dept,
                        fk_emp,
                        enName,
                        isLogin}, this.onEndWinOpenEnsDelegate, this.onWinOpenEnsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.DataServiceReference.WebServiceSoap.BeginGetRelativeUrl(string lang, string dotype, string fk_flow, string node1, string node2, bool isLogin, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRelativeUrl(lang, dotype, fk_flow, node1, node2, isLogin, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WF.DataServiceReference.WebServiceSoap.EndGetRelativeUrl(System.IAsyncResult result) {
            return base.Channel.EndGetRelativeUrl(result);
        }
        
        private System.IAsyncResult OnBeginGetRelativeUrl(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string lang = ((string)(inValues[0]));
            string dotype = ((string)(inValues[1]));
            string fk_flow = ((string)(inValues[2]));
            string node1 = ((string)(inValues[3]));
            string node2 = ((string)(inValues[4]));
            bool isLogin = ((bool)(inValues[5]));
            return ((WF.DataServiceReference.WebServiceSoap)(this)).BeginGetRelativeUrl(lang, dotype, fk_flow, node1, node2, isLogin, callback, asyncState);
        }
        
        private object[] OnEndGetRelativeUrl(System.IAsyncResult result) {
            string retVal = ((WF.DataServiceReference.WebServiceSoap)(this)).EndGetRelativeUrl(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRelativeUrlCompleted(object state) {
            if ((this.GetRelativeUrlCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRelativeUrlCompleted(this, new GetRelativeUrlCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRelativeUrlAsync(string lang, string dotype, string fk_flow, string node1, string node2, bool isLogin) {
            this.GetRelativeUrlAsync(lang, dotype, fk_flow, node1, node2, isLogin, null);
        }
        
        public void GetRelativeUrlAsync(string lang, string dotype, string fk_flow, string node1, string node2, bool isLogin, object userState) {
            if ((this.onBeginGetRelativeUrlDelegate == null)) {
                this.onBeginGetRelativeUrlDelegate = new BeginOperationDelegate(this.OnBeginGetRelativeUrl);
            }
            if ((this.onEndGetRelativeUrlDelegate == null)) {
                this.onEndGetRelativeUrlDelegate = new EndOperationDelegate(this.OnEndGetRelativeUrl);
            }
            if ((this.onGetRelativeUrlCompletedDelegate == null)) {
                this.onGetRelativeUrlCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRelativeUrlCompleted);
            }
            base.InvokeAsync(this.onBeginGetRelativeUrlDelegate, new object[] {
                        lang,
                        dotype,
                        fk_flow,
                        node1,
                        node2,
                        isLogin}, this.onEndGetRelativeUrlDelegate, this.onGetRelativeUrlCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.DataServiceReference.WebServiceSoap.BeginRunSQLReturnTablePeng(string sql, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunSQLReturnTablePeng(sql, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WF.DataServiceReference.RunSQLReturnTablePengResponseRunSQLReturnTablePengResult WF.DataServiceReference.WebServiceSoap.EndRunSQLReturnTablePeng(System.IAsyncResult result) {
            return base.Channel.EndRunSQLReturnTablePeng(result);
        }
        
        private System.IAsyncResult OnBeginRunSQLReturnTablePeng(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sql = ((string)(inValues[0]));
            return ((WF.DataServiceReference.WebServiceSoap)(this)).BeginRunSQLReturnTablePeng(sql, callback, asyncState);
        }
        
        private object[] OnEndRunSQLReturnTablePeng(System.IAsyncResult result) {
            WF.DataServiceReference.RunSQLReturnTablePengResponseRunSQLReturnTablePengResult retVal = ((WF.DataServiceReference.WebServiceSoap)(this)).EndRunSQLReturnTablePeng(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRunSQLReturnTablePengCompleted(object state) {
            if ((this.RunSQLReturnTablePengCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunSQLReturnTablePengCompleted(this, new RunSQLReturnTablePengCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunSQLReturnTablePengAsync(string sql) {
            this.RunSQLReturnTablePengAsync(sql, null);
        }
        
        public void RunSQLReturnTablePengAsync(string sql, object userState) {
            if ((this.onBeginRunSQLReturnTablePengDelegate == null)) {
                this.onBeginRunSQLReturnTablePengDelegate = new BeginOperationDelegate(this.OnBeginRunSQLReturnTablePeng);
            }
            if ((this.onEndRunSQLReturnTablePengDelegate == null)) {
                this.onEndRunSQLReturnTablePengDelegate = new EndOperationDelegate(this.OnEndRunSQLReturnTablePeng);
            }
            if ((this.onRunSQLReturnTablePengCompletedDelegate == null)) {
                this.onRunSQLReturnTablePengCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunSQLReturnTablePengCompleted);
            }
            base.InvokeAsync(this.onBeginRunSQLReturnTablePengDelegate, new object[] {
                        sql}, this.onEndRunSQLReturnTablePengDelegate, this.onRunSQLReturnTablePengCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.DataServiceReference.WebServiceSoap.BeginRunSQLReturnTable(string sql, bool isLogin, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunSQLReturnTable(sql, isLogin, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WF.DataServiceReference.WebServiceSoap.EndRunSQLReturnTable(System.IAsyncResult result) {
            return base.Channel.EndRunSQLReturnTable(result);
        }
        
        private System.IAsyncResult OnBeginRunSQLReturnTable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sql = ((string)(inValues[0]));
            bool isLogin = ((bool)(inValues[1]));
            return ((WF.DataServiceReference.WebServiceSoap)(this)).BeginRunSQLReturnTable(sql, isLogin, callback, asyncState);
        }
        
        private object[] OnEndRunSQLReturnTable(System.IAsyncResult result) {
            string retVal = ((WF.DataServiceReference.WebServiceSoap)(this)).EndRunSQLReturnTable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRunSQLReturnTableCompleted(object state) {
            if ((this.RunSQLReturnTableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunSQLReturnTableCompleted(this, new RunSQLReturnTableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunSQLReturnTableAsync(string sql, bool isLogin) {
            this.RunSQLReturnTableAsync(sql, isLogin, null);
        }
        
        public void RunSQLReturnTableAsync(string sql, bool isLogin, object userState) {
            if ((this.onBeginRunSQLReturnTableDelegate == null)) {
                this.onBeginRunSQLReturnTableDelegate = new BeginOperationDelegate(this.OnBeginRunSQLReturnTable);
            }
            if ((this.onEndRunSQLReturnTableDelegate == null)) {
                this.onEndRunSQLReturnTableDelegate = new EndOperationDelegate(this.OnEndRunSQLReturnTable);
            }
            if ((this.onRunSQLReturnTableCompletedDelegate == null)) {
                this.onRunSQLReturnTableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunSQLReturnTableCompleted);
            }
            base.InvokeAsync(this.onBeginRunSQLReturnTableDelegate, new object[] {
                        sql,
                        isLogin}, this.onEndRunSQLReturnTableDelegate, this.onRunSQLReturnTableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.DataServiceReference.WebServiceSoap.BeginGetFlowSort(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFlowSort(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WF.DataServiceReference.WebServiceSoap.EndGetFlowSort(System.IAsyncResult result) {
            return base.Channel.EndGetFlowSort(result);
        }
        
        private System.IAsyncResult OnBeginGetFlowSort(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((WF.DataServiceReference.WebServiceSoap)(this)).BeginGetFlowSort(callback, asyncState);
        }
        
        private object[] OnEndGetFlowSort(System.IAsyncResult result) {
            string retVal = ((WF.DataServiceReference.WebServiceSoap)(this)).EndGetFlowSort(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFlowSortCompleted(object state) {
            if ((this.GetFlowSortCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFlowSortCompleted(this, new GetFlowSortCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFlowSortAsync() {
            this.GetFlowSortAsync(null);
        }
        
        public void GetFlowSortAsync(object userState) {
            if ((this.onBeginGetFlowSortDelegate == null)) {
                this.onBeginGetFlowSortDelegate = new BeginOperationDelegate(this.OnBeginGetFlowSort);
            }
            if ((this.onEndGetFlowSortDelegate == null)) {
                this.onEndGetFlowSortDelegate = new EndOperationDelegate(this.OnEndGetFlowSort);
            }
            if ((this.onGetFlowSortCompletedDelegate == null)) {
                this.onGetFlowSortCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFlowSortCompleted);
            }
            base.InvokeAsync(this.onBeginGetFlowSortDelegate, null, this.onEndGetFlowSortDelegate, this.onGetFlowSortCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.DataServiceReference.WebServiceSoap.BeginGetFlowBySort(string sort, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFlowBySort(sort, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WF.DataServiceReference.WebServiceSoap.EndGetFlowBySort(System.IAsyncResult result) {
            return base.Channel.EndGetFlowBySort(result);
        }
        
        private System.IAsyncResult OnBeginGetFlowBySort(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sort = ((string)(inValues[0]));
            return ((WF.DataServiceReference.WebServiceSoap)(this)).BeginGetFlowBySort(sort, callback, asyncState);
        }
        
        private object[] OnEndGetFlowBySort(System.IAsyncResult result) {
            string retVal = ((WF.DataServiceReference.WebServiceSoap)(this)).EndGetFlowBySort(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFlowBySortCompleted(object state) {
            if ((this.GetFlowBySortCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFlowBySortCompleted(this, new GetFlowBySortCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFlowBySortAsync(string sort) {
            this.GetFlowBySortAsync(sort, null);
        }
        
        public void GetFlowBySortAsync(string sort, object userState) {
            if ((this.onBeginGetFlowBySortDelegate == null)) {
                this.onBeginGetFlowBySortDelegate = new BeginOperationDelegate(this.OnBeginGetFlowBySort);
            }
            if ((this.onEndGetFlowBySortDelegate == null)) {
                this.onEndGetFlowBySortDelegate = new EndOperationDelegate(this.OnEndGetFlowBySort);
            }
            if ((this.onGetFlowBySortCompletedDelegate == null)) {
                this.onGetFlowBySortCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFlowBySortCompleted);
            }
            base.InvokeAsync(this.onBeginGetFlowBySortDelegate, new object[] {
                        sort}, this.onEndGetFlowBySortDelegate, this.onGetFlowBySortCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.DataServiceReference.WebServiceSoap.BeginGetFlows(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFlows(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WF.DataServiceReference.WebServiceSoap.EndGetFlows(System.IAsyncResult result) {
            return base.Channel.EndGetFlows(result);
        }
        
        private System.IAsyncResult OnBeginGetFlows(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((WF.DataServiceReference.WebServiceSoap)(this)).BeginGetFlows(callback, asyncState);
        }
        
        private object[] OnEndGetFlows(System.IAsyncResult result) {
            string retVal = ((WF.DataServiceReference.WebServiceSoap)(this)).EndGetFlows(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFlowsCompleted(object state) {
            if ((this.GetFlowsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFlowsCompleted(this, new GetFlowsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFlowsAsync() {
            this.GetFlowsAsync(null);
        }
        
        public void GetFlowsAsync(object userState) {
            if ((this.onBeginGetFlowsDelegate == null)) {
                this.onBeginGetFlowsDelegate = new BeginOperationDelegate(this.OnBeginGetFlows);
            }
            if ((this.onEndGetFlowsDelegate == null)) {
                this.onEndGetFlowsDelegate = new EndOperationDelegate(this.OnEndGetFlows);
            }
            if ((this.onGetFlowsCompletedDelegate == null)) {
                this.onGetFlowsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFlowsCompleted);
            }
            base.InvokeAsync(this.onBeginGetFlowsDelegate, null, this.onEndGetFlowsDelegate, this.onGetFlowsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.DataServiceReference.WebServiceSoap.BeginGetStationEmps(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStationEmps(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WF.DataServiceReference.WebServiceSoap.EndGetStationEmps(System.IAsyncResult result) {
            return base.Channel.EndGetStationEmps(result);
        }
        
        private System.IAsyncResult OnBeginGetStationEmps(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((WF.DataServiceReference.WebServiceSoap)(this)).BeginGetStationEmps(callback, asyncState);
        }
        
        private object[] OnEndGetStationEmps(System.IAsyncResult result) {
            string retVal = ((WF.DataServiceReference.WebServiceSoap)(this)).EndGetStationEmps(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStationEmpsCompleted(object state) {
            if ((this.GetStationEmpsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStationEmpsCompleted(this, new GetStationEmpsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStationEmpsAsync() {
            this.GetStationEmpsAsync(null);
        }
        
        public void GetStationEmpsAsync(object userState) {
            if ((this.onBeginGetStationEmpsDelegate == null)) {
                this.onBeginGetStationEmpsDelegate = new BeginOperationDelegate(this.OnBeginGetStationEmps);
            }
            if ((this.onEndGetStationEmpsDelegate == null)) {
                this.onEndGetStationEmpsDelegate = new EndOperationDelegate(this.OnEndGetStationEmps);
            }
            if ((this.onGetStationEmpsCompletedDelegate == null)) {
                this.onGetStationEmpsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStationEmpsCompleted);
            }
            base.InvokeAsync(this.onBeginGetStationEmpsDelegate, null, this.onEndGetStationEmpsDelegate, this.onGetStationEmpsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.DataServiceReference.WebServiceSoap.BeginMaintainStation(string pk, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMaintainStation(pk, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WF.DataServiceReference.WebServiceSoap.EndMaintainStation(System.IAsyncResult result) {
            return base.Channel.EndMaintainStation(result);
        }
        
        private System.IAsyncResult OnBeginMaintainStation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string pk = ((string)(inValues[0]));
            return ((WF.DataServiceReference.WebServiceSoap)(this)).BeginMaintainStation(pk, callback, asyncState);
        }
        
        private object[] OnEndMaintainStation(System.IAsyncResult result) {
            string retVal = ((WF.DataServiceReference.WebServiceSoap)(this)).EndMaintainStation(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMaintainStationCompleted(object state) {
            if ((this.MaintainStationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MaintainStationCompleted(this, new MaintainStationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MaintainStationAsync(string pk) {
            this.MaintainStationAsync(pk, null);
        }
        
        public void MaintainStationAsync(string pk, object userState) {
            if ((this.onBeginMaintainStationDelegate == null)) {
                this.onBeginMaintainStationDelegate = new BeginOperationDelegate(this.OnBeginMaintainStation);
            }
            if ((this.onEndMaintainStationDelegate == null)) {
                this.onEndMaintainStationDelegate = new EndOperationDelegate(this.OnEndMaintainStation);
            }
            if ((this.onMaintainStationCompletedDelegate == null)) {
                this.onMaintainStationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMaintainStationCompleted);
            }
            base.InvokeAsync(this.onBeginMaintainStationDelegate, new object[] {
                        pk}, this.onEndMaintainStationDelegate, this.onMaintainStationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.DataServiceReference.WebServiceSoap.BeginMaintainDept(string pk, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMaintainDept(pk, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WF.DataServiceReference.WebServiceSoap.EndMaintainDept(System.IAsyncResult result) {
            return base.Channel.EndMaintainDept(result);
        }
        
        private System.IAsyncResult OnBeginMaintainDept(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string pk = ((string)(inValues[0]));
            return ((WF.DataServiceReference.WebServiceSoap)(this)).BeginMaintainDept(pk, callback, asyncState);
        }
        
        private object[] OnEndMaintainDept(System.IAsyncResult result) {
            string retVal = ((WF.DataServiceReference.WebServiceSoap)(this)).EndMaintainDept(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMaintainDeptCompleted(object state) {
            if ((this.MaintainDeptCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MaintainDeptCompleted(this, new MaintainDeptCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MaintainDeptAsync(string pk) {
            this.MaintainDeptAsync(pk, null);
        }
        
        public void MaintainDeptAsync(string pk, object userState) {
            if ((this.onBeginMaintainDeptDelegate == null)) {
                this.onBeginMaintainDeptDelegate = new BeginOperationDelegate(this.OnBeginMaintainDept);
            }
            if ((this.onEndMaintainDeptDelegate == null)) {
                this.onEndMaintainDeptDelegate = new EndOperationDelegate(this.OnEndMaintainDept);
            }
            if ((this.onMaintainDeptCompletedDelegate == null)) {
                this.onMaintainDeptCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMaintainDeptCompleted);
            }
            base.InvokeAsync(this.onBeginMaintainDeptDelegate, new object[] {
                        pk}, this.onEndMaintainDeptDelegate, this.onMaintainDeptCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.DataServiceReference.WebServiceSoap.BeginMaintainEmp(string pk, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMaintainEmp(pk, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WF.DataServiceReference.WebServiceSoap.EndMaintainEmp(System.IAsyncResult result) {
            return base.Channel.EndMaintainEmp(result);
        }
        
        private System.IAsyncResult OnBeginMaintainEmp(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string pk = ((string)(inValues[0]));
            return ((WF.DataServiceReference.WebServiceSoap)(this)).BeginMaintainEmp(pk, callback, asyncState);
        }
        
        private object[] OnEndMaintainEmp(System.IAsyncResult result) {
            string retVal = ((WF.DataServiceReference.WebServiceSoap)(this)).EndMaintainEmp(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMaintainEmpCompleted(object state) {
            if ((this.MaintainEmpCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MaintainEmpCompleted(this, new MaintainEmpCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MaintainEmpAsync(string pk) {
            this.MaintainEmpAsync(pk, null);
        }
        
        public void MaintainEmpAsync(string pk, object userState) {
            if ((this.onBeginMaintainEmpDelegate == null)) {
                this.onBeginMaintainEmpDelegate = new BeginOperationDelegate(this.OnBeginMaintainEmp);
            }
            if ((this.onEndMaintainEmpDelegate == null)) {
                this.onEndMaintainEmpDelegate = new EndOperationDelegate(this.OnEndMaintainEmp);
            }
            if ((this.onMaintainEmpCompletedDelegate == null)) {
                this.onMaintainEmpCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMaintainEmpCompleted);
            }
            base.InvokeAsync(this.onBeginMaintainEmpDelegate, new object[] {
                        pk}, this.onEndMaintainEmpDelegate, this.onMaintainEmpCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.DataServiceReference.WebServiceSoap.BeginRunSQL(string sql, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunSQL(sql, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int WF.DataServiceReference.WebServiceSoap.EndRunSQL(System.IAsyncResult result) {
            return base.Channel.EndRunSQL(result);
        }
        
        private System.IAsyncResult OnBeginRunSQL(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sql = ((string)(inValues[0]));
            return ((WF.DataServiceReference.WebServiceSoap)(this)).BeginRunSQL(sql, callback, asyncState);
        }
        
        private object[] OnEndRunSQL(System.IAsyncResult result) {
            int retVal = ((WF.DataServiceReference.WebServiceSoap)(this)).EndRunSQL(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRunSQLCompleted(object state) {
            if ((this.RunSQLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunSQLCompleted(this, new RunSQLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunSQLAsync(string sql) {
            this.RunSQLAsync(sql, null);
        }
        
        public void RunSQLAsync(string sql, object userState) {
            if ((this.onBeginRunSQLDelegate == null)) {
                this.onBeginRunSQLDelegate = new BeginOperationDelegate(this.OnBeginRunSQL);
            }
            if ((this.onEndRunSQLDelegate == null)) {
                this.onEndRunSQLDelegate = new EndOperationDelegate(this.OnEndRunSQL);
            }
            if ((this.onRunSQLCompletedDelegate == null)) {
                this.onRunSQLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunSQLCompleted);
            }
            base.InvokeAsync(this.onBeginRunSQLDelegate, new object[] {
                        sql}, this.onEndRunSQLDelegate, this.onRunSQLCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.DataServiceReference.WebServiceSoap.BeginDo(string doWhat, string para1, bool isLogin, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDo(doWhat, para1, isLogin, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WF.DataServiceReference.WebServiceSoap.EndDo(System.IAsyncResult result) {
            return base.Channel.EndDo(result);
        }
        
        private System.IAsyncResult OnBeginDo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string doWhat = ((string)(inValues[0]));
            string para1 = ((string)(inValues[1]));
            bool isLogin = ((bool)(inValues[2]));
            return ((WF.DataServiceReference.WebServiceSoap)(this)).BeginDo(doWhat, para1, isLogin, callback, asyncState);
        }
        
        private object[] OnEndDo(System.IAsyncResult result) {
            string retVal = ((WF.DataServiceReference.WebServiceSoap)(this)).EndDo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDoCompleted(object state) {
            if ((this.DoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoCompleted(this, new DoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoAsync(string doWhat, string para1, bool isLogin) {
            this.DoAsync(doWhat, para1, isLogin, null);
        }
        
        public void DoAsync(string doWhat, string para1, bool isLogin, object userState) {
            if ((this.onBeginDoDelegate == null)) {
                this.onBeginDoDelegate = new BeginOperationDelegate(this.OnBeginDo);
            }
            if ((this.onEndDoDelegate == null)) {
                this.onEndDoDelegate = new EndOperationDelegate(this.OnEndDo);
            }
            if ((this.onDoCompletedDelegate == null)) {
                this.onDoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoCompleted);
            }
            base.InvokeAsync(this.onBeginDoDelegate, new object[] {
                        doWhat,
                        para1,
                        isLogin}, this.onEndDoDelegate, this.onDoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.DataServiceReference.WebServiceSoap.BeginDoNewNode(string fk_flow, int x, int y, string nodeName, bool isLogin, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoNewNode(fk_flow, x, y, nodeName, isLogin, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int WF.DataServiceReference.WebServiceSoap.EndDoNewNode(System.IAsyncResult result) {
            return base.Channel.EndDoNewNode(result);
        }
        
        private System.IAsyncResult OnBeginDoNewNode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fk_flow = ((string)(inValues[0]));
            int x = ((int)(inValues[1]));
            int y = ((int)(inValues[2]));
            string nodeName = ((string)(inValues[3]));
            bool isLogin = ((bool)(inValues[4]));
            return ((WF.DataServiceReference.WebServiceSoap)(this)).BeginDoNewNode(fk_flow, x, y, nodeName, isLogin, callback, asyncState);
        }
        
        private object[] OnEndDoNewNode(System.IAsyncResult result) {
            int retVal = ((WF.DataServiceReference.WebServiceSoap)(this)).EndDoNewNode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDoNewNodeCompleted(object state) {
            if ((this.DoNewNodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoNewNodeCompleted(this, new DoNewNodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoNewNodeAsync(string fk_flow, int x, int y, string nodeName, bool isLogin) {
            this.DoNewNodeAsync(fk_flow, x, y, nodeName, isLogin, null);
        }
        
        public void DoNewNodeAsync(string fk_flow, int x, int y, string nodeName, bool isLogin, object userState) {
            if ((this.onBeginDoNewNodeDelegate == null)) {
                this.onBeginDoNewNodeDelegate = new BeginOperationDelegate(this.OnBeginDoNewNode);
            }
            if ((this.onEndDoNewNodeDelegate == null)) {
                this.onEndDoNewNodeDelegate = new EndOperationDelegate(this.OnEndDoNewNode);
            }
            if ((this.onDoNewNodeCompletedDelegate == null)) {
                this.onDoNewNodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoNewNodeCompleted);
            }
            base.InvokeAsync(this.onBeginDoNewNodeDelegate, new object[] {
                        fk_flow,
                        x,
                        y,
                        nodeName,
                        isLogin}, this.onEndDoNewNodeDelegate, this.onDoNewNodeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.DataServiceReference.WebServiceSoap.BeginDoDrewLine(int from, int to, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoDrewLine(from, to, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool WF.DataServiceReference.WebServiceSoap.EndDoDrewLine(System.IAsyncResult result) {
            return base.Channel.EndDoDrewLine(result);
        }
        
        private System.IAsyncResult OnBeginDoDrewLine(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int from = ((int)(inValues[0]));
            int to = ((int)(inValues[1]));
            return ((WF.DataServiceReference.WebServiceSoap)(this)).BeginDoDrewLine(from, to, callback, asyncState);
        }
        
        private object[] OnEndDoDrewLine(System.IAsyncResult result) {
            bool retVal = ((WF.DataServiceReference.WebServiceSoap)(this)).EndDoDrewLine(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDoDrewLineCompleted(object state) {
            if ((this.DoDrewLineCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoDrewLineCompleted(this, new DoDrewLineCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoDrewLineAsync(int from, int to) {
            this.DoDrewLineAsync(from, to, null);
        }
        
        public void DoDrewLineAsync(int from, int to, object userState) {
            if ((this.onBeginDoDrewLineDelegate == null)) {
                this.onBeginDoDrewLineDelegate = new BeginOperationDelegate(this.OnBeginDoDrewLine);
            }
            if ((this.onEndDoDrewLineDelegate == null)) {
                this.onEndDoDrewLineDelegate = new EndOperationDelegate(this.OnEndDoDrewLine);
            }
            if ((this.onDoDrewLineCompletedDelegate == null)) {
                this.onDoDrewLineCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoDrewLineCompleted);
            }
            base.InvokeAsync(this.onBeginDoDrewLineDelegate, new object[] {
                        from,
                        to}, this.onEndDoDrewLineDelegate, this.onDoDrewLineCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.DataServiceReference.WebServiceSoap.BeginDoDropLine(int from, int to, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoDropLine(from, to, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool WF.DataServiceReference.WebServiceSoap.EndDoDropLine(System.IAsyncResult result) {
            return base.Channel.EndDoDropLine(result);
        }
        
        private System.IAsyncResult OnBeginDoDropLine(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int from = ((int)(inValues[0]));
            int to = ((int)(inValues[1]));
            return ((WF.DataServiceReference.WebServiceSoap)(this)).BeginDoDropLine(from, to, callback, asyncState);
        }
        
        private object[] OnEndDoDropLine(System.IAsyncResult result) {
            bool retVal = ((WF.DataServiceReference.WebServiceSoap)(this)).EndDoDropLine(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDoDropLineCompleted(object state) {
            if ((this.DoDropLineCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoDropLineCompleted(this, new DoDropLineCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoDropLineAsync(int from, int to) {
            this.DoDropLineAsync(from, to, null);
        }
        
        public void DoDropLineAsync(int from, int to, object userState) {
            if ((this.onBeginDoDropLineDelegate == null)) {
                this.onBeginDoDropLineDelegate = new BeginOperationDelegate(this.OnBeginDoDropLine);
            }
            if ((this.onEndDoDropLineDelegate == null)) {
                this.onEndDoDropLineDelegate = new EndOperationDelegate(this.OnEndDoDropLine);
            }
            if ((this.onDoDropLineCompletedDelegate == null)) {
                this.onDoDropLineCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoDropLineCompleted);
            }
            base.InvokeAsync(this.onBeginDoDropLineDelegate, new object[] {
                        from,
                        to}, this.onEndDoDropLineDelegate, this.onDoDropLineCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.DataServiceReference.WebServiceSoap.BeginDoNewLabel(string fk_flow, int x, int y, string name, string lableId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoNewLabel(fk_flow, x, y, name, lableId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WF.DataServiceReference.WebServiceSoap.EndDoNewLabel(System.IAsyncResult result) {
            return base.Channel.EndDoNewLabel(result);
        }
        
        private System.IAsyncResult OnBeginDoNewLabel(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fk_flow = ((string)(inValues[0]));
            int x = ((int)(inValues[1]));
            int y = ((int)(inValues[2]));
            string name = ((string)(inValues[3]));
            string lableId = ((string)(inValues[4]));
            return ((WF.DataServiceReference.WebServiceSoap)(this)).BeginDoNewLabel(fk_flow, x, y, name, lableId, callback, asyncState);
        }
        
        private object[] OnEndDoNewLabel(System.IAsyncResult result) {
            string retVal = ((WF.DataServiceReference.WebServiceSoap)(this)).EndDoNewLabel(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDoNewLabelCompleted(object state) {
            if ((this.DoNewLabelCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoNewLabelCompleted(this, new DoNewLabelCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoNewLabelAsync(string fk_flow, int x, int y, string name, string lableId) {
            this.DoNewLabelAsync(fk_flow, x, y, name, lableId, null);
        }
        
        public void DoNewLabelAsync(string fk_flow, int x, int y, string name, string lableId, object userState) {
            if ((this.onBeginDoNewLabelDelegate == null)) {
                this.onBeginDoNewLabelDelegate = new BeginOperationDelegate(this.OnBeginDoNewLabel);
            }
            if ((this.onEndDoNewLabelDelegate == null)) {
                this.onEndDoNewLabelDelegate = new EndOperationDelegate(this.OnEndDoNewLabel);
            }
            if ((this.onDoNewLabelCompletedDelegate == null)) {
                this.onDoNewLabelCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoNewLabelCompleted);
            }
            base.InvokeAsync(this.onBeginDoNewLabelDelegate, new object[] {
                        fk_flow,
                        x,
                        y,
                        name,
                        lableId}, this.onEndDoNewLabelDelegate, this.onDoNewLabelCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.DataServiceReference.WebServiceSoap.BeginFlowTemplete_Gener(string fk_flow, bool islogin, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFlowTemplete_Gener(fk_flow, islogin, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WF.DataServiceReference.WebServiceSoap.EndFlowTemplete_Gener(System.IAsyncResult result) {
            return base.Channel.EndFlowTemplete_Gener(result);
        }
        
        private System.IAsyncResult OnBeginFlowTemplete_Gener(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fk_flow = ((string)(inValues[0]));
            bool islogin = ((bool)(inValues[1]));
            return ((WF.DataServiceReference.WebServiceSoap)(this)).BeginFlowTemplete_Gener(fk_flow, islogin, callback, asyncState);
        }
        
        private object[] OnEndFlowTemplete_Gener(System.IAsyncResult result) {
            string retVal = ((WF.DataServiceReference.WebServiceSoap)(this)).EndFlowTemplete_Gener(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFlowTemplete_GenerCompleted(object state) {
            if ((this.FlowTemplete_GenerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FlowTemplete_GenerCompleted(this, new FlowTemplete_GenerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FlowTemplete_GenerAsync(string fk_flow, bool islogin) {
            this.FlowTemplete_GenerAsync(fk_flow, islogin, null);
        }
        
        public void FlowTemplete_GenerAsync(string fk_flow, bool islogin, object userState) {
            if ((this.onBeginFlowTemplete_GenerDelegate == null)) {
                this.onBeginFlowTemplete_GenerDelegate = new BeginOperationDelegate(this.OnBeginFlowTemplete_Gener);
            }
            if ((this.onEndFlowTemplete_GenerDelegate == null)) {
                this.onEndFlowTemplete_GenerDelegate = new EndOperationDelegate(this.OnEndFlowTemplete_Gener);
            }
            if ((this.onFlowTemplete_GenerCompletedDelegate == null)) {
                this.onFlowTemplete_GenerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFlowTemplete_GenerCompleted);
            }
            base.InvokeAsync(this.onBeginFlowTemplete_GenerDelegate, new object[] {
                        fk_flow,
                        islogin}, this.onEndFlowTemplete_GenerDelegate, this.onFlowTemplete_GenerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.DataServiceReference.WebServiceSoap.BeginFlowTemplete_Load(string fk_flowSort, string path, bool islogin, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFlowTemplete_Load(fk_flowSort, path, islogin, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WF.DataServiceReference.WebServiceSoap.EndFlowTemplete_Load(System.IAsyncResult result) {
            return base.Channel.EndFlowTemplete_Load(result);
        }
        
        private System.IAsyncResult OnBeginFlowTemplete_Load(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fk_flowSort = ((string)(inValues[0]));
            string path = ((string)(inValues[1]));
            bool islogin = ((bool)(inValues[2]));
            return ((WF.DataServiceReference.WebServiceSoap)(this)).BeginFlowTemplete_Load(fk_flowSort, path, islogin, callback, asyncState);
        }
        
        private object[] OnEndFlowTemplete_Load(System.IAsyncResult result) {
            string retVal = ((WF.DataServiceReference.WebServiceSoap)(this)).EndFlowTemplete_Load(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFlowTemplete_LoadCompleted(object state) {
            if ((this.FlowTemplete_LoadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FlowTemplete_LoadCompleted(this, new FlowTemplete_LoadCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FlowTemplete_LoadAsync(string fk_flowSort, string path, bool islogin) {
            this.FlowTemplete_LoadAsync(fk_flowSort, path, islogin, null);
        }
        
        public void FlowTemplete_LoadAsync(string fk_flowSort, string path, bool islogin, object userState) {
            if ((this.onBeginFlowTemplete_LoadDelegate == null)) {
                this.onBeginFlowTemplete_LoadDelegate = new BeginOperationDelegate(this.OnBeginFlowTemplete_Load);
            }
            if ((this.onEndFlowTemplete_LoadDelegate == null)) {
                this.onEndFlowTemplete_LoadDelegate = new EndOperationDelegate(this.OnEndFlowTemplete_Load);
            }
            if ((this.onFlowTemplete_LoadCompletedDelegate == null)) {
                this.onFlowTemplete_LoadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFlowTemplete_LoadCompleted);
            }
            base.InvokeAsync(this.onBeginFlowTemplete_LoadDelegate, new object[] {
                        fk_flowSort,
                        path,
                        islogin}, this.onEndFlowTemplete_LoadDelegate, this.onFlowTemplete_LoadCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.DataServiceReference.WebServiceSoap.BeginGetDirection(string flowid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDirection(flowid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WF.DataServiceReference.WebServiceSoap.EndGetDirection(System.IAsyncResult result) {
            return base.Channel.EndGetDirection(result);
        }
        
        private System.IAsyncResult OnBeginGetDirection(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string flowid = ((string)(inValues[0]));
            return ((WF.DataServiceReference.WebServiceSoap)(this)).BeginGetDirection(flowid, callback, asyncState);
        }
        
        private object[] OnEndGetDirection(System.IAsyncResult result) {
            string retVal = ((WF.DataServiceReference.WebServiceSoap)(this)).EndGetDirection(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDirectionCompleted(object state) {
            if ((this.GetDirectionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDirectionCompleted(this, new GetDirectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDirectionAsync(string flowid) {
            this.GetDirectionAsync(flowid, null);
        }
        
        public void GetDirectionAsync(string flowid, object userState) {
            if ((this.onBeginGetDirectionDelegate == null)) {
                this.onBeginGetDirectionDelegate = new BeginOperationDelegate(this.OnBeginGetDirection);
            }
            if ((this.onEndGetDirectionDelegate == null)) {
                this.onEndGetDirectionDelegate = new EndOperationDelegate(this.OnEndGetDirection);
            }
            if ((this.onGetDirectionCompletedDelegate == null)) {
                this.onGetDirectionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDirectionCompleted);
            }
            base.InvokeAsync(this.onBeginGetDirectionDelegate, new object[] {
                        flowid}, this.onEndGetDirectionDelegate, this.onGetDirectionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.DataServiceReference.WebServiceSoap.BeginGetLables(string flowid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLables(flowid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WF.DataServiceReference.WebServiceSoap.EndGetLables(System.IAsyncResult result) {
            return base.Channel.EndGetLables(result);
        }
        
        private System.IAsyncResult OnBeginGetLables(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string flowid = ((string)(inValues[0]));
            return ((WF.DataServiceReference.WebServiceSoap)(this)).BeginGetLables(flowid, callback, asyncState);
        }
        
        private object[] OnEndGetLables(System.IAsyncResult result) {
            string retVal = ((WF.DataServiceReference.WebServiceSoap)(this)).EndGetLables(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLablesCompleted(object state) {
            if ((this.GetLablesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLablesCompleted(this, new GetLablesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLablesAsync(string flowid) {
            this.GetLablesAsync(flowid, null);
        }
        
        public void GetLablesAsync(string flowid, object userState) {
            if ((this.onBeginGetLablesDelegate == null)) {
                this.onBeginGetLablesDelegate = new BeginOperationDelegate(this.OnBeginGetLables);
            }
            if ((this.onEndGetLablesDelegate == null)) {
                this.onEndGetLablesDelegate = new EndOperationDelegate(this.OnEndGetLables);
            }
            if ((this.onGetLablesCompletedDelegate == null)) {
                this.onGetLablesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLablesCompleted);
            }
            base.InvokeAsync(this.onBeginGetLablesDelegate, new object[] {
                        flowid}, this.onEndGetLablesDelegate, this.onGetLablesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.DataServiceReference.WebServiceSoap.BeginDoSaveFlow(string paras, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoSaveFlow(paras, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void WF.DataServiceReference.WebServiceSoap.EndDoSaveFlow(System.IAsyncResult result) {
            base.Channel.EndDoSaveFlow(result);
        }
        
        private System.IAsyncResult OnBeginDoSaveFlow(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string paras = ((string)(inValues[0]));
            return ((WF.DataServiceReference.WebServiceSoap)(this)).BeginDoSaveFlow(paras, callback, asyncState);
        }
        
        private object[] OnEndDoSaveFlow(System.IAsyncResult result) {
            ((WF.DataServiceReference.WebServiceSoap)(this)).EndDoSaveFlow(result);
            return null;
        }
        
        private void OnDoSaveFlowCompleted(object state) {
            if ((this.DoSaveFlowCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoSaveFlowCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoSaveFlowAsync(string paras) {
            this.DoSaveFlowAsync(paras, null);
        }
        
        public void DoSaveFlowAsync(string paras, object userState) {
            if ((this.onBeginDoSaveFlowDelegate == null)) {
                this.onBeginDoSaveFlowDelegate = new BeginOperationDelegate(this.OnBeginDoSaveFlow);
            }
            if ((this.onEndDoSaveFlowDelegate == null)) {
                this.onEndDoSaveFlowDelegate = new EndOperationDelegate(this.OnEndDoSaveFlow);
            }
            if ((this.onDoSaveFlowCompletedDelegate == null)) {
                this.onDoSaveFlowCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoSaveFlowCompleted);
            }
            base.InvokeAsync(this.onBeginDoSaveFlowDelegate, new object[] {
                        paras}, this.onEndDoSaveFlowDelegate, this.onDoSaveFlowCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.DataServiceReference.WebServiceSoap.BeginDoSaveFlowNode(int nodeID, int x, int y, string nodeName, int nodeType, bool islogin, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoSaveFlowNode(nodeID, x, y, nodeName, nodeType, islogin, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void WF.DataServiceReference.WebServiceSoap.EndDoSaveFlowNode(System.IAsyncResult result) {
            base.Channel.EndDoSaveFlowNode(result);
        }
        
        private System.IAsyncResult OnBeginDoSaveFlowNode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int nodeID = ((int)(inValues[0]));
            int x = ((int)(inValues[1]));
            int y = ((int)(inValues[2]));
            string nodeName = ((string)(inValues[3]));
            int nodeType = ((int)(inValues[4]));
            bool islogin = ((bool)(inValues[5]));
            return ((WF.DataServiceReference.WebServiceSoap)(this)).BeginDoSaveFlowNode(nodeID, x, y, nodeName, nodeType, islogin, callback, asyncState);
        }
        
        private object[] OnEndDoSaveFlowNode(System.IAsyncResult result) {
            ((WF.DataServiceReference.WebServiceSoap)(this)).EndDoSaveFlowNode(result);
            return null;
        }
        
        private void OnDoSaveFlowNodeCompleted(object state) {
            if ((this.DoSaveFlowNodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoSaveFlowNodeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoSaveFlowNodeAsync(int nodeID, int x, int y, string nodeName, int nodeType, bool islogin) {
            this.DoSaveFlowNodeAsync(nodeID, x, y, nodeName, nodeType, islogin, null);
        }
        
        public void DoSaveFlowNodeAsync(int nodeID, int x, int y, string nodeName, int nodeType, bool islogin, object userState) {
            if ((this.onBeginDoSaveFlowNodeDelegate == null)) {
                this.onBeginDoSaveFlowNodeDelegate = new BeginOperationDelegate(this.OnBeginDoSaveFlowNode);
            }
            if ((this.onEndDoSaveFlowNodeDelegate == null)) {
                this.onEndDoSaveFlowNodeDelegate = new EndOperationDelegate(this.OnEndDoSaveFlowNode);
            }
            if ((this.onDoSaveFlowNodeCompletedDelegate == null)) {
                this.onDoSaveFlowNodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoSaveFlowNodeCompleted);
            }
            base.InvokeAsync(this.onBeginDoSaveFlowNodeDelegate, new object[] {
                        nodeID,
                        x,
                        y,
                        nodeName,
                        nodeType,
                        islogin}, this.onEndDoSaveFlowNodeDelegate, this.onDoSaveFlowNodeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WF.DataServiceReference.WebServiceSoap.BeginUploadfile(WF.DataServiceReference.UploadfileRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadfile(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginUploadfile(byte[] FileByte, string fileName, System.AsyncCallback callback, object asyncState) {
            WF.DataServiceReference.UploadfileRequest inValue = new WF.DataServiceReference.UploadfileRequest();
            inValue.FileByte = FileByte;
            inValue.fileName = fileName;
            return ((WF.DataServiceReference.WebServiceSoap)(this)).BeginUploadfile(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WF.DataServiceReference.UploadfileResponse WF.DataServiceReference.WebServiceSoap.EndUploadfile(System.IAsyncResult result) {
            return base.Channel.EndUploadfile(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndUploadfile(System.IAsyncResult result) {
            WF.DataServiceReference.UploadfileResponse retVal = ((WF.DataServiceReference.WebServiceSoap)(this)).EndUploadfile(result);
            return retVal.UploadfileResult;
        }
        
        private System.IAsyncResult OnBeginUploadfile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            byte[] FileByte = ((byte[])(inValues[0]));
            string fileName = ((string)(inValues[1]));
            return this.BeginUploadfile(FileByte, fileName, callback, asyncState);
        }
        
        private object[] OnEndUploadfile(System.IAsyncResult result) {
            string retVal = this.EndUploadfile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUploadfileCompleted(object state) {
            if ((this.UploadfileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadfileCompleted(this, new UploadfileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadfileAsync(byte[] FileByte, string fileName) {
            this.UploadfileAsync(FileByte, fileName, null);
        }
        
        public void UploadfileAsync(byte[] FileByte, string fileName, object userState) {
            if ((this.onBeginUploadfileDelegate == null)) {
                this.onBeginUploadfileDelegate = new BeginOperationDelegate(this.OnBeginUploadfile);
            }
            if ((this.onEndUploadfileDelegate == null)) {
                this.onEndUploadfileDelegate = new EndOperationDelegate(this.OnEndUploadfile);
            }
            if ((this.onUploadfileCompletedDelegate == null)) {
                this.onUploadfileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadfileCompleted);
            }
            base.InvokeAsync(this.onBeginUploadfileDelegate, new object[] {
                        FileByte,
                        fileName}, this.onEndUploadfileDelegate, this.onUploadfileCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override WF.DataServiceReference.WebServiceSoap CreateChannel() {
            return new WebServiceSoapClientChannel(this);
        }
        
        private class WebServiceSoapClientChannel : ChannelBase<WF.DataServiceReference.WebServiceSoap>, WF.DataServiceReference.WebServiceSoap {
            
            public WebServiceSoapClientChannel(System.ServiceModel.ClientBase<WF.DataServiceReference.WebServiceSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetDTOfWorkList(string fk_flow, string workid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = fk_flow;
                _args[1] = workid;
                System.IAsyncResult _result = base.BeginInvoke("GetDTOfWorkList", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetDTOfWorkList(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetDTOfWorkList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLetAdminLogin(string lang, bool islogin, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = lang;
                _args[1] = islogin;
                System.IAsyncResult _result = base.BeginInvoke("LetAdminLogin", _args, callback, asyncState);
                return _result;
            }
            
            public void EndLetAdminLogin(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("LetAdminLogin", _args, result);
            }
            
            public System.IAsyncResult BeginWinOpenEns(string lang, string dotype, string fk_dept, string fk_emp, string enName, bool isLogin, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = lang;
                _args[1] = dotype;
                _args[2] = fk_dept;
                _args[3] = fk_emp;
                _args[4] = enName;
                _args[5] = isLogin;
                System.IAsyncResult _result = base.BeginInvoke("WinOpenEns", _args, callback, asyncState);
                return _result;
            }
            
            public string EndWinOpenEns(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("WinOpenEns", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRelativeUrl(string lang, string dotype, string fk_flow, string node1, string node2, bool isLogin, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = lang;
                _args[1] = dotype;
                _args[2] = fk_flow;
                _args[3] = node1;
                _args[4] = node2;
                _args[5] = isLogin;
                System.IAsyncResult _result = base.BeginInvoke("GetRelativeUrl", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetRelativeUrl(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetRelativeUrl", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRunSQLReturnTablePeng(string sql, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = sql;
                System.IAsyncResult _result = base.BeginInvoke("RunSQLReturnTablePeng", _args, callback, asyncState);
                return _result;
            }
            
            public WF.DataServiceReference.RunSQLReturnTablePengResponseRunSQLReturnTablePengResult EndRunSQLReturnTablePeng(System.IAsyncResult result) {
                object[] _args = new object[0];
                WF.DataServiceReference.RunSQLReturnTablePengResponseRunSQLReturnTablePengResult _result = ((WF.DataServiceReference.RunSQLReturnTablePengResponseRunSQLReturnTablePengResult)(base.EndInvoke("RunSQLReturnTablePeng", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRunSQLReturnTable(string sql, bool isLogin, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = sql;
                _args[1] = isLogin;
                System.IAsyncResult _result = base.BeginInvoke("RunSQLReturnTable", _args, callback, asyncState);
                return _result;
            }
            
            public string EndRunSQLReturnTable(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("RunSQLReturnTable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetFlowSort(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetFlowSort", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetFlowSort(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetFlowSort", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetFlowBySort(string sort, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = sort;
                System.IAsyncResult _result = base.BeginInvoke("GetFlowBySort", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetFlowBySort(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetFlowBySort", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetFlows(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetFlows", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetFlows(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetFlows", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetStationEmps(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetStationEmps", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetStationEmps(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetStationEmps", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMaintainStation(string pk, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = pk;
                System.IAsyncResult _result = base.BeginInvoke("MaintainStation", _args, callback, asyncState);
                return _result;
            }
            
            public string EndMaintainStation(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("MaintainStation", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMaintainDept(string pk, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = pk;
                System.IAsyncResult _result = base.BeginInvoke("MaintainDept", _args, callback, asyncState);
                return _result;
            }
            
            public string EndMaintainDept(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("MaintainDept", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMaintainEmp(string pk, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = pk;
                System.IAsyncResult _result = base.BeginInvoke("MaintainEmp", _args, callback, asyncState);
                return _result;
            }
            
            public string EndMaintainEmp(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("MaintainEmp", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRunSQL(string sql, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = sql;
                System.IAsyncResult _result = base.BeginInvoke("RunSQL", _args, callback, asyncState);
                return _result;
            }
            
            public int EndRunSQL(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("RunSQL", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDo(string doWhat, string para1, bool isLogin, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = doWhat;
                _args[1] = para1;
                _args[2] = isLogin;
                System.IAsyncResult _result = base.BeginInvoke("Do", _args, callback, asyncState);
                return _result;
            }
            
            public string EndDo(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("Do", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDoNewNode(string fk_flow, int x, int y, string nodeName, bool isLogin, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = fk_flow;
                _args[1] = x;
                _args[2] = y;
                _args[3] = nodeName;
                _args[4] = isLogin;
                System.IAsyncResult _result = base.BeginInvoke("DoNewNode", _args, callback, asyncState);
                return _result;
            }
            
            public int EndDoNewNode(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("DoNewNode", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDoDrewLine(int from, int to, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = from;
                _args[1] = to;
                System.IAsyncResult _result = base.BeginInvoke("DoDrewLine", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDoDrewLine(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DoDrewLine", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDoDropLine(int from, int to, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = from;
                _args[1] = to;
                System.IAsyncResult _result = base.BeginInvoke("DoDropLine", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDoDropLine(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DoDropLine", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDoNewLabel(string fk_flow, int x, int y, string name, string lableId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = fk_flow;
                _args[1] = x;
                _args[2] = y;
                _args[3] = name;
                _args[4] = lableId;
                System.IAsyncResult _result = base.BeginInvoke("DoNewLabel", _args, callback, asyncState);
                return _result;
            }
            
            public string EndDoNewLabel(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("DoNewLabel", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFlowTemplete_Gener(string fk_flow, bool islogin, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = fk_flow;
                _args[1] = islogin;
                System.IAsyncResult _result = base.BeginInvoke("FlowTemplete_Gener", _args, callback, asyncState);
                return _result;
            }
            
            public string EndFlowTemplete_Gener(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("FlowTemplete_Gener", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFlowTemplete_Load(string fk_flowSort, string path, bool islogin, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = fk_flowSort;
                _args[1] = path;
                _args[2] = islogin;
                System.IAsyncResult _result = base.BeginInvoke("FlowTemplete_Load", _args, callback, asyncState);
                return _result;
            }
            
            public string EndFlowTemplete_Load(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("FlowTemplete_Load", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDirection(string flowid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = flowid;
                System.IAsyncResult _result = base.BeginInvoke("GetDirection", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetDirection(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetDirection", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLables(string flowid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = flowid;
                System.IAsyncResult _result = base.BeginInvoke("GetLables", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetLables(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetLables", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDoSaveFlow(string paras, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = paras;
                System.IAsyncResult _result = base.BeginInvoke("DoSaveFlow", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDoSaveFlow(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DoSaveFlow", _args, result);
            }
            
            public System.IAsyncResult BeginDoSaveFlowNode(int nodeID, int x, int y, string nodeName, int nodeType, bool islogin, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = nodeID;
                _args[1] = x;
                _args[2] = y;
                _args[3] = nodeName;
                _args[4] = nodeType;
                _args[5] = islogin;
                System.IAsyncResult _result = base.BeginInvoke("DoSaveFlowNode", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDoSaveFlowNode(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DoSaveFlowNode", _args, result);
            }
            
            public System.IAsyncResult BeginUploadfile(WF.DataServiceReference.UploadfileRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("Uploadfile", _args, callback, asyncState);
                return _result;
            }
            
            public WF.DataServiceReference.UploadfileResponse EndUploadfile(System.IAsyncResult result) {
                object[] _args = new object[0];
                WF.DataServiceReference.UploadfileResponse _result = ((WF.DataServiceReference.UploadfileResponse)(base.EndInvoke("Uploadfile", _args, result)));
                return _result;
            }
        }
    }
}
