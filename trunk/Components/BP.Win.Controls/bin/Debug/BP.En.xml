<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BP.En</name>
    </assembly>
    <members>
        <member name="T:BP.DA.AppConfig">
            <summary>
            SysConfig 的摘要说明。
            </summary>
        </member>
        <member name="M:BP.DA.AppConfig.GetConfig(System.String)">
             <summary>
            取得配置NestedNamesSection内的相应key的内容
             </summary>
             <param name="key"></param>
             <returns></returns>
        </member>
        <member name="T:BP.DA.Depositary">
            <summary>
            保管位置
            </summary>
        </member>
        <member name="F:BP.DA.Depositary.Application">
            <summary>
            全体
            </summary>
        </member>
        <member name="F:BP.DA.Depositary.Session">
            <summary>
            对话
            </summary>
        </member>
        <member name="F:BP.DA.Depositary.None">
            <summary>
            不保管
            </summary>
        </member>
        <member name="T:BP.DA.Cash">
            <summary>
            Cash 的摘要说明。
            </summary>
        </member>
        <member name="M:BP.DA.Cash.GetObj(System.String,BP.DA.Depositary)">
            <summary>
            从 Cash 里面取出对象.
            </summary>
        </member>
        <member name="M:BP.DA.Cash.RemoveObj(System.String,BP.DA.Depositary)">
            <summary>
            RemoveObj
            </summary>
            <param name="key"></param>
            <param name="where"></param>
        </member>
        <member name="M:BP.DA.Cash.IsExits(System.String,BP.DA.Depositary)">
            <summary>
            判断对象是不是存在
            </summary>
        </member>
        <member name="T:BP.DA.DataType">
            <summary>
            DataType 的摘要说明。
            </summary>
        </member>
        <member name="F:BP.DA.DataType.AppString">
            <summary>
            string
            </summary>
        </member>
        <member name="F:BP.DA.DataType.AppInt">
            <summary>
            int
            </summary>
        </member>
        <member name="F:BP.DA.DataType.AppFloat">
            <summary>
            float
            </summary>
        </member>
        <member name="F:BP.DA.DataType.AppBoolean">
            <summary>
            AppBoolean
            </summary>
        </member>
        <member name="F:BP.DA.DataType.AppDouble">
            <summary>
            AppDouble
            </summary>
        </member>
        <member name="F:BP.DA.DataType.AppDate">
            <summary>
            AppDate
            </summary>
        </member>
        <member name="F:BP.DA.DataType.AppDatetime">
            <summary>
            AppDatetime
            </summary>
        </member>
        <member name="F:BP.DA.DataType.AppMoney">
            <summary>
            AppMoney
            </summary>
        </member>
        <member name="F:BP.DA.DataType.AppRate">
            <summary>
            率百分比。
            </summary>
        </member>
        <member name="M:BP.DA.DataType.GetPercent(System.Decimal,System.Decimal)">
            <summary>
            取道百分比
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:BP.DA.DataType.SpanDays(System.String,System.String)">
            <summary>
            返回 data1 - data2 的天数.
            </summary>
            <param name="data1">fromday</param>
            <param name="data2">today</param>
            <returns>相隔的天数</returns>
        </member>
        <member name="M:BP.DA.DataType.SpanQuarter(System.String,System.String)">
            <summary>
            返回 QuarterFrom - QuarterTo 的季度.
            </summary>
            <param name="QuarterFrom">QuarterFrom</param>
            <param name="QuarterTo">QuarterTo</param>
            <returns>相隔的季度</returns>
        </member>
        <member name="M:BP.DA.DataType.SpanDays(System.String)">
            <summary>
            到现在的天数。
            </summary>
            <param name="data1"></param>
            <returns></returns>
        </member>
        <member name="M:BP.DA.DataType.Parse(System.String)">
            <summary>
            得到一个日期,根据系统
            </summary>
            <param name="dataStr"></param>
            <returns></returns>
        </member>
        <member name="M:BP.DA.DataType.ParseSysDate2DateTime(System.String)">
            <summary>
            把BPsoft本系统日期格式转换为系统日期格式。
            </summary>
            <param name="sysDateformat">yyyy-MM-dd</param>
            <returns>DateTime</returns>
        </member>
        <member name="M:BP.DA.DataType.IsQS(System.Int32)">
            <summary>
            是不时奇数
            </summary>
            <param name="num">will judg value</param>
            <returns></returns>
        </member>
        <member name="P:BP.DA.DataType.SysDataFormat">
            <summary>
            系统定义的时间格式 yyyy-MM-dd .
            </summary>
        </member>
        <member name="P:BP.DA.DataType.CurrentData">
            <summary>
            当前的日期
            </summary>
        </member>
        <member name="P:BP.DA.DataType.CurrentAP">
            <summary>
            当前的会计期间
            </summary>
        </member>
        <member name="P:BP.DA.DataType.CurrentYear">
            <summary>
            当前的会计期间
            </summary>
        </member>
        <member name="P:BP.DA.DataType.CurrentAPOfJD">
            <summary>
            当前的季度期间yyyy-MM
            </summary>
        </member>
        <member name="P:BP.DA.DataType.CurrentAPOfJDOfFront">
            <summary>
            当前的季度的前一个季度.
            </summary>
        </member>
        <member name="P:BP.DA.DataType.CurrentAPOfPrevious">
            <summary>
            yyyy-JD
            </summary>
        </member>
        <member name="P:BP.DA.DataType.CurrentAPOfYear">
            <summary>
            当前的季度期间
            </summary>
        </member>
        <member name="P:BP.DA.DataType.CurrentDataTime">
            <summary>
            当前的日期时间
            </summary>
        </member>
        <member name="P:BP.DA.DataType.SysDataTimeFormat">
            <summary>
            系统定义日期时间格式 yyyy-MM-dd hh:mm
            </summary>
        </member>
        <member name="T:BP.DA.DBType">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="F:BP.DA.DBType.SQL2000">
            <summary>
            sql 2000
            </summary>
        </member>
        <member name="F:BP.DA.DBType.Oracle9i">
            <summary>
            oracle 9i 
            </summary>
        </member>
        <member name="F:BP.DA.DBType.Access">
            <summary>
            Access
            </summary>
        </member>
        <member name="F:BP.DA.DBType.Sybase">
            <summary>
            Sybase
            </summary>
        </member>
        <member name="F:BP.DA.DBType.DB2">
            <summary>
            DB2
            </summary>
        </member>
        <member name="T:BP.DA.DBAccess">
            <summary>
            数据库访问。
            这个类负责处理了。实体信息
            </summary>
        </member>
        <member name="M:BP.DA.DBAccess.GenerSequenceNumber(System.String)">
            <summary>
            序列号
            </summary>
            <returns>根据标识产生的序列号</returns>
        </member>
        <member name="M:BP.DA.DBAccess.GenerOID">
            <summary>
            产生一个OID
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.DA.DBAccess.DoCheckSession">
            <summary>
            检查session . 主要是判断是不是有用户登陆信息。
            </summary>
        </member>
        <member name="F:BP.DA.DBAccess.lock_SQL_RunSQL">
            <summary>
            运行SQL
            </summary>
        </member>
        <member name="M:BP.DA.DBAccess.RunSQL(System.String,System.Data.SqlClient.SqlConnection)">
            <summary>
            运行SQL, 返回影响的行数.
            </summary>
            <param name="sql">msSQL</param>
            <param name="conn">SqlConnection</param>
            <returns>返回运行结果。</returns>
        </member>
        <member name="M:BP.DA.DBAccess.RunSQL(System.String,System.Data.SqlClient.SqlConnection,System.Data.CommandType)">
            <summary>
            运行SQL , 返回影响的行数.
            </summary>
            <param name="sql">msSQL</param>
            <param name="conn">SqlConnection</param>
            <param name="sqlType">CommandType</param>
            <param name="pars">params</param>
            <returns>返回运行结果</returns>
        </member>
        <member name="F:BP.DA.DBAccess.lock_msSQL_ReturnTable">
            <summary>
            锁
            </summary>
        </member>
        <member name="M:BP.DA.DBAccess.RunSQLReturnTable(System.String,System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.Object[])">
            <summary>
            运行sql 返回Table
            </summary>
            <param name="msSQL">msSQL</param>
            <param name="sqlconn">连接</param>
            <param name="sqlType">类型</param>
            <param name="pars">参数</param>
            <returns>执行SQL返回的DataTable</returns>
        </member>
        <member name="M:BP.DA.DBAccess.RunSQLReturnTable(System.String,System.Data.SqlClient.SqlConnection)">
            <summary>
            运行sql 返回Table
            </summary>
            <param name="msSQL">要运行的sql</param>
            <param name="sqlconn">SqlConnection</param>
            <returns>DataTable</returns>
        </member>
        <member name="F:BP.DA.DBAccess.lock_oleSQL_ReturnTable">
            <summary>
            锁
            </summary>
        </member>
        <member name="M:BP.DA.DBAccess.RunSQLReturnTable(System.String,System.Data.OleDb.OleDbConnection,System.Data.CommandType,System.Object[])">
            <summary>
            运行sql 返回Table
            </summary>
            <param name="oleSQL">oleSQL</param>
            <param name="oleconn">连接</param>
            <param name="sqlType">类型</param>
            <param name="pars">参数</param>
            <returns>执行SQL返回的DataTable</returns>
        </member>
        <member name="M:BP.DA.DBAccess.RunSQLReturnTable(System.String,System.Data.OleDb.OleDbConnection)">
            <summary>
            运行sql 返回Table
            </summary>
            <param name="oleSQL">要运行的sql</param>
            <param name="sqlconn">OleDbConnection</param>
            <returns>DataTable</returns>
        </member>
        <member name="F:BP.DA.DBAccess.lock_oraSQL_ReturnTable">
            <summary>
            lock
            </summary>
        </member>
        <member name="M:BP.DA.DBAccess.RunSQLReturnTable(System.String,System.Data.OracleClient.OracleConnection,System.Data.CommandType,System.Object[])">
            <summary>
            传递一个oraSQL, OracleConnection, CommandType
            </summary>
            <param name="oraSQL">oraSQL</param>
            <param name="oraconn">oraconn</param>
            <param name="sqlType">sqlType</param>
            <param name="pars">pars</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:BP.DA.DBAccess.RunSQLReturnTable(System.String)">
            <summary>
            传递一个select 语句返回一个查询结果集合。
            </summary>
            <param name="sql">select sql</param>
            <returns>查询结果集合DataTable</returns>
        </member>
        <member name="M:BP.DA.DBAccess.RunSQLReturnDataSet(System.String)">
            <summary>
            传递一个select 语句返回一个查询DataSet集合
            </summary>
            <param name="sql">select sql</param>
            <returns>查询结果集合DataSet</returns>
        </member>
        <member name="M:BP.DA.DBAccess.RunSQLReturnTable(System.String,System.String,System.String)">
            <summary>
            传递一个select 语句返回一个查询结果集合。
            用到，当你不知道，数据库连接类型时，你就可以传递多个值，上系统配置决定执行那个 select 语句。
            </summary>
            <param name="msSQL">msSQL</param>
            <param name="oleSQL">oleSQL</param>
            <param name="oracleSQL">oracleSQL</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:BP.DA.DBAccess.RunSQLReturnValFloat(System.String,System.Single)">
            <summary>
            sdfsd
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:BP.DA.DBAccess.RunSQLReturnValFloat(System.String)">
            <summary>
            sdfsd
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:BP.DA.DBAccess.RunSQLReturnValInt(System.String,System.Int32)">
            <summary>
            sdfsd
            </summary>
            <param name="sql"></param>
            <param name="IsNullReturnVal"></param>
            <returns></returns>
        </member>
        <member name="M:BP.DA.DBAccess.RunSQLReturnVal(System.String,System.Data.OleDb.OleDbConnection)">
            <summary>
            查询单个值的方法
            </summary>
            <param name="sql">sql</param>
            <param name="conn">OleDbConnection</param>
            <returns>object</returns>
        </member>
        <member name="M:BP.DA.DBAccess.RunSQLReturnVal(System.String,System.Data.OleDb.OleDbConnection,System.Data.CommandType,System.Object[])">
            <summary>
            查询单个值的方法
            </summary>
            <param name="sql">sql</param>
            <param name="conn">OleDbConnection</param>
            <param name="sqlType">CommandType</param>
            <param name="pars">pars</param>
            <returns>object</returns>
        </member>
        <member name="M:BP.DA.DBAccess.RunSQLReturnVal(System.String,System.Data.SqlClient.SqlConnection)">
            <summary>
            查询单个值的方法
            </summary>
            <param name="sql">sql</param>
            <param name="conn">SqlConnection</param>
            <returns>object</returns>
        </member>
        <member name="M:BP.DA.DBAccess.RunSQLReturnVal(System.String,System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.Object[])">
            <summary>
            查询单个值的方法
            </summary>
            <param name="sql">sql</param>
            <param name="conn">SqlConnection</param>
            <param name="sqlType">CommandType</param>
            <param name="pars">pars</param>
            <returns>object</returns>
        </member>
        <member name="M:BP.DA.DBAccess.IsExits(System.String)">
            <summary>
            检查是不是存在
            </summary>
            <param name="selectSQL"></param>
            <returns>检查是不是存在</returns>
        </member>
        <member name="M:BP.DA.DBAccess.IsExits(System.String,System.String,System.String)">
            <summary>
            检查是不是存在
            </summary>
            <param name="msSQL">msSQL</param>
            <param name="oracleSQL">oracleSQL</param>
            <returns>检查是不是存在</returns>
        </member>
        <member name="M:BP.DA.DBAccessOfODBC.IsExits(System.String)">
            <summary>
            检查是不是存在
            </summary>
        </member>
        <member name="M:BP.DA.DBAccessOfODBC.RunSQLReturnVal(System.String)">
            <summary>
            运行select sql, 返回一个值。
            </summary>
            <param name="sql">select sql</param>
            <returns>返回的值object</returns>
        </member>
        <member name="M:BP.DA.DBAccessOfODBC.RunSQLReturnVal(System.String,System.Data.CommandType,System.Object[])">
            <summary>
            运行select sql, 返回一个值。
            </summary>
            <param name="sql">select sql</param>
            <param name="sqlType">CommandType</param>
            <param name="pars">params</param>
            <returns>返回的值object</returns>
        </member>
        <member name="T:BP.DA.DBAccessOfOLE">
            <summary>
            关于OLE 的连接
            </summary>
        </member>
        <member name="M:BP.DA.DBAccessOfOLE.IsExits(System.String)">
            <summary>
            检查是不是存在
            </summary>
            <param name="selectSQL"></param>
            <returns>检查是不是存在</returns>
        </member>
        <member name="M:BP.DA.DBAccessOfOLE.RunSQLReturnTable(System.String)">
            <summary>
            运行查询语句返回Table
            </summary>
            <param name="sql">select sql</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:BP.DA.DBAccessOfOLE.RunSQLReturnTable(System.String,System.Data.CommandType,System.Object[])">
            <summary>
            运行查询语句返回Table
            </summary>
            <param name="sql">select sql</param>
            <param name="sqlType">CommandType</param>
            <param name="pars">pareas</param>
            <returns>DataTable</returns>
        </member>
        <member name="T:BP.DA.DBAccessOfMSSQL2000">
            <summary>
            关于DBAccessOfSQLServer2000 的连接
            </summary>
        </member>
        <member name="M:BP.DA.DBAccessOfMSSQL2000.IsExits(System.String)">
            <summary>
            检查是不是存在
            </summary>
            <param name="selectSQL"></param>
            <returns>检查是不是存在</returns>
        </member>
        <member name="P:BP.DA.DBAccessOfMSSQL2000.GetSingleConn">
            <summary>
            取出当前的 连接。
            </summary>
        </member>
        <member name="T:BP.DA.DBAccessOfOracle9i">
            <summary>
            Oracle9i 的访问
            </summary>
        </member>
        <member name="M:BP.DA.DBAccessOfOracle9i.IsExits(System.String)">
            <summary>
            检查是不是存在
            </summary>
            <param name="selectSQL"></param>
            <returns>检查是不是存在</returns>
        </member>
        <member name="M:BP.DA.DBAccessOfOracle9i.RunSQLReturnVal(System.String)">
            <summary>
            运行sql 返回一个object .
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:BP.DA.DBAccessOfOracle9i.RunSQLReturnFloatVal(System.String,System.Single)">
            <summary>
            运行sql 返回float....
            </summary>
            <param name="sql">要运行的sql</param>
            <param name="isNullAsVal">如果是Null, 返回的信息.</param>
            <returns></returns>
        </member>
        <member name="T:BP.DA.DBProcedure">
            <summary>
            DBProcedure 的摘要说明。
            </summary>
        </member>
        <member name="M:BP.DA.DBProcedure.RunSP(System.String,System.Data.SqlClient.SqlConnection)">
            <summary>
            运行存储过程,没有Para。
            返回影响的行
            </summary>
        </member>
        <member name="M:BP.DA.DBProcedure.RunSP(System.String,BP.DA.Paras,System.Data.SqlClient.SqlConnection)">
            <summary>
            运行存储过程,有Para。返回影响的行。
            </summary>
            <param name="spName"></param>
            <param name="conn"></param>
            <param name="paras"></param>
        </member>
        <member name="M:BP.DA.DBProcedure.RunSPReturnDataTable(System.String,System.Data.SqlClient.SqlConnection)">
            <summary>
            运行存储过程返回Table
            </summary>
            <param name="spName">存储过程名称</param>		 
            <returns>执行后的Table</returns>
        </member>
        <member name="M:BP.DA.DBProcedure.RunSPReturnDataTable(System.String,BP.DA.Paras)">
            <summary>
            运行存储过程返回Table
            </summary>
            <param name="spName">存储过程名称</param>
            <param name="paras">参说集合</param>
            <returns>执行后的Table</returns>
        </member>
        <member name="M:BP.DA.DBProcedure.RunSPReturnDataTable(System.String,BP.DA.Paras,System.Data.SqlClient.SqlConnection)">
            <summary>
            运行存储过程返回Table。
            </summary>
            <param name="spName"></param>
            <param name="paras"></param>
            <param name="conn"></param>
            <returns></returns>
        </member>
        <member name="T:BP.DA.DBUrlType">
            <summary>
            连接到哪个库上．
             他们存放在 web.config 的列表内．
            </summary>
        </member>
        <member name="F:BP.DA.DBUrlType.AppCenterDSN">
            <summary>
            主要的应用程序
            </summary>
        </member>
        <member name="F:BP.DA.DBUrlType.DBAccessOfOracle9i">
            <summary>
            DBAccessOfOracle9i
            </summary>
        </member>
        <member name="F:BP.DA.DBUrlType.DBAccessOfMSSQL2000">
            <summary>
            DBAccessOfMSSQL2000
            </summary>
        </member>
        <member name="F:BP.DA.DBUrlType.DBAccessOfOLE">
            <summary>
            access的连接．
            </summary>
        </member>
        <member name="T:BP.DA.DBUrl">
            <summary>
            DBUrl 的摘要说明。
            </summary>
        </member>
        <member name="M:BP.DA.DBUrl.#ctor">
            <summary>
            连接
            </summary>
        </member>
        <member name="M:BP.DA.DBUrl.#ctor(BP.DA.DBUrlType)">
            <summary>
            连接
            </summary>
            <param name="type">连接type</param>
        </member>
        <member name="F:BP.DA.DBUrl._DBUrlType">
            <summary>
            默认值
            </summary>
        </member>
        <member name="P:BP.DA.DBUrl.DBUrlType">
            <summary>
            要连接的到的库。
            </summary>
        </member>
        <member name="P:BP.DA.DBUrl.DBType">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="T:BP.DA.BPException">
            <summary>
            BPException 的摘要说明。
            异常
            </summary>
        </member>
        <member name="T:BP.DA.IDTS">
            <summary>
            DTS 的摘要说明。
            </summary>
        </member>
        <member name="T:BP.DA.LogType">
            <summary>
            信息类型
            </summary>
        </member>
        <member name="F:BP.DA.LogType.Info">
            <summary>
            提示
            </summary>
        </member>
        <member name="F:BP.DA.LogType.Warning">
            <summary>
            警告
            </summary>
        </member>
        <member name="F:BP.DA.LogType.Error">
            <summary>
            错误
            </summary>
        </member>
        <member name="T:BP.DA.Log">
            <summary>
            日志
            </summary>
        </member>
        <member name="M:BP.DA.Log.WriteLine(System.String,BP.DA.LogType,System.String)">
            <summary>
            写入日志
            </summary>
            <param name="EventType">日志的类型</param>
            <param name="type">错误类型</param>x
            <param name="info">日志信息</param>
        </member>
        <member name="M:BP.DA.Log.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="LogFileName"></param>
        </member>
        <member name="M:BP.DA.Log.GetLogFileName(System.String)">
            <summary>
            取得Log的文件路径和文件名
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:BP.DA.Log.WriteLine(System.String)">
            <summary>
            写一行日志
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:BP.DA.Log.WriteLine(BP.DA.LogType,System.String)">
            <summary>
            写一行日志
            </summary>
            <param name="logtype"></param>
            <param name="message"></param>
        </member>
        <member name="P:BP.DA.Log.UserName">
            <summary>
            用户
            </summary>
        </member>
        <member name="T:BP.Web.Controls.NamesOfCheckBtn">
            <summary>
            名称NamesOfCheckBtn
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfCheckBtn.SelectAll">
            <summary>
            SelectAll
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfCheckBtn.SelectNone">
            <summary>
            SelectNone
            </summary>
        </member>
        <member name="T:BP.Web.Controls.NamesOfBtn">
            <summary>
            系统自己定义的名称NamesOfBtn
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.DataIO">
            <summary>
            数据导入导出。
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.Up">
            <summary>
            上升
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.Upload">
            <summary>
            上传
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.Down">
            <summary>
            下降
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.Balance">
            <summary>
            不变化
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.Chart">
            <summary>
            图形
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.DTS">
            <summary>
            调度
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.ChoseCols">
            <summary>
            选择列查询
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.Next">
            <summary>
            下一个
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.Previous">
            <summary>
            上一个
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.Send">
            <summary>
            发送
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.Reply">
            <summary>
            回复
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.Forward">
            <summary>
            转发
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.Add">
            <summary>
            Add
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.Adjunct">
            <summary>
            Adjunct
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.AllotTask">
            <summary>
            AllotTask
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.Apply">
            <summary>
            Apply
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.ApplyTask">
            <summary>
            Btn_ApplyTask
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.Back">
            <summary>
            Btn_Back
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.Cancel">
            <summary>
            Cancel
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.Card">
            <summary>
            Card
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.Close">
            <summary>
            close
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.Confirm">
            <summary>
            confim
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.Delete">
            <summary>
            delete
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.Edit">
            <summary>
            edit
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.EnList">
            <summary>
            list
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.Export">
            <summary>
            export
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.FileManager">
            <summary>
            FileManager
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.Help">
            <summary>
            help
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.Rpt">
            <summary>
            报表
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.Insert">
            <summary>
            insert
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.LogOut">
            <summary>
            logout
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.Messagers">
            <summary>
            messager
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.New">
            <summary>
            new
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.Print">
            <summary>
            pring
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.Refurbish">
            <summary>
            Refurbish
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.Reomve">
            <summary>
            remove
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.Save">
            <summary>
            save
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.SaveAndClose">
            <summary>
            save and close
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.SaveAndNew">
            <summary>
            save and new
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.SaveAsDraft">
            <summary>
            save as draft
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.Search">
            <summary>
            search
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.Statistic">
            <summary>
            统计
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.SelectAll">
            <summary>
            select all
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.SelectNone">
            <summary>
            select none
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.Selected">
            <summary>
            选择
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.Update">
            <summary>
            update
            </summary>
        </member>
        <member name="F:BP.Web.Controls.NamesOfBtn.View">
            <summary>
            view
            </summary>
        </member>
        <member name="T:BP.DA.Para">
            <summary>
            参数
            </summary>
        </member>
        <member name="M:BP.DA.Para.#ctor(System.String,System.Data.SqlDbType,System.Object)">
            <summary>
            构造参数
            </summary>
            <param name="_paraName">参数名称</param>
            <param name="_DAType">System.Data.SqlDbType</param>
            <param name="_val">值</param>
        </member>
        <member name="T:BP.DA.Paras">
            <summary>
            参数集合
            </summary>
        </member>
        <member name="F:BP.SysNoList.YSGS">
            <summary>
            沂水国税
            </summary>
        </member>
        <member name="F:BP.SysNoList.WF">
            <summary>
            沂水地税流程
            </summary>
        </member>
        <member name="T:BP.SystemConfig">
            <summary>
            系统配值
            </summary>
        </member>
        <member name="F:BP.SystemConfig.CS_AppSettings">
            <summary>
            封装了AppSettings
            </summary>		
        </member>
        <member name="F:BP.SystemConfig._IsBSsystem">
            <summary>
            是不是BS系统结构。
            </summary>
        </member>
        <member name="M:BP.SystemConfig.GetConfig(System.String)">
             <summary>
            取得配置NestedNamesSection内的相应key的内容
             </summary>
             <param name="key"></param>
             <returns></returns>
        </member>
        <member name="P:BP.SystemConfig.DeveloperName">
            <summary>
            开发商quan 称（）		 
            </summary>
        </member>
        <member name="P:BP.SystemConfig.DeveloperShortName">
            <summary>
            开发商简称		 
            </summary>
        </member>
        <member name="P:BP.SystemConfig.DeveloperTel">
            <summary>		 
            开发商电话。
            </summary>
        </member>
        <member name="P:BP.SystemConfig.DeveloperAddr">
            <summary>		
            开发商的地址。
            </summary>
        </member>
        <member name="P:BP.SystemConfig.SysLuanguage">
            <summary>
            系统语言（）
            对多语言的系统有效。
            </summary>
        </member>
        <member name="P:BP.SystemConfig.AppSettings">
            <summary>
            封装了AppSettings
            </summary>
        </member>
        <member name="P:BP.SystemConfig.ApplicationPath">
            <summary>
            应用程序路径
            </summary>
        </member>
        <member name="P:BP.SystemConfig.FilesPath">
            <summary>
            文件放置的路径
            </summary>
        </member>
        <member name="P:BP.SystemConfig.IsBSsystem">
            <summary>
            是不是BS系统结构。
            </summary>
        </member>
        <member name="P:BP.SystemConfig.SysNo">
            <summary>
            系统编号
            </summary>		 
        </member>
        <member name="P:BP.SystemConfig.SysName">
            <summary>
            系统名称
            </summary>
        </member>
        <member name="P:BP.SystemConfig.PageOfLostSession">
            <summary>
            丢失session 到的路径.
            </summary>
        </member>
        <member name="P:BP.SystemConfig.LogPath">
            <summary>
            日志路径
            </summary>
        </member>
        <member name="P:BP.SystemConfig.TopNum">
            <summary>
            系统名称
            </summary>
        </member>
        <member name="P:BP.SystemConfig.ServiceTel">
            <summary>
            服务电话
            </summary>
        </member>
        <member name="P:BP.SystemConfig.ServiceMail">
            <summary>
            服务E-mail
            </summary>
        </member>
        <member name="P:BP.SystemConfig.ThirdPartySoftWareKey">
            <summary>
            第3方软件
            </summary>
        </member>
        <member name="P:BP.SystemConfig.IsDebug">
            <summary>
            是否 debug 状态
            </summary>
        </member>
        <member name="P:BP.SystemConfig.IsMultiSys">
            <summary>
            是不是多系统工作。
            </summary>
        </member>
        <member name="P:BP.SystemConfig.IsMultiLanguageSys">
            <summary>
            是不是多语言版本
            </summary>
        </member>
        <member name="P:BP.SystemConfig.CustomerName">
            <summary>
            客户名称
            </summary>
        </member>
        <member name="P:BP.SystemConfig.CustomerShortName">
            <summary>
            客户简称
            </summary>
        </member>
        <member name="P:BP.SystemConfig.CustomerAddr">
            <summary>
            客户地址
            </summary>
        </member>
        <member name="P:BP.SystemConfig.CustomerTel">
            <summary>
            客户电话
            </summary>
        </member>
        <member name="P:BP.SystemConfig.AppCenterDBType">
            <summary>
            获取主应用程序的数据库类型．
            </summary>
        </member>
        <member name="T:BP.En.Base.EntityNoNameUrlAttr">
            <summary>
            连接实体。
            </summary>
        </member>
        <member name="T:BP.En.Base.EntityNoNameAttr">
            <summary>
            属性列表
            </summary>
        </member>
        <member name="T:BP.En.Base.EntityNoAttr">
            <summary>
            属性
            </summary>
        </member>
        <member name="F:BP.En.Base.EntityNoAttr.No">
            <summary>
            编号
            </summary>
        </member>
        <member name="F:BP.En.Base.EntityNoNameAttr.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="T:BP.En.Base.EntityNoNameUrl">
            <summary>
            NoEntity 的摘要说明。
            </summary>
        </member>
        <member name="T:BP.En.Base.EntityNoName">
            <summary>
            NoEntity 的摘要说明。
            </summary>
        </member>
        <member name="T:BP.En.Base.EntityNo">
            <summary>
            NoEntity 的摘要说明。
            </summary>
        </member>
        <member name="T:BP.En.Base.Entity">
            <summary>
            Entity 的摘要说明。
            </summary>	
        </member>
        <member name="T:BP.En.Base.EnObj">
            <summary>
            Entity 的摘要说明。
            </summary>	
        </member>
        <member name="M:BP.En.Base.EnObj.GetMapExtAttrByKey(System.String)">
            <summary>
            取出Map 的扩展属性。
            用于第3方的扩展属性开发。
            </summary>
            <param name="key">属性Key</param>
            <returns>设置的属性</returns>
        </member>
        <member name="M:BP.En.Base.EnObj.CreateInstance">
            <summary>
            创建一个实例
            </summary>
            <returns>自身的实例</returns>
        </member>
        <member name="M:BP.En.Base.EnObj.ResetDefaultVal">
            <summary>
            重新设置默信息.
            </summary>
        </member>
        <member name="M:BP.En.Base.EnObj.#ctor">
            <summary>
            实体
            </summary>
        </member>
        <member name="F:BP.En.Base.EnObj._row">
            <summary>
            实体的 map 信息。	
            </summary>		
        </member>
        <member name="M:BP.En.Base.EnObj.SetValByKey(System.String,System.Object)">
            <summary>
            设置object类型的值
            </summary>
            <param name="attrKey">attrKey</param>
            <param name="val">val</param>
        </member>
        <member name="M:BP.En.Base.EnObj.SetValByDesc(System.String,System.Object)">
            <summary>
            设置object类型的值
            </summary>
            <param name="attrKey">attrKey</param>
            <param name="val">val</param>
        </member>
        <member name="M:BP.En.Base.EnObj.SetValRefTextByKey(System.String,System.Object)">
            <summary>
            设置关联类型的值
            </summary>
            <param name="attrKey">attrKey</param>
            <param name="val">val</param>
        </member>
        <member name="M:BP.En.Base.EnObj.SetValByKey(System.String,System.Boolean)">
            <summary>
            设置bool类型的值
            </summary>
            <param name="attrKey">attrKey</param>
            <param name="val">val</param>
        </member>
        <member name="M:BP.En.Base.EnObj.SetDateValByKey(System.String,System.String)">
            <summary>
            设置日期类型的值
            </summary>
            <param name="attrKey">attrKey</param>
            <param name="val">val</param>
        </member>
        <member name="M:BP.En.Base.EnObj.GetValByKey(System.String)">
            <summary>
            取得Object
            </summary>
            <param name="attrKey"></param>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.EnObj.GetValStringByKey(System.String)">
            <summary>
            取得String
            </summary>
            <param name="attrKey"></param>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.EnObj.GetValHtmlStringByKey(System.String)">
            <summary>
            取到Html 信息。
            </summary>
            <param name="attrKey">attr</param>
            <returns>html.</returns>
        </member>
        <member name="M:BP.En.Base.EnObj.GetValRefTextByKey(System.String)">
            <summary>
            取得RefText属性
            </summary>
            <param name="attrKey"></param>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.EnObj.GetValIntByKey(System.String)">
            <summary>
            根据key 得到int val
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.EnObj.GetValBooleanByKey(System.String)">
            <summary>
            根据key 得到 bool val
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.EnObj.GetValFloatByKey(System.String,System.Int32)">
            <summary>
            根据key 得到flaot val
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.EnObj.GetValFloatByKey(System.String)">
            <summary>
            根据key 得到flaot val
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.EnObj.GetValDecimalByKey(System.String)">
            <summary>
            根据key 得到flaot val
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.EnObj.GetValAppDatetimeByKey(System.String)">
            <summary>
            sss
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:BP.En.Base.EnObj.GetNewEntities">
            <summary>
            新的实体s
            </summary>
        </member>
        <member name="P:BP.En.Base.EnObj._enMap">
            <summary>
            Map
            </summary>
        </member>
        <member name="P:BP.En.Base.EnObj.TheNameOfMapInCash">
            <summary>
            Map 的名称在cash 里面。
            </summary>
        </member>
        <member name="P:BP.En.Base.EnObj.EnMap">
            <summary>
            子类需要继承
            </summary>
        </member>
        <member name="P:BP.En.Base.EnObj.HisSysFileManagers">
            <summary>
            文件管理者
            </summary>
        </member>
        <member name="P:BP.En.Base.EnObj.IsEmpty">
            <summary>
            获取或者设置
            是不是空的实体.
            </summary>
        </member>
        <member name="P:BP.En.Base.EnObj.EnDesc">
            <summary>
            对这个实体的描述
            </summary>
        </member>
        <member name="P:BP.En.Base.EnObj.PKVal">
            <summary>
            取到主健值。如果它的主健不唯一，就返回第一个值。
            </summary>
        </member>
        <member name="P:BP.En.Base.EnObj.PKCount">
            <summary>
            如果只有一个主键,就返回PK,如果有多个就返回第一个.PK
            </summary>
        </member>
        <member name="P:BP.En.Base.EnObj.IsOIDEntity">
            <summary>
            是不是OIDEntity
            </summary>
        </member>
        <member name="P:BP.En.Base.EnObj.IsMIDEntity">
            <summary>
            是不是IsMIDEntity
            </summary>
        </member>
        <member name="P:BP.En.Base.EnObj.PK">
            <summary>
            如果只有一个主键,就返回PK,如果有多个就返回第一个.PK
            </summary>
        </member>
        <member name="P:BP.En.Base.EnObj.PKField">
            <summary>
             如果只有一个主键, 就返回PK,如果有多个就返回第一个.PK
             物理表中的字段。
            </summary>
        </member>
        <member name="P:BP.En.Base.EnObj.PKs">
            <summary>
            如果只有一个主键,就返回PK,如果有多个就返回第一个.PK
            </summary>
        </member>
        <member name="P:BP.En.Base.EnObj.PKVals">
            <summary>
            取到主健值。
            </summary>
        </member>
        <member name="M:BP.En.Base.Entity.GetEnsDaOfOneVSM(System.String)">
            <summary>
            取得实体集合多对多的实体集合.
            </summary>
            <param name="ensOfMMclassName">实体集合的类名称</param>
            <returns>数据实体</returns>
        </member>
        <member name="M:BP.En.Base.Entity.GetDtlEnsDa(System.String)">
            <summary>
            得到他的数据实体
            </summary>
            <param name="ClassName">类名称</param>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.Entity.GetDtlEnsDa(BP.En.Base.Entities)">
            <summary>
            取出他的数据实体
            </summary>
            <param name="ens">集合</param>
            <returns>执行后的实体信息</returns>
        </member>
        <member name="M:BP.En.Base.Entity.GetDtlsDatasOfArrayList">
            <summary>
            取出他的明细集合。
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.Entity.ExitsValueNum(System.String,System.String)">
            <summary>
            检查一个属性值是否存在于实体集合中
            这个方法经常用到在beforeinsert中。
            </summary>
            <param name="key">要检查的key.</param>
            <param name="val">要检查的key.对应的val</param>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.Entity.GenerNewNoByKey(System.String)">
            <summary>
            这个方法是为不分级字典，生成一个编号。根据制订的 属性.
            </summary>
            <param name="attrKey">属性</param>
            <returns>产生的序号</returns> 
        </member>
        <member name="M:BP.En.Base.Entity.GenerNewNoByKey(System.String,System.String,System.Object)">
            <summary>
            按照一列产生顺序号码。
            </summary>
            <param name="attrKey">要产生的列</param>
            <param name="attrGroupKey">分组的列名</param>
            <param name="FKVal">分组的主键</param>
            <returns></returns>		
        </member>
        <member name="M:BP.En.Base.Entity.GenerNewNoByKey(System.String,System.String,System.String,System.Object,System.Object)">
            <summary>
            按照两列查生顺序号码。
            </summary>
            <param name="attrKey"></param>
            <param name="attrGroupKey1"></param>
            <param name="attrGroupKey2"></param>
            <param name="attrGroupVal1"></param>
            <param name="attrGroupVal2"></param>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.Entity.DirectUpdate">
            <summary>
            直接更新
            </summary>
        </member>
        <member name="M:BP.En.Base.Entity.DirectInsert">
            <summary>
            直接的Insert
            </summary>
        </member>
        <member name="M:BP.En.Base.Entity.DirectDelete">
            <summary>
            直接的Delete
            </summary>
        </member>
        <member name="M:BP.En.Base.Entity.RetrieveFromDBSources">
            <summary>
            从DBSources直接查询
            </summary>
            <returns>查询的个数</returns>
        </member>
        <member name="M:BP.En.Base.Entity.Retrieve">
            <summary>
            按主键查询，返回查询出来的个数。
            如果查询出来的是多个实体，那把第一个实体给值。	 
            </summary>
            <returns>查询出来的个数</returns>
        </member>
        <member name="M:BP.En.Base.Entity.RetrieveNotSetValues">
            <summary>
            按照主键查询，查询出来的结果不赋给当前的实体。
            </summary>
            <returns>查询出来的个数</returns>
        </member>
        <member name="M:BP.En.Base.Entity.CheckDB">
            <summary>
            检查完整。
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="M:BP.En.Base.Entity.beforeDelete">
            <summary>
            删除之前要做的工作
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.Entity.beforeInsert">
            <summary>
            在插入之前要做的工作。
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.Entity.Insert">
            <summary>
            Insert .
            </summary>
        </member>
        <member name="M:BP.En.Base.Entity.afterInsertUpdateAction">
            <summary>
            在更新与插入之后要做的工作.
            </summary>
        </member>
        <member name="M:BP.En.Base.Entity.verifyData">
            <summary>
            校验数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.Entity.Update">
            <summary>
            更新实体
            </summary>
        </member>
        <member name="M:BP.En.Base.Entity.Save">
            <summary>
            保存实体信息
            </summary>
        </member>
        <member name="P:BP.En.Base.Entity.GenerNewNo">
            <summary>
            生成一个编号
            </summary>
        </member>
        <member name="P:BP.En.Base.Entity.TheNameInCash">
            <summary>
            产生在内存里的名称.
            </summary>
            <returns></returns>
        </member>
        <member name="P:BP.En.Base.Entity.IsExits">
            <summary>
            判断是不是存在的方法.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.EntityNo.beforeInsert">
            <summary>
            Insert 之前的操作。
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.EntityNo.#ctor">
            <summary>
            事例化一个实体
            </summary>
        </member>
        <member name="M:BP.En.Base.EntityNo.#ctor(System.String)">
            <summary>
            通过编号得到实体。
            </summary>
            <param name="_no">编号</param>
        </member>
        <member name="M:BP.En.Base.EntityNo.RetrieveByNo">
            <summary>
            按 No 查询。
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.EntityNo.RetrieveByNo(System.String)">
            <summary>
            按 No 查询。
            </summary>
            <param name="_No">No</param>
            <returns></returns>
        </member>
        <member name="P:BP.En.Base.EntityNo.No">
            <summary>
            编号
            </summary>
        </member>
        <member name="M:BP.En.Base.EntityNoName.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:BP.En.Base.EntityNoName.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="_No"></param>
        </member>
        <member name="M:BP.En.Base.EntityNoName.RetrieveByName">
            <summary>
            安名称查询
            </summary>
            <returns>返回查询的Num</returns>
        </member>
        <member name="M:BP.En.Base.EntityNoName.RetrieveByLikeName(System.String)">
            <summary>
            按照名称模糊查询
            </summary>
            <param name="likeName">likeName</param>
            <returns>返回查询的Num</returns>
        </member>
        <member name="P:BP.En.Base.EntityNoName.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="M:BP.En.Base.EntityNoNameUrl.#ctor">
            <summary>
            连接实体
            </summary>
        </member>
        <member name="P:BP.En.Base.EntityNoNameUrl.Url">
            <summary>
            URL
            </summary>
        </member>
        <member name="P:BP.En.Base.EntityNoNameUrl.Target">
            <summary>
            目标
            </summary>
        </member>
        <member name="T:BP.En.Base.EntitiesNoName">
            <summary>
            EntitiesNoName
            </summary>
        </member>
        <member name="T:BP.En.Base.EntitiesNo">
            <summary>
            编号实体集合。
            </summary>
        </member>
        <member name="T:BP.En.Base.Entities">
            <summary>
            数据实体集合
            </summary>
        </member>
        <member name="M:BP.En.Base.Entities.InitCollectionByTable(System.Data.DataTable,System.String)">
            <summary>
            通过datatable 转换为实体集合这个Table其中一个列名称是主键
            </summary>
            <param name="dt">Table</param>
            <param name="fieldName">字段名称，这个字段时包含在table 中的主键 </param>
        </member>
        <member name="M:BP.En.Base.Entities.InitCollectionByTable(System.Data.DataTable)">
            <summary>
            通过datatable 转换为实体集合.
            这个Table 的结构需要与属性结构相同。
            </summary>
            <param name="dt">转换为Table</param>
        </member>
        <member name="M:BP.En.Base.Entities.Equals(BP.En.Base.Entities)">
            <summary>
            判断两个实体集合是不是相同.
            </summary>
            <param name="ens"></param>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.Entities.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:BP.En.Base.Entities.AddEntity(BP.En.Base.Entity)">
            <summary>
            将对象添加到集合尾处，如果对象已经存在，则不添加
            </summary>
            <param name="entity">要添加的对象</param>
            <returns>返回添加到的地方</returns>
        </member>
        <member name="M:BP.En.Base.Entities.Contains(BP.En.Base.Entity)">
            <summary>
            判断是不是包含指定的Entity .
            </summary>
            <param name="en"></param>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.Entities.Contains(System.Object)">
            <summary>
            是不是包含指定的PK
            </summary>
            <param name="pkVal"></param>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.Entities.GainIntersection(BP.En.Base.Entities)">
            <summary>
            取得当前集合于传过来的集合交集.
            </summary>
            <param name="ens">一个实体集合</param>
            <returns>比较后的集合</returns>
        </member>
        <member name="M:BP.En.Base.Entities.CreateInstance">
            <summary>
            创建立本身的一个实例.
            </summary>
            <returns>Entities</returns>
        </member>
        <member name="M:BP.En.Base.Entities.GetSumDecimalByKey(System.String)">
            <summary>
            求和
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.Entities.GetSumIntByKey(System.String)">
            <summary>
            求和
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.Entities.GetSumFloatByKey(System.String)">
            <summary>
            求和
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.Entities.RemoveEn(BP.En.Base.Entity)">
            <summary>
            从集合中删除该对象
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:BP.En.Base.Entities.Delete">
            <summary>
            删除集合内的对象
            </summary>
        </member>
        <member name="M:BP.En.Base.Entities.Update">
            <summary>
            更新集合内的对象
            </summary>
        </member>
        <member name="M:BP.En.Base.Entities.Save">
            <summary>
            保存
            </summary>
        </member>
        <member name="M:BP.En.Base.Entities.RetrieveByKeyReturnTable(System.String,BP.En.Base.Attrs)">
            <summary>
            按照关键字查询。
            说明这里是用Attrs接受
            </summary>
            <param name="key">关键字</param>
            <param name="al">实体</param>
            <returns>返回Table</returns>
        </member>
        <member name="M:BP.En.Base.Entities.RetrieveByKey(System.String)">
            <summary>
            按照KEY 查找。
            </summary>
            <param name="keyVal">KEY</param>
            <returns>返回朝找出来的个数。</returns>
        </member>
        <member name="M:BP.En.Base.Entities.FlodInCash">
            <summary>
            把全部的信息调入
            </summary>
            <returns>调入内存的个数</returns>
        </member>
        <member name="M:BP.En.Base.Entities.Retrieve(System.String)">
            <summary>
             查询出来，包涵pks 的字串。
             比例："001,002,003"
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.Entities.RetrieveAll">
            <summary>
            查询全部。
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.Entities.RetrieveAll(System.Int32)">
            <summary>
            按照最大个数查询。
            </summary>
            <param name="MaxNum">最大NUM</param>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.Entities.RetrieveAllToTable">
            <summary>
            查询全部的结果放到DataTable。
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.Entities.RetrieveAllDtlToDataSet">
            <summary>
            查询出来他的明细与明细的明细。
            并编辑他们之间的关系。
            </summary>
            <returns>编辑好的，实体明细，以及实体明细的明细。</returns>
        </member>
        <member name="M:BP.En.Base.Entities.AddRefDtl(System.Data.DataSet,BP.En.Base.Entity,BP.En.Base.Entity,BP.En.Base.EnDtl)">
            <summary>
            DataSet
            </summary>
            <param name="ds"></param>
            <param name="en"></param>
            <param name="dtl"></param>
            <returns></returns>	 
        </member>
        <member name="M:BP.En.Base.Entities.RetrieveAllToDataSet">
            <summary>
            查询全部的结果放到RetrieveAllToDataSet。
            包含它们的关联的信息。
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.Entities.ToDataSet">
            <summary>
            把当前实体集合的数据库转换成Dataset。
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.Entities.ToDataTable">
            <summary>
            把当前实体集合的数据库转换成Table。
            </summary>
            <returns>DataTable</returns>
        </member>
        <member name="M:BP.En.Base.Entities.ToStringOfPK(System.String,System.Boolean)">
            <summary>
            把系统的实体的PK转换为string
            比如: "001,002,003,"。
            </summary>
            <param name="flag">分割符号, 一般来说用 ' ; '</param>
            <returns>转化后的string / 实体集合为空就 return null</returns>
        </member>
        <member name="M:BP.En.Base.Entities.ToStringOfPKSQLModel">
            <summary>
            把系统的实体的PK转换为 string
            比如: "001,002,003,"。
            </summary>		 
            <returns>转化后的string / 实体集合为空就 return null</returns>
        </member>
        <member name="M:BP.En.Base.Entities.ToEmptyTable">
            <summary>
            空的Table
            取到一个空表结构。
            </summary>
            <returns></returns>
        </member>
        <member name="P:BP.En.Base.Entities.IsGradeEntities">
            <summary>
            是不是分级的字典。
            </summary>
        </member>
        <member name="P:BP.En.Base.Entities.HisSysUIEnsRefFuncs">
            <summary>
            他的相关功能。
            </summary>
        </member>
        <member name="P:BP.En.Base.Entities.GetNewEntity">
            <summary>
            创建一个该集合的元素的类型的新实例
            </summary>
            <returns></returns>
        </member>
        <member name="P:BP.En.Base.Entities.Item(System.Int32)">
            <summary>
            根据位置取得数据
            </summary>
        </member>
        <member name="M:BP.En.Base.EntitiesNoName.AddEntity(BP.En.Base.EntityNoName)">
            <summary>
            将对象添加到集合尾处，如果对象已经存在，则不添加
            </summary>
            <param name="entity">要添加的对象</param>
            <returns>返回添加到的地方</returns>
        </member>
        <member name="M:BP.En.Base.EntitiesNoName.Insert(System.Int32,BP.En.Base.EntityNoName)">
            <summary>
            将对象添加到集合尾处，如果对象已经存在，则不添加
            </summary>
            <param name="entity">要添加的对象</param>
            <returns>返回添加到的地方</returns>
        </member>
        <member name="M:BP.En.Base.EntitiesNoName.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:BP.En.Base.EntitiesNoName.RetrieveByLikeName(System.String)">
            <summary>
            按照名称模糊查询
            </summary>
            <param name="likeName">likeName</param>
            <returns>返回查询的Num</returns>
        </member>
        <member name="P:BP.En.Base.EntitiesNoName.Item(System.Int32)">
            <summary>
            根据位置取得数据
            </summary>
        </member>
        <member name="T:BP.En.Base.IEnAttr">
            <summary>
            多语言实体属性
            </summary>
        </member>
        <member name="F:BP.En.Base.IEnAttr.No">
            <summary>
            编号
            </summary>
        </member>
        <member name="F:BP.En.Base.IEnAttr.OID">
            <summary>
            OID
            </summary>
        </member>
        <member name="F:BP.En.Base.IEnAttr.FK_Language">
            <summary>
            语言
            </summary>
        </member>
        <member name="T:BP.En.Base.IEn">
            <summary>
            多语言的实体
            </summary>
        </member>
        <member name="M:BP.En.Base.IEn.#ctor">
            <summary>
            实体
            </summary>
        </member>
        <member name="M:BP.En.Base.IEn.#ctor(System.Int32)">
            <summary>
            实体
            </summary>
            <param name="OID"></param>
        </member>
        <member name="M:BP.En.Base.IEn.#ctor(System.String,System.String)">
            <summary>
            实体
            </summary>
            <param name="no"></param>
            <param name="fk_language"></param>
        </member>
        <member name="F:BP.En.Base.IEn._enOfA">
            <summary>
            EntityNo
            </summary>
        </member>
        <member name="F:BP.En.Base.IEn._enOfM">
            <summary>
            EntityOIDNo
            </summary>
        </member>
        <member name="M:BP.En.Base.IEn.CreateView">
            <summary>
            建立视图
            </summary>
        </member>
        <member name="M:BP.En.Base.IEn.CreateViewOfMSSQL_del">
            <summary>
            建立 ms view 
            </summary>
        </member>
        <member name="M:BP.En.Base.IEn.CreateViewOfOracle9i">
            <summary>
            建立视图
            </summary>
        </member>
        <member name="M:BP.En.Base.IEn.RetrieveByOID">
            <summary>
            按照OID 查询.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.IEn.RetrieveByLanguageNo(System.String,System.String)">
            <summary>
            按照OID 查询.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.IEn.Retrieve">
            <summary>
            按主键查询，返回查询出来的个数。
            如果查询出来的是多个实体，那把第一个实体给值。
            </summary>
            <returns>查询出来的个数</returns>
        </member>
        <member name="M:BP.En.Base.IEn.RetrieveNotSetValues">
            <summary>
            按照主键查询，查询出来的结果不赋给当前的实体。
            </summary>
            <returns>查询出来的个数</returns>
        </member>
        <member name="M:BP.En.Base.IEn.CheckDB">
            <summary>
            检查完整。
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="M:BP.En.Base.IEn.afterInsertUpdateAction">
            <summary>
            在更新与插入之后要做的工作.
            </summary>
        </member>
        <member name="P:BP.En.Base.IEn.OID">
            <summary>
            OID
            </summary>
        </member>
        <member name="P:BP.En.Base.IEn.No">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:BP.En.Base.IEn.FK_Language">
            <summary>
            语言
            </summary>
        </member>
        <member name="P:BP.En.Base.IEn.EnOfA">
            <summary>
            实体
            </summary>
        </member>
        <member name="P:BP.En.Base.IEn.EnOfM">
            <summary>
            HisEnOIDNo
            </summary>
        </member>
        <member name="P:BP.En.Base.IEn.GetNewEnsOfA">
            <summary>
            子类需要实现
            </summary>
        </member>
        <member name="P:BP.En.Base.IEn.GetNewEnsOfM">
            <summary>
            子类需要实现
            </summary>
        </member>
        <member name="P:BP.En.Base.IEn.MapOfA">
            <summary>
            实体A
            </summary>
        </member>
        <member name="P:BP.En.Base.IEn.MapOfM">
            <summary>
            实体M
            </summary>
        </member>
        <member name="P:BP.En.Base.IEn.EnMap">
            <summary>
            这里需要把两个 map 整合在一起。
            </summary>
        </member>
        <member name="P:BP.En.Base.IEn.PhysicsView">
            <summary>
            物理视图
            </summary>
        </member>
        <member name="T:BP.En.Base.IEns">
            <summary>
            多语言的实体集合
            </summary>
        </member>
        <member name="M:BP.En.Base.IEns.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:BP.En.Base.IEnGradeAttr">
            <summary>
            多语言实体属性
            </summary>
        </member>
        <member name="F:BP.En.Base.IEnGradeAttr.IsDetail">
            <summary>
            是否明细
            </summary>
        </member>
        <member name="F:BP.En.Base.IEnGradeAttr.Grade">
            <summary>
            Grade
            </summary>
        </member>
        <member name="T:BP.En.Base.IEnGrade">
            <summary>
            多语言的实体
            </summary>
        </member>
        <member name="P:BP.En.Base.IEnGrade.Grade">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:BP.En.Base.IEnGrade.IsDetail">
            <summary>
            是否明细
            </summary>
        </member>
        <member name="T:BP.En.Base.IEnsGrade">
            <summary>
            多语言的实体集合
            </summary>
        </member>
        <member name="M:BP.En.Base.IEnsGrade.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:BP.En.Base.IEnUrlAttr">
            <summary>
            多语言实体属性
            </summary>
        </member>
        <member name="F:BP.En.Base.IEnUrlAttr.Url">
            <summary>
            URL
            </summary>
        </member>
        <member name="F:BP.En.Base.IEnUrlAttr.Target">
            <summary>
            Target
            </summary>
        </member>
        <member name="T:BP.En.Base.IEnUrl">
            <summary>
            多语言的实体
            </summary>
        </member>
        <member name="P:BP.En.Base.IEnUrl.Url">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:BP.En.Base.IEnUrl.Target">
            <summary>
            语言
            </summary>
        </member>
        <member name="T:BP.En.Base.IEnsUrl">
            <summary>
            多语言的实体集合
            </summary>
        </member>
        <member name="M:BP.En.Base.IEnsUrl.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:BP.En.Base.MBase.EnNo">
            <summary>
            单实体 。
            </summary>
        </member>
        <member name="M:BP.En.Base.MBase.EnNo.#ctor">
            <summary>
            EnNo
            </summary>
        </member>
        <member name="M:BP.En.Base.MBase.EnNo.#ctor(System.String)">
            <summary>
            EnNo
            </summary>
            <param name="_no">_no</param>
        </member>
        <member name="T:BP.En.Base.MBase.EnsNo">
            <summary>
            单实体集合。
            </summary>
        </member>
        <member name="T:BP.En.Base.UIContralType">
            <summary>
             控件类型
            </summary>
        </member>
        <member name="F:BP.En.Base.UIContralType.TB">
            <summary>
            TextBox
            </summary>
        </member>
        <member name="F:BP.En.Base.UIContralType.DDL">
            <summary>
            下拉框
            </summary>
        </member>
        <member name="F:BP.En.Base.UIContralType.CheckBok">
            <summary>
            CheckBok
            </summary>
        </member>
        <member name="F:BP.En.Base.UIContralType.RadioBtn">
            <summary>
            单选择按钮
            </summary>
        </member>
        <member name="T:BP.En.Base.FieldType">
            <summary>
            字段类型
            </summary>
        </member>
        <member name="F:BP.En.Base.FieldType.Normal">
            <summary>
            正常的
            </summary>
        </member>
        <member name="F:BP.En.Base.FieldType.PK">
            <summary>
            主键
            </summary>
        </member>
        <member name="F:BP.En.Base.FieldType.FK">
            <summary>
            外键
            </summary>
        </member>
        <member name="F:BP.En.Base.FieldType.Enum">
            <summary>
            枚举
            </summary>
        </member>
        <member name="F:BP.En.Base.FieldType.PKFK">
            <summary>
            既是主键又是外键
            </summary>
        </member>
        <member name="F:BP.En.Base.FieldType.PKEnum">
            <summary>
            既是主键又是枚举
            </summary>
        </member>
        <member name="F:BP.En.Base.FieldType.RefText">
            <summary>
            关连的文本.
            </summary>
        </member>
        <member name="F:BP.En.Base.FieldType.NormalVirtual">
            <summary>
            虚拟的
            </summary>
        </member>
        <member name="F:BP.En.Base.FieldType.MultiValues">
            <summary>
            多值的
            </summary>
        </member>
        <member name="T:BP.En.Base.Attr">
            <summary>
            属性
            </summary>
        </member>
        <member name="M:BP.En.Base.Attr.#ctor(System.String,System.String,System.Object,System.Int32,System.Boolean,System.String,System.Int32,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="key"></param>
            <param name="field"></param>
            <param name="defaultVal"></param>
            <param name="dataType"></param>
            <param name="isPK"></param>
            <param name="desc"></param>
        </member>
        <member name="F:BP.En.Base.Attr._key">
            <summary>
            属性名称
            </summary>
        </member>
        <member name="F:BP.En.Base.Attr._field">
            <summary>
            属性对应的字段
            </summary>
        </member>
        <member name="F:BP.En.Base.Attr._defaultVal">
            <summary>
            字段默认值
            </summary>
        </member>
        <member name="F:BP.En.Base.Attr._dataType">
            <summary>
            数据类型。
            </summary>
        </member>
        <member name="F:BP.En.Base.Attr._FieldType">
            <summary>
            是不是主键。
            </summary>
        </member>
        <member name="F:BP.En.Base.Attr._desc">
            <summary>
            描述。
            </summary>
        </member>
        <member name="F:BP.En.Base.Attr._maxLength">
            <summary>
            最大长度。
            </summary>
        </member>
        <member name="F:BP.En.Base.Attr._minLength">
            <summary>
            最小长度。
            </summary>
        </member>
        <member name="P:BP.En.Base.Attr.IsCanUseDefaultValues">
            <summary>
            是不是能使用默认值。
            </summary>
        </member>
        <member name="P:BP.En.Base.Attr.IsPK">
            <summary>
            计算属性是不是PK
            </summary>
        </member>
        <member name="P:BP.En.Base.Attr.EnterDesc">
            <summary>
            输入描述
            </summary>
        </member>
        <member name="P:BP.En.Base.Attr.Key">
            <summary>
            属性名称
            </summary>
        </member>
        <member name="P:BP.En.Base.Attr.Field">
            <summary>
            属性对应的字段
            </summary>
            <returns></returns>
        </member>
        <member name="P:BP.En.Base.Attr.DefaultVal">
            <summary>
            字段默认值
            </summary>
        </member>
        <member name="P:BP.En.Base.Attr.MyDataType">
            <summary>
            数据类型。
            </summary>
        </member>
        <member name="P:BP.En.Base.Attr.MyFieldType">
            <summary>
            是不是主键
            </summary>
            <returns> yes / no</returns>
        </member>
        <member name="P:BP.En.Base.Attr.MaxLength">
            <summary>
            最大长度。
            </summary>
        </member>
        <member name="P:BP.En.Base.Attr.MinLength">
            <summary>
            最小长度。
            </summary>
        </member>
        <member name="P:BP.En.Base.Attr.UIWidth">
            <summary>
            宽度
            </summary>
        </member>
        <member name="P:BP.En.Base.Attr.UIHeight">
            <summary>
            高度
            </summary>
        </member>
        <member name="P:BP.En.Base.Attr.UIVisible">
            <summary>
            是不是可见
            </summary>
        </member>
        <member name="P:BP.En.Base.Attr.UIIsReadonly">
            <summary>
            是不是制度
            </summary>
        </member>
        <member name="P:BP.En.Base.Attr.UIContralType">
            <summary>
            控件类型。
            </summary>
        </member>
        <member name="P:BP.En.Base.Attr.UIBindKey">
            <summary>
            要Bind 的Key.
            在TB 里面就是 DataHelpKey
            在DDL 里面是  SelfBindKey.
            </summary>
        </member>
        <member name="P:BP.En.Base.Attr.HisFKEns">
            <summary>
            它关联的ens.这个只有在,这个属性是fk, 时有效。
            </summary>
        </member>
        <member name="P:BP.En.Base.Attr.UITBShowType">
            <summary>
            要现实的控件类型。
            </summary>
        </member>
        <member name="P:BP.En.Base.Attr.UIDDLShowType">
            <summary>
            要现实的控件类型。
            </summary>
        </member>
        <member name="P:BP.En.Base.Attr.UIRefKeyValue">
            <summary>
            要Bind 的Key. 在TB 里面就是 DataHelpKey 
            在DDL 里面是SelfBindKey.
            </summary>
        </member>
        <member name="P:BP.En.Base.Attr.UIRefKeyText">
            <summary>
            关联的实体valkey	 
            </summary>
        </member>
        <member name="T:BP.En.Base.Attrs">
            <summary>
            属性集合
            </summary>
        </member>
        <member name="M:BP.En.Base.Attrs.Contains(System.String)">
            <summary>
            是否包含属性key。
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.Attrs.GetIndexByKey(System.String)">
            <summary>
            通过Key ， 取出他的Index.
            </summary>
            <param name="key">Key</param>
            <returns>index</returns>
        </member>
        <member name="M:BP.En.Base.Attrs.BeforeAddAttr(BP.En.Base.Attr)">
            <summary>
            在增加属性之前要做的工作。
            </summary>
            <param name="attr">要增加的属性</param>
        </member>
        <member name="M:BP.En.Base.Attrs.#ctor">
            <summary>
            属性集合
            </summary>
        </member>
        <member name="M:BP.En.Base.Attrs.Add(BP.En.Base.Attr)">
            <summary>
            加入一个属性
            </summary>
            <param name="attr"></param>
        </member>
        <member name="M:BP.En.Base.Attrs.Add(BP.En.Base.Attr,System.Boolean)">
            <summary>
            加入一个属性。
            </summary>
            <param name="attr">attr</param>
            <param name="isAddHisRefText">isAddHisRefText</param>
        </member>
        <member name="P:BP.En.Base.Attrs.ConutOfPhysicsFields">
            <summary>
            物理字段Num
            </summary>
        </member>
        <member name="P:BP.En.Base.Attrs.Item(System.Int32)">
            <summary>
            根据索引访问集合内的元素Attr。
            </summary>
        </member>
        <member name="T:BP.En.Base.AttrOfOneVSM">
            <summary>
            SearchKey 的摘要说明。
            用来处理一条记录的存放，问题。
            </summary>
        </member>
        <member name="F:BP.En.Base.AttrOfOneVSM._ensOfMM">
            <summary>
            多对多的实体.
            </summary>
        </member>
        <member name="F:BP.En.Base.AttrOfOneVSM._ensOfM">
            <summary>
            多对多的实体
            </summary>
        </member>
        <member name="F:BP.En.Base.AttrOfOneVSM._Desc">
            <summary>
            M的实体属性在多对多的实体中
            </summary>
        </member>
        <member name="F:BP.En.Base.AttrOfOneVSM._AttrOfOneInMM">
            <summary>
            一的实体属性在多对多的实体中.
            </summary>
        </member>
        <member name="F:BP.En.Base.AttrOfOneVSM._AttrOfMInMM">
            <summary>
            M的实体属性在多对多的实体中
            </summary>
        </member>
        <member name="F:BP.En.Base.AttrOfOneVSM._AttrOfMText">
            <summary>
            标签
            </summary>
        </member>
        <member name="F:BP.En.Base.AttrOfOneVSM._AttrOfMValue">
            <summary>
            Value
            </summary>
        </member>
        <member name="M:BP.En.Base.AttrOfOneVSM.#ctor">
            <summary>
            AttrOfOneVSM
            </summary>
        </member>
        <member name="M:BP.En.Base.AttrOfOneVSM.#ctor(BP.En.Base.Entities,BP.En.Base.Entities,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            AttrOfOneVSM
            </summary>
            <param name="_ensOfMM"></param>
            <param name="_ensOfM"></param>
            <param name="AttrOfOneInMM"></param>
            <param name="AttrOfMInMM"></param>
            <param name="AttrOfMText"></param>
            <param name="AttrOfMValue"></param>
        </member>
        <member name="P:BP.En.Base.AttrOfOneVSM.EnsOfMM">
            <summary>
            多对多的实体集合
            </summary>
        </member>
        <member name="P:BP.En.Base.AttrOfOneVSM.EnsOfM">
            <summary>
            多对多的实体集合
            </summary>
        </member>
        <member name="P:BP.En.Base.AttrOfOneVSM.Desc">
            <summary>
            的实体属性在多对多的实体中
            </summary>
        </member>
        <member name="P:BP.En.Base.AttrOfOneVSM.AttrOfOneInMM">
            <summary>
            一的实体属性在多对多的实体中
            </summary>
        </member>
        <member name="P:BP.En.Base.AttrOfOneVSM.AttrOfMInMM">
            <summary>
            的实体属性在多对多的实体中
            </summary>
        </member>
        <member name="P:BP.En.Base.AttrOfOneVSM.AttrOfMText">
            <summary>
            标签
            </summary>
        </member>
        <member name="P:BP.En.Base.AttrOfOneVSM.AttrOfMValue">
            <summary>
            Value
            </summary>
        </member>
        <member name="T:BP.En.Base.AttrsOfOneVSM">
            <summary>
            AttrsOfOneVSM 集合
            </summary>
        </member>
        <member name="M:BP.En.Base.AttrsOfOneVSM.Add(BP.En.Base.AttrOfOneVSM)">
            <summary>
            增加一个SearchKey .
            </summary>
            <param name="r">SearchKey</param>
        </member>
        <member name="M:BP.En.Base.AttrsOfOneVSM.IsExits(BP.En.Base.AttrOfOneVSM)">
            <summary>
            是不是存在集合里面
            </summary>
            <param name="en">要检查的EnDtl</param>
            <returns>true/false</returns>
        </member>
        <member name="M:BP.En.Base.AttrsOfOneVSM.Add(BP.En.Base.Entities,BP.En.Base.Entities,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            增加一个属性
            </summary>
            <param name="_ensOfMM">多对多的实体</param>
            <param name="_ensOfM">多实体</param>
            <param name="AttrOfOneInMM">点实体,在MM中的属性</param>
            <param name="AttrOfMInMM">多实体主键在MM中的属性</param>
            <param name="AttrOfMText"></param>
            <param name="AttrOfMValue"></param>
            <param name="desc">描述</param>
        </member>
        <member name="F:BP.En.Base.OperatorSymbol.DaYu">
            <summary>
            大于
            </summary>
        </member>
        <member name="F:BP.En.Base.OperatorSymbol.DengYu">
            <summary>
            等于
            </summary>
        </member>
        <member name="F:BP.En.Base.OperatorSymbol.XiaoYu">
            <summary>
            小于
            </summary>
        </member>
        <member name="F:BP.En.Base.OperatorSymbol.Like">
            <summary>
            相似
            </summary>
        </member>
        <member name="T:BP.En.Base.AARef">
            <summary>
            属性属性关联
            </summary>
        </member>
        <member name="F:BP.En.Base.AARef.CataAttr">
            <summary>
            目录属性
            </summary>
        </member>
        <member name="F:BP.En.Base.AARef.RefKey">
            <summary>
            关联key
            </summary>
        </member>
        <member name="F:BP.En.Base.AARef.SubAttr">
            <summary>
            子属性
            </summary>
        </member>
        <member name="M:BP.En.Base.AARef.#ctor(System.String,System.String,System.String)">
            <summary>
            属性属性关联
            </summary>
            <param name="CataAttr">属性</param>
            <param name="RefKey"></param>
            <param name="SubAttr"></param>
        </member>
        <member name="M:BP.En.Base.AARefs.Add(System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            增加一个查询属性
            </summary>
            <param name="lab">标签</param>
            <param name="refKey">实体的属性</param>
            <param name="defaultvalue">默认值</param>
        </member>
        <member name="T:BP.En.Base.AttrOfSearch">
            <summary>
            SearchKey 的摘要说明。
            用来处理一条记录的存放，问题。
            </summary>
        </member>
        <member name="F:BP.En.Base.AttrOfSearch._IsHidden">
            <summary>
            是否隐藏
            </summary>
        </member>
        <member name="F:BP.En.Base.AttrOfSearch._SymbolEnable">
            <summary>
            操作是否可用
            </summary>
        </member>
        <member name="F:BP.En.Base.AttrOfSearch._Lab">
            <summary>
            标签
            </summary>
        </member>
        <member name="F:BP.En.Base.AttrOfSearch._DefaultVal">
            <summary>
            查询默认值
            </summary>
        </member>
        <member name="F:BP.En.Base.AttrOfSearch._defaultSymbol">
            <summary>
            默认的操作符号.
            </summary>
        </member>
        <member name="F:BP.En.Base.AttrOfSearch._RefAttr">
            <summary>
            对应的属性
            </summary>
        </member>
        <member name="F:BP.En.Base.AttrOfSearch._Key">
            <summary>
            Key
            </summary>
        </member>
        <member name="F:BP.En.Base.AttrOfSearch._TBWidth">
            <summary>
            TB 宽度
            </summary>
        </member>
        <member name="M:BP.En.Base.AttrOfSearch.#ctor(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            构造一个普通的查询属性
            </summary>
        </member>
        <member name="P:BP.En.Base.AttrOfSearch.IsHidden">
            <summary>
            是否隐藏
            </summary>
        </member>
        <member name="P:BP.En.Base.AttrOfSearch.SymbolEnable">
            <summary>
            操作是否可用
            </summary>
        </member>
        <member name="P:BP.En.Base.AttrOfSearch.Lab">
            <summary>
            标签
            </summary>
        </member>
        <member name="P:BP.En.Base.AttrOfSearch.DefaultVal">
            <summary>
            OperatorKey
            </summary>
        </member>
        <member name="P:BP.En.Base.AttrOfSearch.DefaultSymbol">
            <summary>
            操作符号
            </summary>
        </member>
        <member name="P:BP.En.Base.AttrOfSearch.RefAttrKey">
            <summary>
            对应的属性
            </summary>
        </member>
        <member name="P:BP.En.Base.AttrOfSearch.Key">
            <summary>
            Key
            </summary>
        </member>
        <member name="P:BP.En.Base.AttrOfSearch.TBWidth">
            <summary>
            TBWidth 
            </summary>
        </member>
        <member name="T:BP.En.Base.AttrsOfSearch">
            <summary>
            SearchKey 集合
            </summary>
        </member>
        <member name="M:BP.En.Base.AttrsOfSearch.AddHidden(System.String,System.String,System.String)">
            <summary>
            增加一个隐藏的查询属性
            </summary>
            <param name="refKey">关联key</param>
            <param name="symbol">操作符号</param>
            <param name="val">操作的val.</param>
        </member>
        <member name="M:BP.En.Base.AttrsOfSearch.Add(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            增加一个查询属性
            </summary>
            <param name="lab">标签</param>
            <param name="refKey">实体的属性</param>
            <param name="defaultvalue">默认值</param>
        </member>
        <member name="M:BP.En.Base.AttrsOfSearch.AddFromTo(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            增加2个属性。
            </summary>
            <param name="lab">标题</param>
            <param name="refKey">关联的Key</param>
            <param name="defaultvalueOfFrom">默认值从</param>
            <param name="defaultvalueOfTo">默认值从</param>
            <param name="tbWidth">宽度</param>
        </member>
        <member name="P:BP.En.Base.CheckData.MainEnName">
            <summary>
            主表名称
            </summary>
        </member>
        <member name="P:BP.En.Base.CheckData.MainTBName">
            <summary>
            主表名称
            </summary>
        </member>
        <member name="P:BP.En.Base.CheckData.MainTBPK">
            <summary>
            主表字段
            </summary>
        </member>
        <member name="P:BP.En.Base.CheckData.RefEnName">
            <summary>
            从表名称
            </summary>
        </member>
        <member name="P:BP.En.Base.CheckData.RefTBName">
            <summary>
            从表名称
            </summary>
        </member>
        <member name="P:BP.En.Base.CheckData.RefTBFK">
            <summary>
            从表字段
            </summary>
        </member>
        <member name="M:BP.En.Base.CheckDatas.#ctor(System.String)">
            <summary>
            根据一个Main Table . 
            </summary>
            <param name="MainTbName"></param>
        </member>
        <member name="T:BP.Web.Controls.BtnType">
            <summary>
            按钮类型
            </summary>
        </member>
        <member name="F:BP.Web.Controls.BtnType.ConfirmHit">
            <summary>
            确认 ,需要给　hit 赋值。 
            ＸＸＸ　确认马？
            </summary>
        </member>
        <member name="F:BP.Web.Controls.BtnType.Normal">
            <summary>
            正常
            </summary>
        </member>
        <member name="F:BP.Web.Controls.BtnType.Confirm">
            <summary>
            确定
            </summary>
        </member>
        <member name="F:BP.Web.Controls.BtnType.Save">
            <summary>
            保存
            </summary>
        </member>
        <member name="F:BP.Web.Controls.BtnType.SaveAndNew">
            <summary>
            保存并新建
            </summary>
        </member>
        <member name="F:BP.Web.Controls.BtnType.Search">
            <summary>
            查找
            </summary>
        </member>
        <member name="F:BP.Web.Controls.BtnType.Cancel">
            <summary>
            取消
            </summary>
        </member>
        <member name="F:BP.Web.Controls.BtnType.Delete">
            <summary>
            删除
            </summary>
        </member>
        <member name="F:BP.Web.Controls.BtnType.Update">
            <summary>
            更新
            </summary>
        </member>
        <member name="F:BP.Web.Controls.BtnType.Insert">
            <summary>
            插入
            </summary>
        </member>
        <member name="F:BP.Web.Controls.BtnType.Edit">
            <summary>
            编辑
            </summary>
        </member>
        <member name="F:BP.Web.Controls.BtnType.New">
            <summary>
            新建
            </summary>
        </member>
        <member name="F:BP.Web.Controls.BtnType.View">
            <summary>
            浏览
            </summary>
        </member>
        <member name="F:BP.Web.Controls.BtnType.Close">
            <summary>
            关闭
            </summary>
        </member>
        <member name="F:BP.Web.Controls.BtnType.Export">
            <summary>
            导出
            </summary>
        </member>
        <member name="F:BP.Web.Controls.BtnType.Print">
            <summary>
            打印
            </summary>
        </member>
        <member name="F:BP.Web.Controls.BtnType.Add">
            <summary>
            增加
            </summary>
        </member>
        <member name="F:BP.Web.Controls.BtnType.Reomve">
            <summary>
            一处
            </summary>
        </member>
        <member name="F:BP.Web.Controls.BtnType.Back">
            <summary>
            返回
            </summary>
        </member>
        <member name="F:BP.Web.Controls.BtnType.Refurbish">
            <summary>
            刷新
            </summary>
        </member>
        <member name="F:BP.Web.Controls.BtnType.ApplyTask">
            <summary>
            申请任务
            </summary>
        </member>
        <member name="F:BP.Web.Controls.BtnType.SelectAll">
            <summary>
            选者全部
            </summary>
        </member>
        <member name="F:BP.Web.Controls.BtnType.SelectNone">
            <summary>
            全不选
            </summary>
        </member>
        <member name="T:BP.Web.Controls.TBType">
            <summary>
            TaxBox 类型
            </summary>
        </member>
        <member name="F:BP.Web.Controls.TBType.Ens">
            <summary>
            Entities 的DataHelp, 如果这里说明了，他是Ens , 就要指明DataHelpKey. 
            这样，系统就会在右键帮助会出现他。
            </summary>
        </member>
        <member name="F:BP.Web.Controls.TBType.EnsOfMany">
            <summary>
            Entities 的DataHelp, 如果这里说明了，他是Ens , 就要指明DataHelpKey. 
            这样，系统就会在右键帮助会出现他。
            可能是需要多个值得选择问题。当选择多个值的时间，就用',' 把他们分开返回。 
            </summary>
        </member>
        <member name="F:BP.Web.Controls.TBType.Self">
            <summary>
            自己定义的类型。
            </summary>
        </member>
        <member name="F:BP.Web.Controls.TBType.TB">
            <summary>
            正常的
            </summary>
        </member>
        <member name="F:BP.Web.Controls.TBType.Num">
            <summary>
            Num
            </summary>
        </member>
        <member name="F:BP.Web.Controls.TBType.Int">
            <summary>
            Int
            </summary>
        </member>
        <member name="F:BP.Web.Controls.TBType.SBH">
            <summary>
            SBH
            </summary>
        </member>
        <member name="F:BP.Web.Controls.TBType.Float">
            <summary>
            Float
            </summary>
        </member>
        <member name="F:BP.Web.Controls.TBType.Decimal">
            <summary>
            Decimal
            </summary>
        </member>
        <member name="F:BP.Web.Controls.TBType.Moneny">
            <summary>
            Moneny
            </summary>
        </member>
        <member name="F:BP.Web.Controls.TBType.Date">
            <summary>
            Date
            </summary>
        </member>
        <member name="F:BP.Web.Controls.TBType.DateTime">
            <summary>
            DateTime
            </summary>
        </member>
        <member name="F:BP.Web.Controls.TBType.Email">
            <summary>
            Email
            </summary>
        </member>
        <member name="F:BP.Web.Controls.TBType.Key">
            <summary>
            Key
            </summary>
        </member>
        <member name="T:BP.Web.Controls.AddAllLocation">
            <summary>
            AddAllLocation
            </summary>
        </member>
        <member name="F:BP.Web.Controls.AddAllLocation.Top">
            <summary>
            显示上方
            </summary>
        </member>
        <member name="F:BP.Web.Controls.AddAllLocation.End">
            <summary>
            显示下方
            </summary>
        </member>
        <member name="F:BP.Web.Controls.AddAllLocation.TopAndEnd">
            <summary>
            显示上方和下方
            </summary>
        </member>
        <member name="F:BP.Web.Controls.AddAllLocation.None">
            <summary>
            不显示
            </summary>
        </member>
        <member name="T:BP.Web.Controls.DDLShowType">
            <summary>
            DDLShowType
            </summary>
        </member>
        <member name="F:BP.Web.Controls.DDLShowType.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:BP.Web.Controls.DDLShowType.Gender">
            <summary>
            Gender
            </summary>
        </member>
        <member name="F:BP.Web.Controls.DDLShowType.Boolean">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="F:BP.Web.Controls.DDLShowType.Year">
            <summary>
            Year
            </summary>
        </member>
        <member name="F:BP.Web.Controls.DDLShowType.Month">
            <summary>
            Month
            </summary>
        </member>
        <member name="F:BP.Web.Controls.DDLShowType.Day">
            <summary>
            Day
            </summary>
        </member>
        <member name="F:BP.Web.Controls.DDLShowType.hh">
            <summary>
            hh
            </summary>
        </member>
        <member name="F:BP.Web.Controls.DDLShowType.mm">
            <summary>
            mm
            </summary>
        </member>
        <member name="F:BP.Web.Controls.DDLShowType.Quarter">
            <summary>
            季度
            </summary>
        </member>
        <member name="F:BP.Web.Controls.DDLShowType.Week">
            <summary>
            Week
            </summary>
        </member>
        <member name="F:BP.Web.Controls.DDLShowType.SysEnum">
            <summary>
            系统枚举类型 SelfBindKey="系统枚举Key"
            </summary>
        </member>
        <member name="F:BP.Web.Controls.DDLShowType.Self">
            <summary>
            Self
            </summary>
        </member>
        <member name="F:BP.Web.Controls.DDLShowType.Ens">
            <summary>
            实体集合
            </summary>
        </member>
        <member name="F:BP.Web.Controls.DDLShowType.BindTable">
            <summary>
            与Table 相关联
            </summary>
        </member>
        <member name="T:BP.En.Base.DictAttr">
            <summary>
            Dict Attr 
            </summary>
        </member>
        <member name="T:BP.En.Base.EntityOIDAttr">
            <summary>
            属性列表
            </summary>
        </member>
        <member name="F:BP.En.Base.EntityOIDAttr.OID">
            <summary>
            OID
            </summary>
        </member>
        <member name="T:BP.En.Base.Dict">
            <summary>
            DictEntity 的摘要说明。
            </summary>
        </member>
        <member name="T:BP.En.Base.EntityOID">
            <summary>
            OID实体,只有一个实体这个实体只有一个主键属性。
            </summary>
        </member>
        <member name="M:BP.En.Base.EntityOID.#ctor">
            <summary>
            构造一个空实例
            </summary>
        </member>
        <member name="M:BP.En.Base.EntityOID.#ctor(System.Int32)">
            <summary>
            根据OID构造实体
            </summary>
            <param name="oid">oid</param>
        </member>
        <member name="M:BP.En.Base.EntityOID.beforeDelete">
            <summary>
            删除之前的操作。
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.EntityOID.beforeInsert">
            <summary>
            insert 之前的操作。
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.EntityOID.SaveAsNew">
            <summary>
            作为一个新的实体保存。
            </summary>
        </member>
        <member name="M:BP.En.Base.EntityOID.InsertAsOID(System.Int32)">
            <summary>
            按照指定的OID Insert.
            </summary>
        </member>
        <member name="M:BP.En.Base.EntityOID.SaveAsOID(System.Int32)">
            <summary>
            按照指定的OID 保存
            </summary>
            <param name="oid"></param>
        </member>
        <member name="P:BP.En.Base.EntityOID.OID">
            <summary>
            OID, 如果是空的就返回 0 . 
            </summary>
        </member>
        <member name="M:BP.En.Base.Dict.beforeInsert">
            <summary>
            beforeInsert
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.Dict.#ctor(System.Int32)">
            <summary>
            调用base 的方法。
            </summary>
            <param name="oid"></param>
        </member>
        <member name="M:BP.En.Base.Dict.#ctor(System.String)">
            <summary>
            根据No 建立一个实例。
            </summary>
            <param name="_no">编号</param>
        </member>
        <member name="M:BP.En.Base.Dict.RetrieveByNo">
            <summary>
            按No 查询。
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.Dict.RetrieveByName">
            <summary>
             按Name 查询。
            </summary>
            <returns></returns>	
        </member>
        <member name="P:BP.En.Base.Dict.No">
            <summary>
            No
            </summary>
        </member>
        <member name="P:BP.En.Base.Dict.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="M:BP.En.Base.EntitiesOID.RetrieveAllCNEntities">
            <summary>
            查询出来, 所有中文的实例 . 
            </summary>
        </member>
        <member name="M:BP.En.Base.EntitiesOID.RetrieveByLanguageNo(System.String)">
            <summary>
            按语言查询。 
            </summary>
        </member>
        <member name="T:BP.En.Base.DictSimple">
            <summary>
            DictSimple 的摘要说明。
            简单编码类 Key val 
            </summary>
        </member>
        <member name="M:BP.En.Base.DictSimple.RetrieveByName">
            <summary>
             按Name 查询。
            </summary>
            <returns></returns>	
        </member>
        <member name="P:BP.En.Base.DictSimple.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="T:BP.En.Base.EnDtl">
            <summary>
            EnDtl 的摘要说明。
            </summary>
        </member>
        <member name="M:BP.En.Base.EnDtl.#ctor">
            <summary>
            明细
            </summary>
        </member>
        <member name="M:BP.En.Base.EnDtl.#ctor(System.String)">
            <summary>
            明细
            </summary>
            <param name="className">类名称</param>
        </member>
        <member name="F:BP.En.Base.EnDtl._Ens">
            <summary>
            明细
            </summary>
        </member>
        <member name="F:BP.En.Base.EnDtl._refKey">
            <summary>
            他关连的key
            </summary>
        </member>
        <member name="F:BP.En.Base.EnDtl._Desc">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:BP.En.Base.EnDtl.ClassName">
            <summary>
            类名称
            </summary>
        </member>
        <member name="P:BP.En.Base.EnDtl.Ens">
            <summary>
            获取或设置 他的集合
            </summary>
        </member>
        <member name="P:BP.En.Base.EnDtl.RefKey">
            <summary>
            他关连的 key
            </summary>
        </member>
        <member name="P:BP.En.Base.EnDtl.Desc">
            <summary>
            描述
            </summary>
        </member>
        <member name="T:BP.En.Base.EnDtls">
            <summary>
            
            </summary>
        </member>
        <member name="M:BP.En.Base.EnDtls.IsContainKey(System.String)">
            <summary>
            是不是包含className
            </summary>
            <param name="className"></param>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.EnDtls.Add(BP.En.Base.EnDtl)">
            <summary>
            加入
            </summary>
            <param name="attr">attr</param>
        </member>
        <member name="M:BP.En.Base.EnDtls.IsExits(BP.En.Base.EnDtl)">
            <summary>
            是不是存在集合里面
            </summary>
            <param name="en">要检查的EnDtl</param>
            <returns>true/false</returns>
        </member>
        <member name="M:BP.En.Base.EnDtls.GetEnDtlByKey(System.String)">
            <summary>
            通过一个key 得到它的属性值。
            </summary>
            <param name="key">key</param>
            <returns>EnDtl</returns>
        </member>
        <member name="M:BP.En.Base.EnDtls.GetEnDtlByClassName(System.String)">
            <summary>
            className
            </summary>
            <param name="className">类名称</param>
            <returns></returns>
        </member>
        <member name="P:BP.En.Base.EnDtls.Item(System.Int32)">
            <summary>
            根据索引访问集合内的元素Attr。
            </summary>
        </member>
        <member name="T:BP.En.Base.EnsObj">
            <summary>
            EnObj 的摘要说明。
            </summary>
        </member>
        <member name="T:BP.En.Base.EntityClassNameAttr">
            <summary>
            EntityClassNameAttr
            </summary>
        </member>
        <member name="F:BP.En.Base.EntityClassNameAttr.EnsClassName">
            <summary>
            className
            </summary>
        </member>
        <member name="T:BP.En.Base.EntityClassName">
            <summary>
            NoEntity 的摘要说明。
            </summary>
        </member>
        <member name="M:BP.En.Base.EntityClassName.#ctor(System.String)">
            <summary>
            class Name 
            </summary>
            <param name="_EnsClassName">_EnsClassName</param>
        </member>
        <member name="P:BP.En.Base.EntityClassName.EnsClassName">
            <summary>
            集合类名称
            </summary>
        </member>
        <member name="P:BP.En.Base.EntityClassName.HisDesc">
            <summary>
            他的描述
            </summary>
        </member>
        <member name="P:BP.En.Base.EntityClassName.HisEntity">
            <summary>
            他的实体
            </summary>
        </member>
        <member name="P:BP.En.Base.EntityClassName.HisEntities">
            <summary>
            他的实体集合
            </summary>
        </member>
        <member name="T:BP.En.Base.EntitiesClassName">
            <summary>
            类名实体集合
            </summary>
        </member>
        <member name="M:BP.En.Base.EntitiesClassName.#ctor">
            <summary>
            实体集合
            </summary>
        </member>
        <member name="T:BP.En.Base.EntityMIDAttr">
            <summary>
            属性列表
            </summary>
        </member>
        <member name="T:BP.En.Base.EntityMID">
            <summary>
            MID实体,只有一个实体这个实体只有一个主键属性。
            </summary>
        </member>
        <member name="M:BP.En.Base.EntityMID.#ctor">
            <summary>
            构造一个空实例
            </summary>
        </member>
        <member name="M:BP.En.Base.EntityMID.#ctor(System.Int32)">
            <summary>
            根据MID构造实体
            </summary>
            <param name="MID">MID</param>
        </member>
        <member name="M:BP.En.Base.EntityMID.beforeDelete">
            <summary>
            删除之前的操作。
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.EntityMID.beforeInsert">
            <summary>
            beforeInsert 之前的操作。
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.EntityMID.beforeUpdate">
            <summary>
            beforeUpdate
            </summary>
            <returns></returns>
        </member>
        <member name="P:BP.En.Base.EntityMID.MID">
            <summary>
            MID, 如果是空的就返回 0 . 
            </summary>
        </member>
        <member name="T:BP.En.Base.EntitiesMID">
            <summary>
            MID实体集合
            </summary>
        </member>
        <member name="T:BP.En.Base.EntityMM">
            <summary>
            多对多的集合。
            </summary>
        </member>
        <member name="M:BP.En.Base.EntityMM.#ctor">
            <summary>
            多对多的集合
            </summary>
        </member>
        <member name="T:BP.En.Base.EntitiesMM">
            <summary>
            多对多的集合
            </summary>
        </member>
        <member name="M:BP.En.Base.EntitiesMM.#ctor">
            <summary>
            多对多的集合
            </summary>
        </member>
        <member name="M:BP.En.Base.EntitiesMM.throwOneKeyValGetRefEntities(System.String,System.Int32,BP.En.Base.Entities)">
            <summary>
            提供通过一个实体的 val 查询另外的实体集合。
            </summary>
            <param name="attr">属性</param>
            <param name="val">植</param>
            <param name="refEns">关联的集合</param>
            <returns>关联的集合</returns>
        </member>
        <member name="M:BP.En.Base.EntitiesMM.throwOneKeyValGetRefEntities(System.String,System.String,BP.En.Base.Entities)">
            <summary>
            提供通过一个实体的 val 查询另外的实体集合。
            </summary>
            <param name="attr">属性</param>
            <param name="val">植</param>
            <param name="refEns">关联的集合</param>
            <returns>关联的集合</returns>
        </member>
        <member name="T:BP.En.Base.EntityOIDMIDAttr">
            <summary>
            EntityOIDMIDAttr
            </summary>
        </member>
        <member name="F:BP.En.Base.EntityOIDMIDAttr.MID">
            <summary>
            标记ID
            </summary>
        </member>
        <member name="T:BP.En.Base.EntityOIDMID">
            <summary>
            用于OID MID 明晰实体继承
            </summary>
        </member>
        <member name="M:BP.En.Base.EntityOIDMID.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:BP.En.Base.EntityOIDMID.#ctor(System.Int32)">
            <summary>
            构造
            </summary>
            <param name="oid">OID</param>
        </member>
        <member name="M:BP.En.Base.EntityOIDMID.RetrieveByMID(System.Int32)">
            <summary>
            返回查询出来的个数
            </summary>
            <param name="mid">mid</param>
            <returns>返回查询出来的个数</returns>
        </member>
        <member name="P:BP.En.Base.EntityOIDMID.MID">
            <summary>
            标记ID
            </summary>
        </member>
        <member name="T:BP.En.Base.EntitiesOIDMID">
            <summary>
            用于OID MID 明晰实体继承
            </summary>
        </member>
        <member name="M:BP.En.Base.EntitiesOIDMID.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:BP.En.Base.EntitiesOIDMID.#ctor(System.Int32)">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:BP.En.Base.EntitiesOIDMID.RetrieveByMID(System.Int32)">
            <summary>
            按照MID查询，返回查询出来的个数，并把查询结果放入实体集合内。
            </summary>
            <param name="mid">MID</param>
            <returns>返回查询出来的个数</returns>
        </member>
        <member name="T:BP.En.Base.EntityOIDNameAttr">
            <summary>
            EntityOIDNameAttr
            </summary>
        </member>
        <member name="F:BP.En.Base.EntityOIDNameAttr.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="T:BP.En.Base.EntityOIDName">
            <summary>
            用于OID Name 属性的实体继承。	
            </summary>
        </member>
        <member name="M:BP.En.Base.EntityOIDName.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:BP.En.Base.EntityOIDName.#ctor(System.Int32)">
            <summary>
            构造
            </summary>
            <param name="oid">OID</param>
        </member>
        <member name="M:BP.En.Base.EntityOIDName.RetrieveByName">
            <summary>
            按照名称查询。
            </summary>
            <returns>返回查询出来的个数</returns>
        </member>
        <member name="P:BP.En.Base.EntityOIDName.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="T:BP.En.Base.EntitiesOIDName">
            <summary>
            用于OID Name 属性的实体继承
            </summary>
        </member>
        <member name="M:BP.En.Base.EntitiesOIDName.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="T:BP.En.Base.EntityOIDNoAttr">
            <summary>
            EntityOIDNoAttr
            </summary>
        </member>
        <member name="F:BP.En.Base.EntityOIDNoAttr.No">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:BP.En.Base.EntityOIDNo.No">
            <summary>
            实体编号
            </summary>
        </member>
        <member name="T:BP.En.Base.EntityOIDNoUrlAttr">
            <summary>
            EntityOIDNoUrlAttr
            </summary>
        </member>
        <member name="F:BP.En.Base.EntityOIDNoUrlAttr.Url">
            <summary>
            连接
            </summary>
        </member>
        <member name="F:BP.En.Base.EntityOIDNoUrlAttr.Target">
            <summary>
            目标
            </summary>
        </member>
        <member name="T:BP.En.Base.EntityOIDNoUrl">
            <summary>
            OID No Url 得连接。
            </summary>
        </member>
        <member name="P:BP.En.Base.EntityOIDNoUrl.Url">
            <summary>
            连接
            </summary>
        </member>
        <member name="P:BP.En.Base.EntityOIDNoUrl.Target">
            <summary>
            目标
            </summary>
        </member>
        <member name="T:BP.En.Base.GradeDictBaseAttr">
            <summary>
            字典基类属性
            </summary>
        </member>
        <member name="F:BP.En.Base.GradeDictBaseAttr.Grade">
            <summary>
            级数
            </summary>
        </member>
        <member name="F:BP.En.Base.GradeDictBaseAttr.IsDetail">
            <summary>
            是否明细
            </summary>
        </member>
        <member name="T:BP.En.Base.GradeDictBase">
            <summary>
            分级字典的基类
            </summary>
        </member>
        <member name="M:BP.En.Base.GradeDictBase.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:BP.En.Base.GradeDictBase.#ctor(System.Int32)">
            <summary>
            创建对象，如果OID小于等于0则自动产生一个OID；如果大于0则查询该对象，如果不存在则创建一个OID为0的空对象
            </summary>
            <param name="oid"></param>
        </member>
        <member name="M:BP.En.Base.GradeDictBase.GetGrade">
            <summary>
            通过编号取级数
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.GradeDictBase.GetGradeMaxNo">
            <summary>
            取得本级的最大编号（没找到返回空串）
            </summary>
            <returns>最大编号</returns>
        </member>
        <member name="M:BP.En.Base.GradeDictBase.GetParent">
            <summary>
            通过编号取父级对象数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.GradeDictBase.GetChildren">
            <summary>
            通过编号取孩子结点
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.GradeDictBase.GetChildren(System.Int32)">
            <summary>
            通过编号、级数取孩子结点
            </summary> 
        </member>
        <member name="M:BP.En.Base.GradeDictBase.GetChildren(System.Boolean)">
            <summary>
            通过是否明细取孩子结点
            </summary> 
        </member>
        <member name="M:BP.En.Base.GradeDictBase.GetChildren(System.Int32,System.Boolean)">
            <summary>
            通过编号、级数、是否明细取孩子结点
            </summary> 
        </member>
        <member name="M:BP.En.Base.GradeDictBase.beforeUpdate">
            <summary>
            修改前的处理
            </summary>
        </member>
        <member name="M:BP.En.Base.GradeDictBase.beforeInsert">
            <summary>
            插入前的处理
            </summary>
        </member>
        <member name="M:BP.En.Base.GradeDictBase.beforeDelete">
            <summary>
            删除前的处理
            </summary>
        </member>
        <member name="M:BP.En.Base.GradeDictBase.afterDelete">
            <summary>
            删除后处理
            </summary>
            <returns></returns>
        </member>
        <member name="P:BP.En.Base.GradeDictBase.No">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:BP.En.Base.GradeDictBase.Grade">
            <summary>
            级数
            </summary>
        </member>
        <member name="P:BP.En.Base.GradeDictBase.IsDetail">
            <summary>
            是否明细
            </summary>
        </member>
        <member name="P:BP.En.Base.GradeDictBase.ParentNo">
            <summary>
            上级的No
            </summary>
        </member>
        <member name="T:BP.En.Base.GradeDictBases">
            <summary>
            分级的字典集合基类
            </summary>
        </member>
        <member name="M:BP.En.Base.GradeDictBases.RetrieveNotDetail">
            <summary>
            查询出所有的非明细值
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.GradeDictBases.RetrieveNotDetail(System.Int32)">
            <summary>
            查询出所有的非明细值且指定级数
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.GradeDictBases.RetrieveChildrens(System.String)">
            <summary>
            查询出指定级的所有数据
            </summary>
            <param name="no">指定的父节点编号</param>
        </member>
        <member name="M:BP.En.Base.GradeDictBases.CountBy(System.Int32)">
            <summary>
            统计该级的所有记录数
            </summary>
            <param name="grade">级数</param>
            <returns>记录数</returns>
        </member>
        <member name="M:BP.En.Base.GradeDictBases.CountBy(System.String)">
            <summary>
            统计该编号的所有下级
            </summary>
            <param name="gradeNo">编号</param>
            <returns>记录数</returns>
        </member>
        <member name="M:BP.En.Base.GradeDictBases.CountBy(System.String,System.Int32)">
            <summary>
            统计该编号下的指定级数的记录数
            </summary>
            <param name="gradeNo">编号</param>
            <param name="grade">级数</param>
            <returns>记录数</returns>
        </member>
        <member name="M:BP.En.Base.GradeDictBases.CountBy(System.String,System.Int32,System.Boolean)">
            <summary>
            统计对象的记录数
            </summary>
            <param name="gradeNo">上级编号，如果为空则统计所有</param>
            <param name="grade">本级级数，如果小于等于0则统计所有</param>
            <param name="detailFlag">是否只统计明细记录</param>
            <returns>记录数</returns>
        </member>
        <member name="T:BP.En.Base.GradeEntityNoNameBaseAttr">
            <summary>
            字典基类属性
            </summary>
        </member>
        <member name="F:BP.En.Base.GradeEntityNoNameBaseAttr.Grade">
            <summary>
            级数
            </summary>
        </member>
        <member name="F:BP.En.Base.GradeEntityNoNameBaseAttr.IsDtl">
            <summary>
            是否明细
            </summary>
        </member>
        <member name="T:BP.En.Base.GradeEntityNoNameBase">
            <summary>
            分级字典的基类
            </summary>
        </member>
        <member name="M:BP.En.Base.GradeEntityNoNameBase.GenerSameGradeNo">
            <summary>
            产生同级编号
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.GradeEntityNoNameBase.GenerChildGradeNo(System.String)">
            <summary>
            产生孩子编号
            </summary>
            <returns>孩子编号</returns>
        </member>
        <member name="M:BP.En.Base.GradeEntityNoNameBase.NewChildEntity">
            <summary>
            生成一个新的子类实体。
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.GradeEntityNoNameBase.GetGradeByNo(System.String)">
            <summary>
            通过一个编号判断他的级别。
            </summary>
            <param name="No">要判断的编号</param>
            <returns>级别</returns>
        </member>
        <member name="M:BP.En.Base.GradeEntityNoNameBase.GetNoLengthByGrade(System.Int32)">
            <summary>
            按照级别取到编号的长度
            </summary>
            <param name="grade">级别</param>
            <returns>length</returns>
        </member>
        <member name="M:BP.En.Base.GradeEntityNoNameBase.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:BP.En.Base.GradeEntityNoNameBase.GetChildren">
            <summary>
            取出全部的孩子节点.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.GradeEntityNoNameBase.GetChildren(System.Int32)">
            <summary>
            通过编号、级数取孩子结点
            </summary> 
        </member>
        <member name="M:BP.En.Base.GradeEntityNoNameBase.GetChildrenOfNextGrade">
            <summary>
            取出下级别的节点.
            </summary> 
        </member>
        <member name="M:BP.En.Base.GradeEntityNoNameBase.GetChildrenOfNextGrade(System.Boolean)">
            <summary>
            取出下级别的节点
            </summary>
            <param name="isForDtl">是否明细</param>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.GradeEntityNoNameBase.GetChildren(System.Int32,System.Boolean)">
            <summary>
            通过编号、级数、是否明细取孩子结点
            </summary> 
        </member>
        <member name="M:BP.En.Base.GradeEntityNoNameBase.beforeUpdate">
            <summary>
            修改前的处理
            </summary>
        </member>
        <member name="M:BP.En.Base.GradeEntityNoNameBase.beforeInsert">
            <summary>
            插入前的处理
            </summary>
        </member>
        <member name="M:BP.En.Base.GradeEntityNoNameBase.beforeDelete">
            <summary>
            删除前的处理
            </summary>
        </member>
        <member name="M:BP.En.Base.GradeEntityNoNameBase.afterDelete">
            <summary>
            删除后处理, 判断他的父级.如果是明细就设置.他.
            </summary>
            <returns></returns>
        </member>
        <member name="P:BP.En.Base.GradeEntityNoNameBase.Grade">
            <summary>
            级数
            </summary>
        </member>
        <member name="P:BP.En.Base.GradeEntityNoNameBase.IsDtl">
            <summary>
            是否明细
            </summary>
        </member>
        <member name="P:BP.En.Base.GradeEntityNoNameBase.NoOfThisGrade">
            <summary>
            当前级别的编号
            </summary>
        </member>
        <member name="P:BP.En.Base.GradeEntityNoNameBase.CodeStueOfThisGrade">
            <summary>
            当前级别的编码。
            </summary>
        </member>
        <member name="P:BP.En.Base.GradeEntityNoNameBase.CodeStueOfParent">
            <summary>
            当前级别的上机编码。
            </summary>
        </member>
        <member name="P:BP.En.Base.GradeEntityNoNameBase.NoLengthOfParent">
            <summary>
            上级别的编码长度。
            </summary>
        </member>
        <member name="P:BP.En.Base.GradeEntityNoNameBase.NoOfParent">
            <summary>
            上级编号
            </summary>
        </member>
        <member name="P:BP.En.Base.GradeEntityNoNameBase.ParentNo_del">
            <summary>
            上级的No
            </summary>
        </member>
        <member name="P:BP.En.Base.GradeEntityNoNameBase.Parent">
            <summary>
            取到他的父节点
            </summary>
        </member>
        <member name="T:BP.En.Base.GradeEntitiesNoNameBase">
            <summary>
            分级的字典集合基类
            </summary>
        </member>
        <member name="M:BP.En.Base.GradeEntitiesNoNameBase.GetEntitiesByGrade(System.Int32)">
            <summary>
            
            </summary>
            <param name="grade"></param>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.GradeEntitiesNoNameBase.RetrieveByParnt(System.String)">
            <summary>
            查询
            </summary>
            <param name="parntNo">编号</param>
        </member>
        <member name="M:BP.En.Base.GradeEntitiesNoNameBase.RetrieveByParnt(System.String,System.Boolean)">
            <summary>
            查询
            </summary>
            <param name="parntNo">编号</param>
        </member>
        <member name="M:BP.En.Base.GradeEntitiesNoNameBase.QueryGradeEntitiesNoNameBase(System.Int32)">
            <summary>
            查询出所有的非明细值且指定级数
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.GradeEntitiesNoNameBase.RetrieveByGrade(System.Int32)">
            <summary>
            查询出指定级的所有数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.GradeEntitiesNoNameBase.CountBy(System.Int32)">
            <summary>
            统计该级的所有记录数
            </summary>
            <param name="grade">级数</param>
            <returns>记录数</returns>
        </member>
        <member name="M:BP.En.Base.GradeEntitiesNoNameBase.CountBy(System.String)">
            <summary>
            统计该编号的所有下级
            </summary>
            <param name="gradeNo">编号</param>
            <returns>记录数</returns>
        </member>
        <member name="M:BP.En.Base.GradeEntitiesNoNameBase.CountBy(System.String,System.Int32)">
            <summary>
            统计该编号下的指定级数的记录数
            </summary>
            <param name="gradeNo">编号</param>
            <param name="grade">级数</param>
            <returns>记录数</returns>
        </member>
        <member name="M:BP.En.Base.GradeEntitiesNoNameBase.CountBy(System.String,System.Int32,System.Boolean)">
            <summary>
            统计对象的记录数
            </summary>
            <param name="gradeNo">上级编号，如果为空则统计所有</param>
            <param name="grade">本级级数，如果小于等于0则统计所有</param>
            <param name="detailFlag">是否只统计明细记录</param>
            <returns>记录数</returns>
        </member>
        <member name="T:BP.En.Base.AdjunctType">
            <summary>
            附件类型
            </summary>
        </member>
        <member name="F:BP.En.Base.AdjunctType.None">
            <summary>
            不需要附件。
            </summary>
        </member>
        <member name="F:BP.En.Base.AdjunctType.PhotoOnly">
            <summary>
            图片
            </summary>
        </member>
        <member name="F:BP.En.Base.AdjunctType.WordOnly">
            <summary>
            word 文档。
            </summary>
        </member>
        <member name="F:BP.En.Base.AdjunctType.ExcelOnly">
            <summary>
            所有的类型
            </summary>
        </member>
        <member name="F:BP.En.Base.AdjunctType.AllType">
            <summary>
            所有的类型。
            </summary>
        </member>
        <member name="T:BP.En.Base.EnType">
            <summary>
            实体类型
            </summary>
        </member>
        <member name="F:BP.En.Base.EnType.Sys">
            <summary>
            系统实体
            </summary>
        </member>
        <member name="F:BP.En.Base.EnType.Admin">
            <summary>
            管理员维护的实体
            </summary>
        </member>
        <member name="F:BP.En.Base.EnType.App">
            <summary>
            应用程序实体
            </summary>
        </member>
        <member name="F:BP.En.Base.EnType.ThirdPart">
            <summary>
            第三方的实体
            </summary>
        </member>
        <member name="F:BP.En.Base.EnType.View">
            <summary>
            视图
            </summary>
        </member>
        <member name="F:BP.En.Base.EnType.PowerAble">
            <summary>
            可以纳入权限管理
            </summary>
        </member>
        <member name="F:BP.En.Base.EnType.Etc">
            <summary>
            其他
            </summary>
        </member>
        <member name="F:BP.En.Base.EnType.Dtl">
            <summary>
            明细或着点对点。
            </summary>
        </member>
        <member name="F:BP.En.Base.EnType.Dot2Dot">
            <summary>
            点对点
            </summary>
        </member>
        <member name="T:BP.En.Base.Map">
            <summary>
            EnMap 的摘要说明。
            </summary>
        </member>
        <member name="F:BP.En.Base.Map._DepositaryOfEntity">
            <summary>
            存放位置
            </summary>
        </member>
        <member name="F:BP.En.Base.Map._DepositaryOfMap">
            <summary>
            
            </summary>		
        </member>
        <member name="F:BP.En.Base.Map._SearchAttrs">
            <summary>
            查找的attrs 
            </summary>
        </member>
        <member name="M:BP.En.Base.Map.AddSearchAttr(System.String)">
            <summary>
            加入查找属性.
            </summary>
            <param name="key">key</param>
        </member>
        <member name="M:BP.En.Base.Map.AddSearchAttr(BP.En.Base.Attr)">
            <summary>
            加入查找属性.
            </summary>
            <param name="attr">属性</param>
        </member>
        <member name="M:BP.En.Base.Map.GetFieldByKey(System.String)">
            <summary>
            取得字段
            </summary>
            <param name="key">key</param>
            <returns>field name </returns>
        </member>
        <member name="M:BP.En.Base.Map.GetDescByKey(System.String)">
            <summary>
            取得描述
            </summary>
            <param name="key">key</param>
            <returns>val</returns>
        </member>
        <member name="M:BP.En.Base.Map.GetAttrByKey(System.String)">
            <summary>
            通过一个key 得到它的属性值。
            </summary>
            <param name="key">key</param>
            <returns>attr</returns>
        </member>
        <member name="M:BP.En.Base.Map.GetAttrByDesc(System.String)">
            <summary>
            通过一个key 得到它的属性值。
            </summary>
            <param name="key">key</param>
            <returns>attr</returns>
        </member>
        <member name="F:BP.En.Base.Map._MaxTBLength">
            <summary>
            取道最大的TB宽度。
            </summary>
        </member>
        <member name="F:BP.En.Base.Map._HisPhysicsAttrs">
            <summary>
            物理键盘集合
            </summary>
        </member>
        <member name="F:BP.En.Base.Map._HisFKAttrs">
            <summary>
            他的外键集合
            </summary>
        </member>
        <member name="F:BP.En.Base.Map._HisEnumAttrs">
            <summary>
            他的外键Enum集合
            </summary>
        </member>
        <member name="F:BP.En.Base.Map._HisFKEnumAttrs">
            <summary>
            他的外键EnumandPk集合
            </summary>
        </member>
        <member name="F:BP.En.Base.Map.IsView">
            <summary>
            查看
            </summary>
        </member>
        <member name="F:BP.En.Base.Map.IsInsert">
            <summary>
            插入
            </summary>
        </member>
        <member name="F:BP.En.Base.Map.IsUpdate">
            <summary>
            更新
            </summary>
        </member>
        <member name="F:BP.En.Base.Map.IsDelete">
            <summary>
            删除
            </summary>
        </member>
        <member name="F:BP.En.Base.Map.IsAdjunct">
            <summary>
            是不是显示附件
            </summary>
        </member>
        <member name="M:BP.En.Base.Map.AddDtl(BP.En.Base.Entities,System.String)">
            <summary>
            增加明细
            </summary>
            <param name="ens">集合信息</param>
            <param name="refKey">属性</param>
        </member>
        <member name="F:BP.En.Base.Map._Dtls">
            <summary>
            明细s
            </summary> 
        </member>
        <member name="F:BP.En.Base.Map._DtlsAll">
            <summary>
            所有的明细
            </summary> 
        </member>
        <member name="M:BP.En.Base.Map.#ctor(BP.DA.DBUrl,System.String)">
            <summary>
            构造涵数 
            </summary>
            <param name="dburl">数据库连接</param>
            <param name="physicsTable">物理table.</param>
        </member>
        <member name="M:BP.En.Base.Map.#ctor(System.String)">
            <summary>
            构造涵数
            </summary>
            <param name="physicsTable">物理table</param>
        </member>
        <member name="M:BP.En.Base.Map.#ctor(BP.DA.DBUrlType,System.String)">
            <summary>
            构造涵数
            </summary>
            <param name="DBUrlKeyList">连接的Key 你可以用  DBUrlKeyList 得到</param>
            <param name="physicsTable">物理表</param>
        </member>
        <member name="M:BP.En.Base.Map.#ctor">
            <summary>
            构造涵数
            </summary>
        </member>
        <member name="F:BP.En.Base.Map._AttrsOfOneVSM">
            <summary>
            多对多的关联
            </summary>
        </member>
        <member name="M:BP.En.Base.Map.GetAttrOfOneVSM(System.String)">
            <summary>
            通过多实体的类名称取出他的OneVSM属性.
            </summary>
            <param name="ensOfMMclassName"></param>
            <returns></returns>
        </member>
        <member name="F:BP.En.Base.Map._AdjunctType">
            <summary>
            文件类型
            </summary>
        </member>
        <member name="F:BP.En.Base.Map._EnDesc">
            <summary>
            实体描述
            </summary>
        </member>
        <member name="F:BP.En.Base.Map._IsCheckXXX">
            <summary>
            是否检查 XXX 输入.
            </summary>
        </member>
        <member name="F:BP.En.Base.Map._DefaultImageUrl">
            <summary>
            图片DefaultImageUrl
            </summary>
        </member>
        <member name="F:BP.En.Base.Map._HoverImageUrl">
            <summary>
            盘旋图片
            </summary>
        </member>
        <member name="F:BP.En.Base.Map._EnType">
            <summary>
            实体类型
            </summary>
        </member>
        <member name="F:BP.En.Base.Map._GenerNoLength">
            <summary>
            生成字串的字段的长度。
            </summary>
        </member>
        <member name="F:BP.En.Base.Map._CodeStruct">
            <summary>
            编码结构
            例如： 0， 2322;
            </summary>
        </member>
        <member name="F:BP.En.Base.Map._IsAllowRepeatNo">
            <summary>
            是否允许重复的编号(默认不允许重复。)
            </summary>
        </member>
        <member name="F:BP.En.Base.Map._IsAllowRepeatName">
            <summary>
            是否允许重复的名称(默认不允许重复。)
            </summary>
        </member>
        <member name="F:BP.En.Base.Map._IsAutoGenerNo">
            <summary>
            是否自动编号
            </summary>
        </member>
        <member name="F:BP.En.Base.Map._IsCheckNoLength">
            <summary>
            是否检查编号长度。（默认的false）
            </summary>
        </member>
        <member name="M:BP.En.Base.Map.AddBoolean(System.String,System.String,System.Boolean,System.String,System.Boolean,System.Boolean)">
            <summary>
            增加与boolen 有关系的操作.
            </summary>
            <param name="key">key</param>
            <param name="field">field</param>
            <param name="defaultVal">defaultVal</param>
            <param name="desc">desc</param>
            <param name="isUIEnable">isUIEnable</param>
            <param name="isUIVisable">isUIVisable</param>
        </member>
        <member name="M:BP.En.Base.Map.AddBoolean(System.String,System.Boolean,System.String,System.Boolean,System.Boolean)">
            <summary>
            增加与boolen 有关系的操作.
            </summary>
            <param name="key">key</param>
            <param name="field">field</param>
            <param name="defaultVal">defaultVal</param>
            <param name="desc">desc</param>
            <param name="isUIEnable">isUIEnable</param>
            <param name="isUIVisable">isUIVisable</param>
        </member>
        <member name="M:BP.En.Base.Map.AddDDLSysEnum(System.String,System.String,System.Int32,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            自定义枚举类型
            </summary>
            <param name="key">键</param>
            <param name="field">字段</param>
            <param name="defaultVal">默认</param>
            <param name="desc">描述</param>
            <param name="sysEnumKey">Key</param>
        </member>
        <member name="M:BP.En.Base.Map.AddDDLSysEnum(System.String,System.Int32,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            自定义枚举类型
            </summary>
            <param name="key">键</param>		
            <param name="defaultVal">默认</param>
            <param name="desc">描述</param>
            <param name="sysEnumKey">Key</param>
        </member>
        <member name="M:BP.En.Base.Map.AddRadioBtnSysEnum(System.String,System.String,System.Int32,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            自定义枚举类型
            </summary>
            <param name="key">键</param>
            <param name="field">字段</param>
            <param name="defaultVal">默认</param>
            <param name="desc">描述</param>
            <param name="sysEnumKey">Key</param>
        </member>
        <member name="M:BP.En.Base.Map.AddRadioBtnSysEnum(System.String,System.Int32,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            自定义枚举类型
            </summary>
            <param name="key">键</param>		
            <param name="defaultVal">默认</param>
            <param name="desc">描述</param>
            <param name="sysEnumKey">Key</param>
        </member>
        <member name="M:BP.En.Base.Map.AddDDLEntities(System.String,System.String,System.Object,System.Int32,BP.En.Base.FieldType,System.String,BP.En.Base.Entities,System.String,System.String,System.Boolean)">
            <summary>
            于实体有关系的操作。
            </summary>
            <param name="key">健值</param>
            <param name="field">字段</param>
            <param name="defaultVal">默认值</param>
            <param name="dataType">DataType类型</param>
            <param name="desc">描述</param>
            <param name="ens">实体集合</param>
            <param name="refKey">关联的建</param>
            <param name="refText">关联的Text</param>
        </member>
        <member name="M:BP.En.Base.Map.AddDDLEntities(System.String,System.Object,System.Int32,System.String,BP.En.Base.Entities,System.String,System.String,System.Boolean)">
            <summary>
            于实体有关系的操作。字段与属性名称相同。
            </summary>
            <param name="key">健值</param>
            <param name="field">字段</param>
            <param name="defaultVal">默认值</param>
            <param name="dataType">DataType类型</param>
            <param name="desc">描述</param>
            <param name="ens">实体集合</param>
            <param name="refKey">关联的建</param>
            <param name="refText">关联的Text</param>
        </member>
        <member name="M:BP.En.Base.Map.AddDDLEntitiesNoName(System.String,System.String,System.String,System.String,BP.En.Base.EntitiesNoName,System.Boolean)">
            <summary>
            关于EntitiesNoName 有关系的操作
            </summary>
            <param name="key"></param>
            <param name="field"></param>
            <param name="defaultVal"></param>
            <param name="desc"></param>
            <param name="ens"></param>
            <param name="uiIsEnable"></param>
        </member>
        <member name="M:BP.En.Base.Map.AddDDLEntitiesNoName(System.String,System.String,System.String,BP.En.Base.EntitiesNoName,System.Boolean)">
            <summary>
            关于EntitiesNoName 有关系的操作
            </summary>
            <param name="key"></param>
            <param name="defaultVal"></param>
            <param name="desc"></param>
            <param name="ens"></param>
            <param name="uiIsReadonly"></param>
        </member>
        <member name="M:BP.En.Base.Map.AddTBStringFKEnsRefValue_del(System.String,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            与外键植有关系的 
            </summary>
            <param name="refKey">在本地的Key植</param>
            <param name="key">本地的key.</param>
            <param name="desc">描述</param>
            <param name="uiIsVisable">是不是可见</param>
            <param name="With">宽度</param>
        </member>
        <member name="M:BP.En.Base.Map.AddTBString(System.String,System.String,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>
            增加一个textbox 类型的属性。
            </summary>
            <param name="key">健值</param>
            <param name="field">字段值</param>
            <param name="defaultVal">默认值</param>
            <param name="_FieldType">字段类型</param>
            <param name="desc">描述</param>
            <param name="uiVisable">是不是可见</param>
            <param name="uiVisable">是不是只读</param>
            <param name="minLength">最小长度</param>
            <param name="maxLength">最大长度</param>
            <param name="tbWith">宽度</param> 
        </member>
        <member name="M:BP.En.Base.Map.AddTBStringDoc(System.String,System.String,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            增加大块文本输入
            </summary>
            <param name="key">key</param>		 
            <param name="defaultVal">defaultVal</param>
            <param name="desc">desc</param>
            <param name="uiVisable">uiVisable</param>
            <param name="isReadonly">isReadonly</param>
            <param name="minLength">minLength</param>
            <param name="maxLength">maxLength</param>
            <param name="tbWith">tbWith</param>
            <param name="rows">rows</param>
        </member>
        <member name="M:BP.En.Base.Map.AddTBStringDoc(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            增加大块文本输入
            </summary>
            <param name="key">key</param>
            <param name="field">field</param>
            <param name="defaultVal">defaultVal</param>
            <param name="desc">desc</param>
            <param name="uiVisable">uiVisable</param>
            <param name="isReadonly">isReadonly</param>
            <param name="minLength">minLength</param>
            <param name="maxLength">maxLength</param>
            <param name="tbWith">tbWith</param>
            <param name="rows">rows</param>
        </member>
        <member name="M:BP.En.Base.Map.AddTBStringFKEns(System.String,System.String,System.String,System.String,BP.En.Base.Entities,System.String,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>
            外键于 Ens 有关系的操作。
            </summary>
            <param name="key">属性</param>
            <param name="field">字段</param>
            <param name="defaultVal">默认值</param>
            <param name="desc">描述</param>
            <param name="ens">实体</param>		 
            <param name="uiVisable">是不是可见</param>
            <param name="isReadonly">是不是只读</param>
            <param name="minLength">最小长度</param>
            <param name="maxLength">最大长度</param>
            <param name="tbWith">宽度</param>
        </member>
        <member name="M:BP.En.Base.Map.AddTBStringFKEns(System.String,System.String,System.String,BP.En.Base.Entities,System.String,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>
            外键于 Ens 有关系的操作。
            </summary>
            <param name="key">属性</param>
            <param name="defaultVal">默认值</param>
            <param name="desc">描述</param>
            <param name="ens">实体</param>		 
            <param name="uiVisable">是不是可见</param>
            <param name="isReadonly">是不是只读</param>
            <param name="minLength">最小长度</param>
            <param name="maxLength">最大长度</param>
            <param name="tbWith">宽度</param>
        </member>
        <member name="M:BP.En.Base.Map.AddTBMultiValues(System.String,System.String,System.Object,System.String,BP.En.Base.Entities,System.String,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>
            于多值有关系的操作
            </summary>
            <param name="key"></param>
            <param name="field"></param>
            <param name="defaultVal"></param>
            <param name="desc"></param>
            <param name="ens"></param>
            <param name="uiVisable"></param>
            <param name="isReadonly"></param>
            <param name="minLength"></param>
            <param name="maxLength"></param>
            <param name="tbWith"></param>
        </member>
        <member name="M:BP.En.Base.Map.AddTBStringPKEns(System.String,System.String,System.Object,System.String,BP.En.Base.Entities,System.String,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>
            外键于 Ens 有关系的操作。
            主键
            </summary>
            <param name="key">属性</param>
            <param name="field">字段</param>
            <param name="defaultVal">默认值</param>
            <param name="desc">描述</param>
            <param name="ens">实体</param>		 
            <param name="uiVisable">是不是可见</param>
            <param name="isReadonly">是不是只读</param>
            <param name="minLength">最小长度</param>
            <param name="maxLength">最大长度</param>
            <param name="tbWith">宽度</param>
        </member>
        <member name="M:BP.En.Base.Map.AddTBStringPKEns(System.String,System.String,System.String,BP.En.Base.Entities,System.String,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>
            外键于 Ens 有关系的操作。
            </summary>
            <param name="key">属性</param>
            <param name="defaultVal">默认值</param>
            <param name="desc">描述</param>
            <param name="ens">实体</param>		 
            <param name="uiVisable">是不是可见</param>
            <param name="isReadonly">是不是只读</param>
            <param name="minLength">最小长度</param>
            <param name="maxLength">最大长度</param>
            <param name="tbWith">宽度</param>
        </member>
        <!-- 对于成员“M:BP.En.Base.Map.AddTBStringPKSelf(System.String,System.String,System.Object,System.String,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:BP.En.Base.Map.AddTBStringPKSelf(System.String,System.Object,System.String,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:BP.En.Base.Map.AddTBStringFKSelf(System.String,System.String,System.Object,System.String,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:BP.En.Base.Map.AddTBStringFKSelf(System.String,System.Object,System.String,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32)”忽略有格式错误的 XML 注释 -->
        <member name="M:BP.En.Base.Map.AddTBDate(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            增加日期类型的控健
            </summary>
            <param name="key">健值</param>
            <param name="defaultVal">默认值</param>
            <param name="desc">描述</param>
            <param name="uiVisable">是不是可见</param>
            <param name="isReadonly">是不是只读</param>
        </member>
        <member name="M:BP.En.Base.Map.AddTBDate(System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            增加日期类型的控健
            </summary>
            <param name="key">key</param>
            <param name="defaultVal">defaultVal/如果你想用当天的信息,请选择后面的方法加入</param>
            <param name="desc">desc</param>
            <param name="uiVisable">uiVisable</param>
            <param name="isReadonly">isReadonly</param>
        </member>
        <member name="M:BP.En.Base.Map.AddTBDate(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            增加日期类型的控健(默认日期是当前日期)
            </summary>
            <param name="key">key</param>
            <param name="desc">desc</param>
            <param name="uiVisable">uiVisable</param>
            <param name="isReadonly">isReadonly</param>
        </member>
        <member name="M:BP.En.Base.Map.AddTBDateTime(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            增加日期类型的控健
            </summary>
            <param name="key">健值</param>
            <param name="defaultVal">默认值</param>
            <param name="desc">描述</param>
            <param name="uiVisable">是不是可见</param>
            <param name="isReadonly">是不是只读</param>
        </member>
        <member name="M:BP.En.Base.Map.AddTBInt(System.String,System.String,System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            增加一个普通的类型。
            </summary>
            <param name="key">键</param>
            <param name="_Field">字段</param>
            <param name="defaultVal">默认值</param>
            <param name="desc">描述</param>
            <param name="uiVisable">是不是可见</param>
            <param name="isReadonly">是不是只读</param>
        </member>
        <member name="M:BP.En.Base.Map.AddTBInt(System.String,System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            增加一个普通的类型。字段值与属性相同。
            </summary>
            <param name="key">键</param>		 
            <param name="defaultVal">默认值</param>
            <param name="desc">描述</param>
            <param name="uiVisable">是不是可见</param>
            <param name="isReadonly">是不是只读</param>
        </member>
        <member name="M:BP.En.Base.Map.AddTBIntPK(System.String,System.String,System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            增加一个PK的类型。
            </summary>
            <param name="key">键</param>
            <param name="_Field">字段</param>
            <param name="defaultVal">默认值</param>
            <param name="desc">描述</param>
            <param name="uiVisable">是不是可见</param>
            <param name="isReadonly">是不是只读</param>
        </member>
        <member name="M:BP.En.Base.Map.AddTBIntPKOID(System.String,System.String)">
            <summary>
            增加一个PK的类型。字段值与属性相同。
            </summary>
            <param name="key">键</param>		 
            <param name="defaultVal">默认值</param>
            <param name="desc">描述</param>
            <param name="uiVisable">是不是可见</param>
            <param name="isReadonly">是不是只读</param>
        </member>
        <member name="M:BP.En.Base.Map.AddTBMID">
            <summary>
            增加一个MID
            </summary>
        </member>
        <member name="M:BP.En.Base.Map.AddTBIntPK(System.String,System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            增加一个PK的类型。字段值与属性相同。
            </summary>
            <param name="key">键</param>		 
            <param name="defaultVal">默认值</param>
            <param name="desc">描述</param>
            <param name="uiVisable">是不是可见</param>
            <param name="isReadonly">是不是只读</param>
        </member>
        <member name="M:BP.En.Base.Map.AddTB_del(System.String,System.String,System.Object,System.Int32,System.String,System.String)">
            <summary>
            AddTB
            </summary>
            <param name="key">key</param>
            <param name="field">field</param>
            <param name="defaultVal">defaultVal</param>
            <param name="dataType">dataType</param>
            <param name="desc">desc</param>
            <param name="bindkey">bindkey</param>
        </member>
        <member name="M:BP.En.Base.Map.AddAttr(System.String,System.String,System.Object,System.Int32,System.Boolean,System.String,System.Int32,System.Int32)">
            <summary>
            增加属性
            </summary>
            <param name="key">属性名称</param>
            <param name="field">对应的字段</param>
            <param name="defaultVal">默认值</param>
            <param name="dataType">数据类型</param>
            <param name="isPK">是不是主键</param>
            <param name="desc">属性的描述</param>
            <param name="minLength">最大长度</param>
            <param name="maxLength">最小长度</param>
        </member>
        <member name="M:BP.En.Base.Map.AddAttr(System.String,System.String,System.Object,System.Int32,System.Boolean,System.String)">
            <summary>
            增加属性
            </summary>
            <param name="key">属性名称</param>
            <param name="field">对应的字段</param>
            <param name="defaultVal">默认值</param>
            <param name="dataType">数据类型</param>
            <param name="isPK">是不是主键</param>
            <param name="desc">属性的描述</param>
        </member>
        <member name="M:BP.En.Base.Map.AddAttr(System.String,System.Object,System.Int32,System.Boolean,System.String)">
            <summary>
            用这种方式加入，属性名称于字段相同
            </summary>
            <param name="key"></param>
            <param name="defaultVal"></param>
            <param name="dataType"></param>
            <param name="isPK"></param>
            <param name="desc"></param>
        </member>
        <member name="M:BP.En.Base.Map.AddAttr(System.String,System.Object,System.Int32,System.Boolean,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
             用这种方式加入，属性名称于字段相同
            </summary>
            <param name="key"></param>
            <param name="defaultVal"></param>
            <param name="dataType"></param>
            <param name="isPK"></param>
            <param name="desc"></param>
            <param name="minLength"></param>
            <param name="maxLength"></param>
            <param name="uiTBWith"></param>
        </member>
        <member name="M:BP.En.Base.Map.AddAttr(System.String,System.Object,System.Int32,System.Boolean,System.String,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
             用这种方式加入，属性名称于字段相同
            </summary>
            <param name="key"></param>
            <param name="defaultVal"></param>
            <param name="dataType"></param>
            <param name="isPK"></param>
            <param name="desc"></param>
            <param name="minLength"></param>
            <param name="maxLength"></param>
            <param name="uiTBWith"></param>
            <param name="dataHelpKey"></param>
        </member>
        <member name="M:BP.En.Base.Map.AddAttr(System.String,System.Object,System.Int32,System.Boolean,System.String,System.Int32,System.Int32)">
            <summary>
            用这种方式加入，属性名称于字段相同。
            </summary>
            <param name="key"></param>
            <param name="defaultVal"></param>
            <param name="dataType"></param>
            <param name="isPK"></param>
            <param name="desc"></param>
        </member>
        <member name="P:BP.En.Base.Map.DepositaryOfEntity">
            <summary>
            存放位置OfEntity
            </summary>
        </member>
        <member name="P:BP.En.Base.Map.DepositaryOfMap">
            <summary>
            存放位置
            </summary>
        </member>
        <member name="P:BP.En.Base.Map.AttrsOfSearch">
            <summary>
            查找属性
            </summary>
        </member>
        <member name="P:BP.En.Base.Map.SearchAttrs">
            <summary>
            查找的attrs
            </summary>
        </member>
        <member name="P:BP.En.Base.Map.MaxTBLength">
            <summary>
            最大的TB宽度。
            </summary>
        </member>
        <member name="P:BP.En.Base.Map.HisPhysicsAttrs">
            <summary>
            物理键盘集合
            </summary>
        </member>
        <member name="P:BP.En.Base.Map.HisFKAttrs">
            <summary>
            他的外键集合
            </summary>
        </member>
        <member name="P:BP.En.Base.Map.HisEnumAttrs">
            <summary>
            他的外键Enum集合
            </summary>
        </member>
        <member name="P:BP.En.Base.Map.HisFKEnumAttrs">
            <summary>
            他的外键EnumandPk集合
            </summary>
        </member>
        <member name="P:BP.En.Base.Map.Dtls">
            <summary>
            他的明细
            </summary>
        </member>
        <member name="P:BP.En.Base.Map.DtlsAll">
            <summary>
            所有的明细
            </summary>
        </member>
        <member name="P:BP.En.Base.Map.AttrsOfOneVSM">
            <summary>
            点对多的关联
            </summary>
        </member>
        <member name="P:BP.En.Base.Map.AdjunctType">
            <summary>
            文件类型
            </summary>
        </member>
        <member name="P:BP.En.Base.Map.IsCheckXXX">
            <summary>
            是否检查 XXX 输入.
            在默认值中，带有xxx的信息。需要用户去修改它。但是在保存前经常忘掉，为了做这个提示，请在 map 里面加入此项修改。
            </summary>
        </member>
        <member name="P:BP.En.Base.Map.DefaultImageUrl">
            <summary>
            实体图片
            </summary>
        </member>
        <member name="P:BP.En.Base.Map.HoverImageUrl">
            <summary>
            盘旋图片
            </summary>
        </member>
        <member name="P:BP.En.Base.Map.EnType">
            <summary>
            实体类型 默认为0(用户应用).
            </summary>
        </member>
        <member name="P:BP.En.Base.Map.CodeStruct">
            <summary>
            编码的结构
            </summary>
        </member>
        <member name="P:BP.En.Base.Map.CodeLength">
            <summary>
            编号的总长度。
            </summary>
        </member>
        <member name="P:BP.En.Base.Map.IsAllowRepeatNo">
            <summary>
            是否允许重复的编号.
            在insert,update 前检查。
            </summary>
        </member>
        <member name="P:BP.En.Base.Map.IsAllowRepeatName">
            <summary>
            是否允许重复的名称.
            在insert，update 前检查。
            </summary>
        </member>
        <member name="P:BP.En.Base.Map.IsAutoGenerNo">
            <summary>
            是否自动编号.		 
            </summary>
        </member>
        <member name="P:BP.En.Base.Map.IsCheckNoLength">
            <summary>
            是否检查编号长度.
            在insert 前检查。
            </summary>
        </member>
        <member name="P:BP.En.Base.Map.EnDBUrl">
            <summary>
            数据库连接
            </summary>
        </member>
        <member name="P:BP.En.Base.Map.PhysicsTable">
            <summary>
            物理表名称
            </summary>
            <returns>Table name</returns>
        </member>
        <member name="T:BP.En.Base.Row">
            <summary>
            Row 的摘要说明。
            用来处理一条记录的存放，问题。
            </summary>
        </member>
        <member name="M:BP.En.Base.Row.SetValByKey(System.String,System.Object)">
            <summary>
            设置一个值by key . 
            </summary>
            <param name="key"></param>
            <param name="val"></param>
        </member>
        <member name="T:BP.En.Base.Rows">
            <summary>
            row 集合
            </summary>
        </member>
        <member name="M:BP.En.Base.Rows.Add(BP.En.Base.Row)">
            <summary>
            增加一个Row .
            </summary>
            <param name="r">row</param>
        </member>
        <member name="T:BP.En.Base.SimpleNoNameAttr">
            <summary>
            属性
            </summary>
        </member>
        <member name="M:BP.En.Base.SimpleNoName2.beforeInsert">
            <summary>
            逻辑处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.SimpleNoName2.beforeUpdate">
            <summary>
            逻辑处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.SimpleNoName2.beforeDelete">
            <summary>
            逻辑处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.SimpleNoName2.afterDelete">
            <summary>
            逻辑处理
            </summary>
        </member>
        <member name="M:BP.En.Base.SimpleNoName2.afterInsert">
            <summary>
            逻辑处理
            </summary>
        </member>
        <member name="M:BP.En.Base.SimpleNoName2.afterUpdate">
            <summary>
            逻辑处理
            </summary>
        </member>
        <member name="P:BP.En.Base.SimpleNoName2.PhysicsTable">
            <summary>
            指定表
            </summary>
        </member>
        <member name="P:BP.En.Base.SimpleNoName2.Desc">
            <summary>
            描述
            </summary>
        </member>
        <member name="T:BP.En.Base.SimpleNoNames">
            <summary>
            SimpleNoNames
            </summary>
        </member>
        <member name="M:BP.En.Base.SimpleNoNames.#ctor">
            <summary>
            SimpleNoNames
            </summary>
        </member>
        <member name="T:BP.En.Base.SimpleNoNameFixAttr">
            <summary>
            属性
            </summary>
        </member>
        <member name="M:BP.En.Base.SimpleNoNameFix.beforeInsert">
            <summary>
            逻辑处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.SimpleNoNameFix.beforeUpdate">
            <summary>
            逻辑处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.SimpleNoNameFix.beforeDelete">
            <summary>
            逻辑处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.SimpleNoNameFix.afterDelete">
            <summary>
            逻辑处理
            </summary>
        </member>
        <member name="M:BP.En.Base.SimpleNoNameFix.afterInsert">
            <summary>
            逻辑处理
            </summary>
        </member>
        <member name="M:BP.En.Base.SimpleNoNameFix.afterUpdate">
            <summary>
            逻辑处理
            </summary>
        </member>
        <member name="P:BP.En.Base.SimpleNoNameFix.PhysicsTable">
            <summary>
            指定表
            </summary>
        </member>
        <member name="P:BP.En.Base.SimpleNoNameFix.Desc">
            <summary>
            描述
            </summary>
        </member>
        <member name="T:BP.En.Base.SimpleNoNameFixs">
            <summary>
            SimpleNoNameFixs
            </summary>
        </member>
        <member name="M:BP.En.Base.SimpleNoNameFixs.#ctor">
            <summary>
            SimpleNoNameFixs
            </summary>
        </member>
        <member name="T:BP.En.Base.SimpleNoNaIEnoteAttr">
            <summary>
            属性
            </summary>
        </member>
        <member name="M:BP.En.Base.SimpleNoNaIEnote.#ctor">
            <summary>
            简单编码类实体
            </summary>
        </member>
        <member name="M:BP.En.Base.SimpleNoNaIEnote.#ctor(System.String)">
            <summary>
            简单编码类实体
            </summary>
            <param name="_No">编号</param>
        </member>
        <member name="M:BP.En.Base.SimpleNoNaIEnote.beforeInsert">
            <summary>
            增加逻辑处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.SimpleNoNaIEnote.beforeUpdate">
            <summary>
            更新逻辑处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.SimpleNoNaIEnote.beforeDelete">
            <summary>
            逻辑处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.SimpleNoNaIEnote.afterDelete">
            <summary>
            逻辑处理
            </summary>
        </member>
        <member name="M:BP.En.Base.SimpleNoNaIEnote.afterInsert">
            <summary>
            逻辑处理
            </summary>
        </member>
        <member name="M:BP.En.Base.SimpleNoNaIEnote.afterUpdate">
            <summary>
            逻辑处理
            </summary>
        </member>
        <member name="P:BP.En.Base.SimpleNoNaIEnote.Note">
            <summary>
            Note
            </summary>
        </member>
        <member name="P:BP.En.Base.SimpleNoNaIEnote.EnMap">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:BP.En.Base.SimpleNoNaIEnote.PhysicsTable">
            <summary>
            指定表
            </summary>
        </member>
        <member name="P:BP.En.Base.SimpleNoNaIEnote.Desc">
            <summary>
            描述
            </summary>
        </member>
        <member name="T:BP.Sys.SysIEnAttr">
            <summary>
            sss
            </summary>
        </member>
        <member name="F:BP.Sys.SysIEnAttr.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="F:BP.Sys.SysIEnAttr.EnClassName">
            <summary>
            实体名称
            </summary>
        </member>
        <member name="F:BP.Sys.SysIEnAttr.EnType">
            <summary>
            实体类型
            </summary> 
        </member>
        <member name="T:BP.Sys.SysIEn">
            <summary>
            SysIEns
            </summary>
        </member>
        <member name="M:BP.Sys.SysIEn.#ctor(System.String)">
            <summary>
            EnsClassName
            </summary>
            <param name="EnsClassName">EnsClassName</param>
        </member>
        <member name="P:BP.Sys.SysIEn.EnClassName">
            <summary>
            实体名称
            </summary>
        </member>
        <member name="P:BP.Sys.SysIEn.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:BP.Sys.SysIEn.HisEnType">
            <summary>
            实体类型 0 , 应用, 1, 管理员维护, 2, 预制实体.
            </summary>
        </member>
        <member name="T:BP.Sys.SysIEns">
            <summary>
            实体集合
            </summary>
        </member>
        <member name="P:BP.Sys.SysIEns.GetNewEntity">
            <summary>
            得到它的 Entity
            </summary>
        </member>
        <member name="T:BP.Sys.EnAttrLanguageAttr">
            <summary>
            实体语言
            </summary>
        </member>
        <member name="T:BP.Sys.EnAttrLanguage">
            <summary>
            EnAttrLanguages
            </summary>
        </member>
        <member name="M:BP.Sys.EnAttrLanguage.#ctor(System.String)">
            <summary>
            EnsClassName
            </summary>
            <param name="EnsClassName"></param>
        </member>
        <member name="T:BP.Sys.EnAttrLanguages">
            <summary>
            实体集合
            </summary>
        </member>
        <member name="P:BP.Sys.EnAttrLanguages.GetNewEntity">
            <summary>
            得到它的 Entity
            </summary>
        </member>
        <member name="T:BP.Sys.EnLanguageAttr">
            <summary>
            实体语言
            </summary>
        </member>
        <member name="T:BP.Sys.EnLanguage">
            <summary>
            EnLanguages
            </summary>
        </member>
        <member name="M:BP.Sys.EnLanguage.#ctor(System.String)">
            <summary>
            EnsClassName
            </summary>
            <param name="EnsClassName">EnsClassName</param>
        </member>
        <member name="T:BP.Sys.EnLanguages">
            <summary>
            实体集合
            </summary>
        </member>
        <member name="P:BP.Sys.EnLanguages.GetNewEntity">
            <summary>
            得到它的 Entity
            </summary>
        </member>
        <member name="F:BP.Sys.LanguageAttr.Flag">
            <summary>
            标记
            </summary>
        </member>
        <member name="M:BP.Sys.Language.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:BP.Sys.Language.EnMap">
            <summary>
            重写基类的方法
            </summary>
        </member>
        <member name="P:BP.Sys.Languages.GetNewEntity">
            <summary>
            得到它的 Entity 
            </summary>
        </member>
        <member name="T:BP.Sys.Operator">
            <summary>
            操做符号
            </summary>
        </member>
        <member name="M:BP.Sys.Operator.#ctor">
            <summary>
            工作操做符号
            </summary> 
        </member>
        <member name="M:BP.Sys.Operator.#ctor(System.String)">
            <summary>
            操做符号
            </summary>
            <param name="_No"></param>
        </member>
        <member name="P:BP.Sys.Operator.PhysicsTable">
            <summary>
            PhysicsTable
            </summary>
        </member>
        <member name="P:BP.Sys.Operator.Desc">
            <summary>
            Desc
            </summary>
        </member>
        <member name="T:BP.Sys.Operators">
            <summary>
            操做符号s
            </summary>
        </member>
        <member name="M:BP.Sys.Operators.#ctor">
            <summary>
            操做符号
            </summary>
        </member>
        <member name="P:BP.Sys.Operators.GetNewEntity">
            <summary>
            得到它的 Entity
            </summary>
        </member>
        <member name="T:BP.Sys.SysEnAttr">
            <summary>
            abc_afs
            </summary>
        </member>
        <member name="F:BP.Sys.SysEnAttr.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="F:BP.Sys.SysEnAttr.EnClassName">
            <summary>
            实体名称
            </summary>
        </member>
        <member name="F:BP.Sys.SysEnAttr.EnType">
            <summary>
            实体类型
            </summary> 
        </member>
        <member name="T:BP.Sys.SysEn">
            <summary>
            SysEns
            </summary>
        </member>
        <member name="M:BP.Sys.SysEn.#ctor">
            <summary>
            系统实体
            </summary>
        </member>
        <member name="M:BP.Sys.SysEn.#ctor(System.String)">
            <summary>
            系统实体
            </summary>
            <param name="EnsClassName">类名称</param>
        </member>
        <member name="P:BP.Sys.SysEn.EnClassName">
            <summary>
            实体名称
            </summary>
        </member>
        <member name="P:BP.Sys.SysEn.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:BP.Sys.SysEn.EnTypeOFInt">
            <summary>
            实体类型 0 , 应用, 1, 管理员维护, 2, 预制实体.
            </summary>
        </member>
        <member name="T:BP.Sys.SysEns">
            <summary>
            实体集合
            </summary>
        </member>
        <member name="M:BP.Sys.SysEns.Retrieve(BP.En.Base.EnType)">
            <summary>
            按照实体的类型查询。
            </summary>
            <param name="type">实体的类型</param>
            <returns>返回查询的个数</returns>
        </member>
        <member name="P:BP.Sys.SysEns.GetNewEntity">
            <summary>
            得到它的 Entity
            </summary>
        </member>
        <member name="T:BP.Sys.SysEnumAttr">
            <summary>
            sss
            </summary>
        </member>
        <member name="F:BP.Sys.SysEnumAttr.Lab">
            <summary>
            标题
            </summary>
        </member>
        <member name="F:BP.Sys.SysEnumAttr.IntKey">
            <summary>
            Int key
            </summary>
        </member>
        <member name="F:BP.Sys.SysEnumAttr.EnumKey">
            <summary>
            EnumKey
            </summary>
        </member>
        <member name="F:BP.Sys.SysEnumAttr.FK_Language">
            <summary>
            Language
            </summary>
        </member>
        <member name="T:BP.Sys.SysEnum">
            <summary>
            SysEnum
            </summary>
        </member>
        <member name="M:BP.Sys.SysEnum.GetLabByPK(System.String,System.Int32)">
            <summary>
            得到一个String By LabKey.
            </summary>
            <param name="EnumKey"></param>
            <param name="intKey"></param>
            <returns></returns>
        </member>
        <member name="M:BP.Sys.SysEnum.#ctor">
            <summary>
            SysEnum
            </summary>
        </member>
        <member name="M:BP.Sys.SysEnum.#ctor(System.String,System.Int32)">
            <summary>
            税务编号
            </summary>
            <param name="_No">编号</param>
        </member>
        <member name="P:BP.Sys.SysEnum.Lab">
            <summary>
            标签
            </summary>
        </member>
        <member name="P:BP.Sys.SysEnum.FK_Language">
            <summary>
            标签
            </summary>
        </member>
        <member name="P:BP.Sys.SysEnum.IntKey">
            <summary>
            Int val
            </summary>
        </member>
        <member name="P:BP.Sys.SysEnum.EnumKey">
            <summary>
            EnumKey
            </summary>
        </member>
        <member name="P:BP.Sys.SysEnum.EnMap">
            <summary>
            Map
            </summary>
        </member>
        <member name="T:BP.Sys.SysEnums">
            <summary>
            纳税人集合 
            </summary>
        </member>
        <member name="M:BP.Sys.SysEnums.#ctor(System.String)">
            <summary>
            SysEnums
            </summary>
            <param name="EnumKey"></param>
        </member>
        <member name="M:BP.Sys.SysEnums.ToEntitiesNoName">
            <summary>
            DBSimpleNoNames
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.Sys.SysEnums.#ctor">
            <summary>
            SysEnums
            </summary>
        </member>
        <member name="M:BP.Sys.SysEnums.GetLabByVal(System.Int32)">
            <summary>
            通过int 得到Lab
            </summary>
            <param name="val">val</param>
            <returns>string val</returns>
        </member>
        <member name="P:BP.Sys.SysEnums.GetNewEntity">
            <summary>
            得到它的 Entity
            </summary>
        </member>
        <member name="F:BP.Sys.SysFileManagerAttr.LoadDate">
            <summary>
            上传日期
            </summary>
        </member>
        <member name="F:BP.Sys.SysFileManagerAttr.RefTable">
            <summary>
            关联的Table
            </summary>
        </member>
        <member name="F:BP.Sys.SysFileManagerAttr.RefKey">
            <summary>
            关联的key
            </summary>
        </member>
        <member name="F:BP.Sys.SysFileManagerAttr.FilePath">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="F:BP.Sys.SysFileManagerAttr.FileSize">
            <summary>
            文件大小
            </summary>
        </member>
        <member name="F:BP.Sys.SysFileManagerAttr.FileType">
            <summary>
            文件类型
            </summary>
        </member>
        <member name="F:BP.Sys.SysFileManagerAttr.Note">
            <summary>
            备注
            </summary>
        </member>
        <member name="M:BP.Sys.SysFileManager.#ctor(System.Int32)">
            <summary>
            文件管理者
            </summary>
            <param name="_OID"></param>
        </member>
        <member name="M:BP.Sys.SysFileManager.#ctor(System.String)">
            <summary>
            文件管理者
            </summary>
            <param name="_No"></param>
        </member>
        <member name="T:BP.Sys.SysFileManagers">
            <summary>
            文件管理者 
            </summary>
        </member>
        <member name="P:BP.Sys.SysFileManagers.GetNewEntity">
            <summary>
            得到它的 Entity
            </summary>
        </member>
        <member name="T:BP.Sys.SysFileTypeAttr">
            <summary>
            文件类型
            </summary>
        </member>
        <member name="F:BP.Sys.SysFileTypeAttr.Postfix">
            <summary>
            后缀
            </summary>
        </member>
        <member name="F:BP.Sys.SysFileTypeAttr.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="F:BP.Sys.SysFileTypeAttr.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="T:BP.Sys.SysFileType">
            <summary>
            SysFileType
            </summary>
        </member>
        <member name="M:BP.Sys.SysFileType.#ctor(System.String)">
            <summary>
            文件管理者
            </summary>
            <param name="_No"></param>
        </member>
        <member name="P:BP.Sys.SysFileType.EnMap">
            <summary>
            map 
            </summary>
        </member>
        <member name="T:BP.Sys.SysFileTypes">
            <summary>
            文件管理者 
            </summary>
        </member>
        <member name="M:BP.Sys.SysFileTypes.#ctor">
            <summary>
            文件管理者s
            </summary>
        </member>
        <member name="P:BP.Sys.SysFileTypes.GetNewEntity">
            <summary>
            得到它的 Entity
            </summary>
        </member>
        <member name="T:BP.Sys.SysUIEnsRefFuncAttr">
            <summary>
            attr
            </summary>
        </member>
        <member name="F:BP.Sys.SysUIEnsRefFuncAttr.Url">
            <summary>
            相关联的路径
            </summary>
        </member>
        <member name="F:BP.Sys.SysUIEnsRefFuncAttr.Target">
            <summary>
            打开方式
            </summary>
        </member>
        <member name="F:BP.Sys.SysUIEnsRefFuncAttr.Width">
            <summary>
            宽度
            </summary>
        </member>
        <member name="F:BP.Sys.SysUIEnsRefFuncAttr.Hight">
            <summary>
            高度
            </summary>
        </member>
        <member name="F:BP.Sys.SysUIEnsRefFuncAttr.IsForDtl">
            <summary>
            是否为Dtl
            </summary>
        </member>
        <member name="F:BP.Sys.SysUIEnsRefFuncAttr.Icon">
            <summary>
            icon
            </summary>
        </member>
        <member name="F:BP.Sys.SysUIEnsRefFuncAttr.ToolTip">
            <summary>
            提示信息
            </summary>
        </member>
        <member name="T:BP.Sys.SysUIEnsRefFunc">
            <summary>
            关联功能
            </summary>
        </member>
        <member name="M:BP.Sys.SysUIEnsRefFunc.#ctor">
            <summary>
            相关功能
            </summary>
        </member>
        <member name="M:BP.Sys.SysUIEnsRefFunc.#ctor(System.Int32)">
            <summary>
            相关功能
            </summary>
            <param name="_oid">oid</param>
        </member>
        <member name="P:BP.Sys.SysUIEnsRefFunc.Url">
            <summary>
            相关联的路径
            </summary>
        </member>
        <member name="P:BP.Sys.SysUIEnsRefFunc.Target">
            <summary>
            打开方式
            </summary>
        </member>
        <member name="P:BP.Sys.SysUIEnsRefFunc.Width">
            <summary>
            宽度
            </summary>
        </member>
        <member name="P:BP.Sys.SysUIEnsRefFunc.Hight">
            <summary>
            高度
            </summary>
        </member>
        <member name="P:BP.Sys.SysUIEnsRefFunc.IsForDtl">
            <summary>
            IsForDtl
            </summary>
        </member>
        <member name="P:BP.Sys.SysUIEnsRefFunc.EnMap">
            <summary>
            Map
            </summary>
        </member>
        <member name="T:BP.Sys.SysUIEnsRefFuncs">
            <summary>
            相关功能集合
            </summary>
        </member>
        <member name="M:BP.Sys.SysUIEnsRefFuncs.#ctor">
            <summary>
            相关功能集合
            </summary>
        </member>
        <member name="M:BP.Sys.SysUIEnsRefFuncs.#ctor(System.String)">
            <summary>
            相关功能集合，根据编号，查找。
            </summary>
            <param name="No"></param>
        </member>
        <member name="P:BP.Sys.SysUIEnsRefFuncs.GetNewEntity">
            <summary>
            实体
            </summary>
        </member>
        <member name="T:BP.Sys.UIDefaultValueAttr">
            <summary>
            属性
            </summary>
        </member>
        <member name="F:BP.Sys.UIDefaultValueAttr.AttrKey">
            <summary>
            属性Key
            </summary>
        </member>
        <member name="F:BP.Sys.UIDefaultValueAttr.EmpId">
            <summary>
            员工ID
            </summary>
        </member>
        <member name="F:BP.Sys.UIDefaultValueAttr.DefaultVal">
            <summary>
            默认值
            </summary>
        </member>
        <member name="T:BP.Sys.UIDefaultValue">
            <summary>
            操作员默认值
            </summary>
        </member>
        <member name="M:BP.Sys.UIDefaultValue.#ctor">
            <summary>
            操作员默认值
            </summary>
        </member>
        <member name="M:BP.Sys.UIDefaultValue.#ctor(System.Int32,System.String,System.String,System.String)">
            <summary>
            操作员默认值
            </summary>
            <param name="empid">员工ID</param>
            <param name="className">类名称</param>
            <param name="attrKey">属性</param>
            <param name="defaultVal">值</param>
        </member>
        <member name="P:BP.Sys.UIDefaultValue.DefaultVal">
            <summary>
            默认值
            </summary>
        </member>
        <member name="P:BP.Sys.UIDefaultValue.EmpId">
            <summary>
            操作员ID
            </summary>
        </member>
        <member name="P:BP.Sys.UIDefaultValue.AttrKey">
            <summary>
            属性
            </summary>
        </member>
        <member name="P:BP.Sys.UIDefaultValue.EnMap">
            <summary>
            map
            </summary>
        </member>
        <member name="T:BP.Sys.UIDefaultValues">
            <summary>
            实体集合
            </summary>
        </member>
        <member name="M:BP.Sys.UIDefaultValues.Retrieve(System.String,System.String,System.Int32)">
            <summary>
            查询.
            </summary>
            <param name="EnsClassName"></param>
            <param name="key"></param>
            <param name="empId"></param>
        </member>
        <member name="M:BP.Sys.UIDefaultValues.Retrieve(System.String,System.String)">
            <summary>
            查询
            </summary>
            <param name="EnsClassName"></param>
            <param name="key"></param>
        </member>
        <member name="P:BP.Sys.UIDefaultValues.GetNewEntity">
            <summary>
            得到它的 Entity
            </summary>
        </member>
        <member name="T:BP.Sys.UIEnsConditions">
            <summary>
            实体集合
            </summary>
        </member>
        <member name="P:BP.Sys.UIEnsConditions.GetNewEntity">
            <summary>
            得到它的 Entity
            </summary>
        </member>
        <member name="T:BP.DA.ClassFactory">
            <summary>
            ClassFactory 的摘要说明。
            </summary>
        </member>
        <member name="M:BP.DA.ClassFactory.GetObject(System.String)">
            <summary>
            得到一个object
            </summary>
            <param name="className"></param>
            <returns></returns>
        </member>
        <member name="M:BP.DA.ClassFactory.GetObjects(System.String)">
            <summary>
            根据一个抽象的基类，取出此系统中从他上面继承的子类集合。		 
            </summary>
            <param name="baseClassName">抽象的类名称</param>
            <returns>ArrayList</returns>
        </member>
        <member name="M:BP.DA.ClassFactory.SysReport">
            <summary>
            生成系统报表
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.DA.ClassFactory.GetEn(System.String)">
            <summary>
            得到一个实体
            </summary>
            <param name="className">类名称</param>
            <returns>En</returns>
        </member>
        <member name="M:BP.DA.ClassFactory.GetEns(System.String)">
            <summary>
            得到一个实体集合
            </summary>
            <param name="className">类名称</param>
            <returns>En</returns>
        </member>
        <member name="P:BP.DA.ClassFactory.BPAssemblies">
            <summary>
            获取取程序集[dll]
            </summary>
            <returns></returns>
        </member>
        <member name="T:BP.DA.DBSimpleNoName">
            <summary>
            DSTaxpayer 的摘要说明。
            </summary>
        </member>
        <member name="M:BP.DA.DBSimpleNoName.#ctor(System.String)">
            <summary>
            税务编号
            </summary>
            <param name="_No"></param>
        </member>
        <member name="T:BP.DA.DBSimpleNoNames">
            <summary>
            纳税人集合
            </summary>
        </member>
        <member name="P:BP.DA.DBSimpleNoNames.GetNewEntity">
            <summary>
            得到它的 Entity 
            </summary>
        </member>
        <member name="M:BP.DA.EnDA.Delete(BP.En.Base.Entity)">
            <summary>
            删除
            </summary>
            <param name="en"></param>
            <returns></returns>
        </member>
        <member name="M:BP.DA.EnDA.Update(BP.En.Base.Entity)">
            <summary>
            更新
            </summary>
            <param name="en"></param>
            <returns></returns>
        </member>
        <member name="M:BP.DA.EnDA.Insert(BP.En.Base.Entity)">
            <summary>
            增加
            </summary>
            <param name="en"></param>
            <returns></returns>
        </member>
        <member name="M:BP.DA.EnDA.GenerOID">
            <summary>
            产生一个OID
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.DA.EnDA.GenerSequenceNumber(System.String)">
            <summary>
            序列号
            </summary>
            <returns>根据标识产生的序列号</returns>
        </member>
        <member name="M:BP.DA.EnDA.Retrieve(BP.En.Base.Entity,System.String)">
            <summary>
            查询
            </summary>
            <param name="en">实体</param>
            <param name="sql">组织的查询语句</param>
            <returns></returns>
        </member>
        <member name="T:BP.En.QueryObject">
            <summary>
            QueryObject 的摘要说明。
            </summary>
        </member>
        <member name="F:BP.En.QueryObject._endSql">
            <summary>
            处理Order by , group by . 
            </summary>
        </member>
        <member name="M:BP.En.QueryObject.#ctor(BP.En.Base.Entity)">
            DictBase
        </member>
        <member name="M:BP.En.QueryObject.AddWhere(System.String,System.String,System.String)">
            <summary>
            增加条件
            </summary>
            <param name="attr">属性</param>
            <param name="exp">操作符号（根据不同的数据库）</param>
            <param name="val">值</param>
        </member>
        <member name="M:BP.En.QueryObject.AddWhere(System.String,System.String,System.Int32)">
            <summary>
            增加条件
            </summary>
            <param name="attr">属性</param>
            <param name="exp">操作符号（根据不同的数据库）</param>
            <param name="val">值</param>
        </member>
        <member name="M:BP.En.QueryObject.AddWhere(System.String,System.String,System.Single)">
            <summary>
            增加条件
            </summary>
            <param name="attr">属性</param>
            <param name="exp">操作符号（根据不同的数据库）</param>
            <param name="val">值</param>
        </member>
        <member name="M:BP.En.QueryObject.AddWhere(System.String,System.String)">
            <summary>
            增加条件(默认的是= )
            </summary>
            <param name="attr">属性</param>
            <param name="val">值</param>
        </member>
        <member name="M:BP.En.QueryObject.AddWhere(System.String,System.Boolean)">
            <summary>
            增加条件
            </summary>
            <param name="attr">属性</param>
            <param name="val">值 true/false</param>
        </member>
        <member name="M:BP.En.QueryObject.clear">
            清除查询条件
        </member>
        <member name="M:BP.En.QueryObject.DoQuery">
            查询
        </member>
        <member name="M:BP.En.QueryObject.DoQueryToTable(System.Int32)">
            <summary>
            最大的数量
            </summary>
            <param name="topNum">最大的数量</param>
            <returns>要查询的信息</returns>
        </member>
        <member name="P:BP.En.QueryObject.SQL">
            <summary>
            要得到的查询sql 。
            </summary>
        </member>
        <member name="M:BP.En.Base.SqlBuilder.GetKeyCondition(BP.En.Base.Entity)">
            <summary>
            得到主键
            </summary>
            <param name="en"></param>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.SqlBuilder.GetKeyConditionOfMS(BP.En.Base.Entity)">
            <summary>
            得到主健
            </summary>
            <param name="en"></param>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.SqlBuilder.GetKeyConditionOfOLE(BP.En.Base.Entity)">
            <summary>
            得到主健
            </summary>
            <param name="en"></param>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.SqlBuilder.GetKeyConditionOfOracle9i(BP.En.Base.Entity)">
            <summary>
            得到主健
            </summary>
            <param name="en"></param>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.SqlBuilder.RetrieveAll(BP.En.Base.Entity)">
            <summary>
            查询全部信息
            </summary>
            <param name="en">实体</param>
            <returns>sql</returns>
        </member>
        <member name="M:BP.En.Base.SqlBuilder.Retrieve(BP.En.Base.Entity)">
            <summary>
            查询
            </summary>
            <param name="en">实体</param>
            <returns>string</returns>
        </member>
        <member name="M:BP.En.Base.SqlBuilder.GenerFormWhereOfOracle9i(BP.En.Base.Entity)">
            <summary>
            产生Oracle9i 的where.
            </summary>
            <param name="en"></param>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.SqlBuilder.GenerFormWhereOfMS(BP.En.Base.Entity)">
            <summary>
            GenerFormWhere
            </summary>
            <param name="en"></param>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.SqlBuilder.GenerFormWhereOfMSOLE(BP.En.Base.Entity)">
            <summary>
            GenerFormWhere
            </summary>
            <param name="en"></param>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.SqlBuilder.SelectSQLOfOLE(BP.En.Base.Entity,System.Int32)">
            <summary>
            建立SelectSQLOfOLE 
            </summary>
            <param name="en">要执行的en</param>
            <param name="topNum">最高查询个数</param>
            <returns>返回查询sql</returns>
        </member>
        <member name="M:BP.En.Base.SqlBuilder.SelectSQLOfMS(BP.En.Base.Entity,System.Int32)">
            <summary>
            建立selectSQL 
            </summary>
            <param name="en">要执行的en</param>
            <param name="topNum">最高查询个数</param>
            <returns>返回查询sql</returns>
        </member>
        <member name="M:BP.En.Base.SqlBuilder.Update(BP.En.Base.Entity)">
            <summary>
            更新entitty
            </summary>
            <param name="en"></param>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.SqlBuilder.Delete(BP.En.Base.Entity)">
            <summary>
            Delete sql
            </summary>
            <param name="en"></param>
            <returns></returns>
        </member>
        <member name="M:BP.En.Base.SqlBuilder.Insert(BP.En.Base.Entity)">
            <summary>
            Insert 
            </summary>
            <param name="en"></param>
            <returns></returns>
        </member>
        <member name="T:BP.Pub.BankOfChina">
            <summary>
            BankOfChina 的摘要说明。
            </summary>
        </member>
        <member name="T:BP.Pub.DataIO">
            <summary>
            县城实体
            </summary>
        </member>
        <member name="M:BP.Pub.DataIO.AfterExport">
            <summary>
            在导入后执行的工作。用于子类的重载。
            </summary>
        </member>
        <member name="M:BP.Pub.DataIO.beforeInsert">
            <summary>
            beforeInsert
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.Pub.DataIOs.RetrieveAll">
            <summary>
            重写RetrieveAll
            </summary>
            <returns></returns>
        </member>
        <member name="T:BP.Port.DataRightAttr">
            <summary>
            数据权限属性
            </summary>
        </member>
        <member name="F:BP.Port.DataRightAttr.FK_Emp">
            <summary>
            员工
            </summary>
        </member>
        <member name="F:BP.Port.DataRightAttr.EnsName">
            <summary>
            数据字典
            </summary>
        </member>
        <member name="F:BP.Port.DataRightAttr.DataText">
            <summary>
            数据
            </summary>
        </member>
        <member name="T:BP.Port.DataRight">
            <summary>
            数据权限
            </summary>
        </member>
        <member name="M:BP.Port.DataRight.#ctor">
            <summary>
            数据权限
            </summary>
        </member>
        <member name="P:BP.Port.DataRight.FK_Emp">
            <summary>
            员工
            </summary>
        </member>
        <member name="P:BP.Port.DataRight.EnsName">
            <summary>
            数据
            </summary>
        </member>
        <member name="P:BP.Port.DataRight.DataVal">
            <summary>
            数据DataVal
            </summary>
        </member>
        <member name="P:BP.Port.DataRight.DataText">
            <summary>
            数据DataText
            </summary>
        </member>
        <member name="P:BP.Port.DataRight.EnMap">
            <summary>
            Map
            </summary>
        </member>
        <member name="T:BP.Port.DataRights">
             <summary>
            数据权限s
             </summary>
        </member>
        <member name="M:BP.Port.DataRights.#ctor">
            <summary>
            数据权限s
            </summary>
        </member>
        <member name="M:BP.Port.DataRights.#ctor(System.Int32,System.String)">
            <summary>
            DataRights
            </summary>
            <param name="empId"></param>
            <param name="ensName"></param>
        </member>
        <member name="M:BP.Port.DataRights.RetrieveByEmpIdEnsName(System.Int32,System.String)">
            <summary>
            RetrieveByEmpIdEnsName
            </summary>
            <param name="empId"></param>
            <param name="ensName"></param>
            <returns></returns>
        </member>
        <member name="P:BP.Port.DataRights.IsAllRight">
            <summary>
            是不是具有全部的查询权限。
            </summary>
        </member>
        <member name="P:BP.Port.DataRights.GetNewEntity">
            <summary>
            en
            </summary>
        </member>
        <member name="T:BP.Port.DataRightDict">
            <summary>
            会计期间
            </summary>
        </member>
        <member name="P:BP.Port.DataRightDict.PhysicsTable">
            <summary>
            物理表
            </summary>
        </member>
        <member name="P:BP.Port.DataRightDict.Desc">
            <summary>
            描述
            </summary>
        </member>
        <member name="T:BP.Port.DataRightDicts">
            <summary>
            DataRightDicts
            </summary>
        </member>
        <member name="M:BP.Port.DataRightDicts.#ctor">
            <summary>
            会计期间集合
            </summary>
        </member>
        <member name="P:BP.Port.DataRightDicts.GetNewEntity">
            <summary>
            得到它的 Entity 
            </summary>
        </member>
        <member name="T:BP.Port.DeptType">
            <summary>
            岗位类型
            </summary>
        </member>
        <member name="F:BP.Port.DeptType.AbsoluteNormal">
            <summary>
            独立的(征管科室)
            </summary>
        </member>
        <member name="F:BP.Port.DeptType.UnAbsoluteNormal">
            <summary>
            非独立的(分局长)
            </summary>
        </member>
        <member name="F:BP.Port.DeptType.Itinerancy">
            <summary>
            外勤()
            </summary>
        </member>
        <member name="F:BP.Port.DeptType.InsideJob">
            <summary>
            内勤()
            </summary>
        </member>
        <member name="T:BP.Port.DeptAttr">
            <summary>
            部门属性
            </summary>
        </member>
        <member name="F:BP.Port.DeptAttr.DeptType">
            <summary>
            部门类型
            </summary>
        </member>
        <member name="T:BP.Port.Dept">
            <summary>
            门户部门
            </summary>
        </member>
        <member name="M:BP.Port.Dept.#ctor">
            <summary>
            门户部门
            </summary>
        </member>
        <member name="M:BP.Port.Dept.#ctor(System.String)">
            <summary>
            门户部门
            </summary>
            <param name="no">编号</param>
        </member>
        <member name="P:BP.Port.Dept.DeptTypeInt">
            <summary>
            岗位类型
            </summary>
        </member>
        <member name="P:BP.Port.Dept.DeptType">
            <summary>
            岗位类型
            </summary>
        </member>
        <member name="P:BP.Port.Dept.EnMap">
            <summary>
            Map
            </summary>
        </member>
        <member name="T:BP.Port.Depts">
             <summary>
            得到集合
             </summary>
        </member>
        <member name="M:BP.Port.Depts.#ctor">
            <summary>
            create ens
            </summary>
        </member>
        <member name="M:BP.Port.Depts.QueryByGrade(System.Int32)">
            <summary>
            按照级别查询。
            </summary>
            <param name="_grade">级别</param>
            <returns></returns>
        </member>
        <member name="P:BP.Port.Depts.GetNewEntity">
            <summary>
            得到一个新实体
            </summary>
        </member>
        <member name="T:BP.Port.DeptStationAttr">
            <summary>
            节点属性
            </summary>
        </member>
        <member name="F:BP.Port.DeptStationAttr.FK_Dept">
            <summary>
            部门
            </summary>
        </member>
        <member name="F:BP.Port.DeptStationAttr.FK_Station">
            <summary>
            岗位
            </summary>
        </member>
        <member name="T:BP.Port.DeptStation">
            <summary>
            DeptStation 的摘要说明。
            </summary>
        </member>
        <member name="M:BP.Port.DeptStation.GetDeptNodes(System.Int32)">
            <summary>
            dsf
            </summary>
            <param name="FK_Dept"></param>
            <returns></returns>
        </member>
        <member name="M:BP.Port.DeptStation.#ctor">
            <summary>
            部门岗位
            </summary> 
        </member>
        <member name="M:BP.Port.DeptStation.#ctor(System.String,System.String)">
            <summary>
            部门岗位
            </summary>
            <param name="_DeptNo">部门编号</param>
            <param name="_stationNo">岗位编号</param>
        </member>
        <member name="M:BP.Port.DeptStation.beforeInsert">
            <summary>
            插入前所做的工作
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="M:BP.Port.DeptStation.beforeUpdate">
            <summary>
            更新前所做的工作
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="M:BP.Port.DeptStation.beforeDelete">
            <summary>
            删除前所做的工作
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="P:BP.Port.DeptStation.FK_Dept">
            <summary>
            部门编号
            </summary>
        </member>
        <member name="P:BP.Port.DeptStation.FK_Station">
             <summary>
            部门
             </summary>
        </member>
        <member name="P:BP.Port.DeptStation.EnMap">
            <summary>
            重写基类方法
            </summary>
        </member>
        <member name="T:BP.Port.DeptStations">
            <summary>
            节点集合 
            </summary>
        </member>
        <member name="M:BP.Port.DeptStations.#ctor">
            <summary>
            员工与部门集合
            </summary>
        </member>
        <member name="M:BP.Port.DeptStations.#ctor(System.String)">
            <summary>
            部门岗位
            </summary>
            <param name="FK_Dept">部门NO</param>
        </member>
        <member name="M:BP.Port.DeptStations.GetHisDepts(System.String)">
            <summary>
            得到部门
            </summary>
            <param name="stationNo">岗位编号</param>
            <returns></returns>
        </member>
        <member name="M:BP.Port.DeptStations.GetHisStations(System.String)">
            <summary>
            得到岗位
            </summary>
            <param name="FK_Dept">部门编号</param>
            <returns></returns>
        </member>
        <member name="P:BP.Port.DeptStations.GetNewEntity">
            <summary>
            得到它的 Entity 
            </summary>
        </member>
        <member name="T:BP.Port.DutyAttr">
            <summary>
            职务属性
            </summary>
        </member>
        <member name="T:BP.Port.Duty">
            <summary>
            职务
            </summary>
        </member>
        <member name="M:BP.Port.Duty.#ctor">
            <summary>
            职务
            </summary>
        </member>
        <member name="M:BP.Port.Duty.#ctor(System.String)">
            <summary>
            职务
            </summary>
            <param name="_no">No</param>
        </member>
        <member name="P:BP.Port.Duty.EnMap">
            <summary>
            Map
            </summary>
        </member>
        <member name="T:BP.Port.Dutys">
             <summary>
            得到集合
             </summary>
        </member>
        <member name="M:BP.Port.Dutys.#ctor">
            <summary>
            职务s
            </summary>
        </member>
        <member name="M:BP.Port.Dutys.QueryByGrade(System.Int32)">
            <summary>
            按照级别查询。
            </summary>
            <param name="_grade">级别</param>
            <returns></returns>
        </member>
        <member name="P:BP.Port.Dutys.GetNewEntity">
            <summary>
            en
            </summary>
        </member>
        <member name="T:BP.Port.DutyStationAttr">
            <summary>
            节点属性
            </summary>
        </member>
        <member name="F:BP.Port.DutyStationAttr.FK_Duty">
            <summary>
            员工ID
            </summary>
        </member>
        <member name="F:BP.Port.DutyStationAttr.FK_Station">
            <summary>
            部门
            </summary>
        </member>
        <member name="T:BP.Port.DutyStation">
            <summary>
            DutyStation 的摘要说明。
            </summary>
        </member>
        <member name="M:BP.Port.DutyStation.GetDutyNodes(System.Int32)">
            <summary>
            dsf
            </summary>
            <param name="FK_Duty"></param>
            <returns></returns>
        </member>
        <member name="M:BP.Port.DutyStation.#ctor">
            <summary>
            职务岗位
            </summary> 
        </member>
        <member name="M:BP.Port.DutyStation.#ctor(System.String,System.String)">
            <summary>
            职务岗位
            </summary>
            <param name="_dutyNo">职务</param>
            <param name="_stationNo">岗位No</param>
        </member>
        <member name="M:BP.Port.DutyStation.beforeInsert">
            <summary>
            插入前所做的工作
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="M:BP.Port.DutyStation.beforeUpdate">
            <summary>
            更新前所做的工作
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="M:BP.Port.DutyStation.beforeDelete">
            <summary>
            删除前所做的工作
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="M:BP.Port.DutyStation.beforeUpdateInsertAction">
            <summary>
            在插入更新前作的工作.
            </summary>
            <returns></returns>
        </member>
        <member name="P:BP.Port.DutyStation.FK_Duty">
            <summary>
            职务编号
            </summary>
        </member>
        <member name="P:BP.Port.DutyStation.FK_Station">
             <summary>
            部门
             </summary>
        </member>
        <member name="P:BP.Port.DutyStation.EnMap">
            <summary>
            重写基类方法
            </summary>
        </member>
        <member name="T:BP.Port.DutyStations">
            <summary>
            节点集合 
            </summary>
        </member>
        <member name="M:BP.Port.DutyStations.#ctor">
            <summary>
            员工与部门集合
            </summary>
        </member>
        <member name="M:BP.Port.DutyStations.#ctor(System.String)">
            <summary>
            职务岗位
            </summary>
            <param name="FK_Duty">No</param>
        </member>
        <member name="M:BP.Port.DutyStations.GetHisDutys(System.String)">
            <summary>
            得到职务集合
            </summary>
            <param name="stationNo">stationNo</param>
            <returns>得到职务集合</returns>
        </member>
        <member name="M:BP.Port.DutyStations.GetHisStations(System.String)">
            <summary>
            得到岗位s
            </summary>
            <param name="FK_Duty">No</param>
            <returns>岗位s</returns>
        </member>
        <member name="P:BP.Port.DutyStations.GetNewEntity">
            <summary>
            得到它的 Entity 
            </summary>
        </member>
        <member name="T:BP.Port.EmpDeptAttr">
            <summary>
            节点属性
            </summary>
        </member>
        <member name="F:BP.Port.EmpDeptAttr.FK_Emp">
            <summary>
            员工ID
            </summary>
        </member>
        <member name="F:BP.Port.EmpDeptAttr.FK_Dept">
            <summary>
            部门
            </summary>
        </member>
        <member name="T:BP.Port.EmpDept">
            <summary>
            EmpDept 的摘要说明。
            </summary>
        </member>
        <member name="M:BP.Port.EmpDept.GetEmpNodes(System.Int32)">
            <summary>
            dsf
            </summary>
            <param name="FK_Emp"></param>
            <returns></returns>
        </member>
        <member name="M:BP.Port.EmpDept.#ctor">
            <summary>
            员工岗位
            </summary> 
        </member>
        <member name="M:BP.Port.EmpDept.#ctor(System.Int32,System.String)">
            <summary>
            员工部门对应
            </summary>
            <param name="_empoid">员工ID</param>
            <param name="wsNo">部门编号</param> 	
        </member>
        <member name="M:BP.Port.EmpDept.beforeInsert">
            <summary>
            插入前所做的工作
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="M:BP.Port.EmpDept.beforeUpdate">
            <summary>
            更新前所做的工作
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="M:BP.Port.EmpDept.beforeDelete">
            <summary>
            删除前所做的工作
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="P:BP.Port.EmpDept.FK_Emp">
            <summary>
            员工ID
            </summary>
        </member>
        <member name="P:BP.Port.EmpDept.FK_Dept">
             <summary>
            部门
             </summary>
        </member>
        <member name="P:BP.Port.EmpDept.EnMap">
            <summary>
            重写基类方法
            </summary>
        </member>
        <member name="T:BP.Port.EmpDepts">
            <summary>
            节点集合 
            </summary>
        </member>
        <member name="M:BP.Port.EmpDepts.#ctor">
            <summary>
            员工与部门集合
            </summary>
        </member>
        <member name="M:BP.Port.EmpDepts.#ctor(System.String)">
            <summary>
            员工与部门集合
            </summary>
            <param name="StationNo">部门编号</param>
        </member>
        <member name="M:BP.Port.EmpDepts.#ctor(System.Int32)">
            <summary>
            员工与部门集合
            </summary>
            <param name="FK_Emp">FK_Emp</param>
        </member>
        <member name="M:BP.Port.EmpDepts.GetHisEmps(System.String)">
            <summary>
            部门对应的节点
            </summary>
            <param name="stationNo">部门编号</param>
            <returns>节点s</returns>
        </member>
        <member name="M:BP.Port.EmpDepts.GetHisDepts(System.Int32)">
            <summary>
            得到他的部门权限
            </summary>
            <param name="empid">empid </param>
            <returns>Depts</returns> 
        </member>
        <member name="P:BP.Port.EmpDepts.GetNewEntity">
            <summary>
            得到它的 Entity 
            </summary>
        </member>
        <member name="T:BP.Port.EmpDutyAttr">
            <summary>
            节点属性
            </summary>
        </member>
        <member name="F:BP.Port.EmpDutyAttr.FK_Emp">
            <summary>
            员工ID
            </summary>
        </member>
        <member name="F:BP.Port.EmpDutyAttr.FK_Duty">
            <summary>
            部门
            </summary>
        </member>
        <member name="T:BP.Port.EmpDuty">
            <summary>
            EmpDuty 的摘要说明。
            </summary>
        </member>
        <member name="M:BP.Port.EmpDuty.GetEmpNodes(System.Int32)">
            <summary>
            sdd
            </summary>
            <param name="FK_Emp"></param>
            <returns></returns>
        </member>
        <member name="M:BP.Port.EmpDuty.#ctor">
            <summary>
            员工岗位
            </summary> 
        </member>
        <member name="M:BP.Port.EmpDuty.#ctor(System.Int32,System.String)">
            <summary>
            员工部门对应
            </summary>
            <param name="_empoid">员工ID</param>
            <param name="wsNo">部门编号</param> 	
        </member>
        <member name="M:BP.Port.EmpDuty.beforeInsert">
            <summary>
            插入前所做的工作
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="M:BP.Port.EmpDuty.beforeUpdate">
            <summary>
            更新前所做的工作
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="M:BP.Port.EmpDuty.beforeDelete">
            <summary>
            删除前所做的工作
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="P:BP.Port.EmpDuty.FK_Emp">
            <summary>
            员工ID
            </summary>
        </member>
        <member name="P:BP.Port.EmpDuty.FK_Duty">
             <summary>
            部门
             </summary>
        </member>
        <member name="P:BP.Port.EmpDuty.EnMap">
            <summary>
            重写基类方法
            </summary>
        </member>
        <member name="T:BP.Port.EmpDutys">
            <summary>
            节点集合 
            </summary>
        </member>
        <member name="M:BP.Port.EmpDutys.#ctor">
            <summary>
            员工与部门集合
            </summary>
        </member>
        <member name="M:BP.Port.EmpDutys.#ctor(System.String)">
            <summary>
            员工与部门集合
            </summary>
            <param name="StationNo">部门编号</param>
        </member>
        <member name="M:BP.Port.EmpDutys.#ctor(System.Int32)">
            <summary>
            员工与部门集合
            </summary>
            <param name="FK_Emp">FK_Emp</param>
        </member>
        <member name="M:BP.Port.EmpDutys.GetHisEmps(System.String)">
            <summary>
            部门对应的节点
            </summary>
            <param name="stationNo">部门编号</param>
            <returns>节点s</returns>
        </member>
        <member name="M:BP.Port.EmpDutys.GetHisDepts(System.Int32)">
            <summary>
            转向此节点的集合的Nodes
            </summary>
            <param name="nodeID">此节点的ID</param>
            <returns>转向此节点的集合的Nodes (FromNodes)</returns> 
        </member>
        <member name="P:BP.Port.EmpDutys.GetNewEntity">
            <summary>
            得到它的 Entity 
            </summary>
        </member>
        <member name="T:BP.Port.EmpOfEduExperienceAttr">
            <summary>
            教育经历属性
            </summary>
        </member>
        <member name="F:BP.Port.EmpOfEduExperienceAttr.FK_Emp">
            <summary>
            员工
            </summary>
        </member>
        <member name="F:BP.Port.EmpOfEduExperienceAttr.FromDate">
            <summary>
            从日期
            </summary>
        </member>
        <member name="F:BP.Port.EmpOfEduExperienceAttr.ToDate">
            <summary>
            到日期
            </summary>
        </member>
        <member name="F:BP.Port.EmpOfEduExperienceAttr.StudyIn">
            <summary>
            学习地点
            </summary>
        </member>
        <member name="F:BP.Port.EmpOfEduExperienceAttr.Gain">
            <summary>
            获得证书
            </summary>
        </member>
        <member name="F:BP.Port.EmpOfEduExperienceAttr.Note">
            <summary>
            备注
            </summary>
        </member>
        <member name="T:BP.Port.EmpOfEduExperience">
            <summary>
            教育经历
            </summary>
        </member>
        <member name="M:BP.Port.EmpOfEduExperience.#ctor">
            <summary>
            教育经历
            </summary>
        </member>
        <member name="P:BP.Port.EmpOfEduExperience.EnMap">
            <summary>
            Map
            </summary>
        </member>
        <member name="T:BP.Port.EmpOfEduExperiences">
             <summary>
            教育经历s
             </summary>
        </member>
        <member name="M:BP.Port.EmpOfEduExperiences.#ctor">
            <summary>
            教育经历s
            </summary>
        </member>
        <member name="P:BP.Port.EmpOfEduExperiences.GetNewEntity">
            <summary>
            en
            </summary>
        </member>
        <member name="T:BP.Port.EmpOfWorkExperienceAttr">
            <summary>
            工作经历属性
            </summary>
        </member>
        <member name="F:BP.Port.EmpOfWorkExperienceAttr.FK_Emp">
            <summary>
            员工
            </summary>
        </member>
        <member name="F:BP.Port.EmpOfWorkExperienceAttr.FromDate">
            <summary>
            从日期
            </summary>
        </member>
        <member name="F:BP.Port.EmpOfWorkExperienceAttr.ToDate">
            <summary>
            到日期
            </summary>
        </member>
        <member name="F:BP.Port.EmpOfWorkExperienceAttr.StudyIn">
            <summary>
            学习地点
            </summary>
        </member>
        <member name="F:BP.Port.EmpOfWorkExperienceAttr.Station">
            <summary>
            担任职务
            </summary>
        </member>
        <member name="F:BP.Port.EmpOfWorkExperienceAttr.Note">
            <summary>
            备注
            </summary>
        </member>
        <member name="T:BP.Port.EmpOfWorkExperience">
            <summary>
            工作经历
            </summary>
        </member>
        <member name="M:BP.Port.EmpOfWorkExperience.#ctor">
            <summary>
            工作经历
            </summary>
        </member>
        <member name="P:BP.Port.EmpOfWorkExperience.EnMap">
            <summary>
            Map
            </summary>
        </member>
        <member name="T:BP.Port.EmpOfWorkExperiences">
             <summary>
            工作经历s
             </summary>
        </member>
        <member name="M:BP.Port.EmpOfWorkExperiences.#ctor">
            <summary>
            工作经历s
            </summary>
        </member>
        <member name="P:BP.Port.EmpOfWorkExperiences.GetNewEntity">
            <summary>
            en
            </summary>
        </member>
        <member name="T:BP.Port.EmpStationAttr">
            <summary>
            节点属性
            </summary>
        </member>
        <member name="F:BP.Port.EmpStationAttr.FK_Emp">
            <summary>
            员工ID
            </summary>
        </member>
        <member name="F:BP.Port.EmpStationAttr.FK_Station">
            <summary>
            工作岗位
            </summary>
        </member>
        <member name="T:BP.Port.EmpStation">
            <summary>
            EmpStation 的摘要说明。
            </summary>
        </member>
        <member name="M:BP.Port.EmpStation.GetEmpNodes(System.Int32)">
            <summary>
            dsf
            </summary>
            <param name="empId"></param>
            <returns></returns>
        </member>
        <member name="M:BP.Port.EmpStation.#ctor">
            <summary>
            员工岗位
            </summary> 
        </member>
        <member name="M:BP.Port.EmpStation.#ctor(System.Int32,System.String)">
            <summary>
            员工工作岗位对应
            </summary>
            <param name="_empoid">员工ID</param>
            <param name="wsNo">工作岗位编号</param> 	
        </member>
        <member name="M:BP.Port.EmpStation.beforeInsert">
            <summary>
            插入前所做的工作
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="M:BP.Port.EmpStation.beforeUpdate">
            <summary>
            更新前所做的工作
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="M:BP.Port.EmpStation.beforeDelete">
            <summary>
            删除前所做的工作
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="P:BP.Port.EmpStation.FK_Emp">
            <summary>
            员工ID
            </summary>
        </member>
        <member name="P:BP.Port.EmpStation.FK_Station">
             <summary>
            工作岗位
             </summary>
        </member>
        <member name="P:BP.Port.EmpStation.EnMap">
            <summary>
            重写基类方法
            </summary>
        </member>
        <member name="T:BP.Port.EmpStations">
            <summary>
            员工岗位 
            </summary>
        </member>
        <member name="M:BP.Port.EmpStations.#ctor">
            <summary>
            员工岗位
            </summary>
        </member>
        <member name="M:BP.Port.EmpStations.#ctor(System.String)">
            <summary>
            员工与工作岗位集合
            </summary>
        </member>
        <member name="M:BP.Port.EmpStations.#ctor(System.Int32)">
            <summary>
            员工与工作岗位集合
            </summary>
            <param name="empId">EmpID</param>
        </member>
        <member name="M:BP.Port.EmpStations.GetHisEmps(System.String)">
            <summary>
            工作岗位对应的节点
            </summary>
            <param name="stationNo">工作岗位编号</param>
            <returns>节点s</returns>
        </member>
        <member name="M:BP.Port.EmpStations.GetHisStations(System.Int32)">
            <summary>
            员工岗位s
            </summary>
            <param name="empId">empId</param>
            <returns>员工岗位s</returns> 
        </member>
        <member name="P:BP.Port.EmpStations.GetNewEntity">
            <summary>
            得到它的 Entity 
            </summary>
        </member>
        <member name="T:BP.En.FuncAttr">
            <summary>
            功能属性
            </summary>
        </member>
        <member name="F:BP.En.FuncAttr.FuncCateNo">
            <summary>
            功能类别
            </summary>
        </member>
        <member name="F:BP.En.FuncAttr.IsValidate">
            <summary>
            是不是要验证
            </summary>
        </member>
        <member name="F:BP.En.FuncAttr.IsShow">
            <summary>
            是不是呈现。
            </summary>
        </member>
        <member name="F:BP.En.FuncAttr.RightButtnType">
            <summary>
            右键属性
            =0, 加入， =1 ，加入到点的操作。=2 加入到集合的操作。
            </summary>
        </member>
        <member name="F:BP.En.FuncAttr.Url">
            <summary>
            连接
            </summary>
        </member>
        <member name="F:BP.En.FuncAttr.Note">
            <summary>
            note
            </summary>
        </member>
        <member name="F:BP.En.FuncAttr.IsDelete">
            <summary>
            是不是删除了
            </summary>
        </member>
        <member name="F:BP.En.FuncAttr.Ico">
            <summary>
            标志
            </summary>
        </member>
        <member name="T:BP.En.Func">
            <summary>
            Func 的摘要说明。
            </summary>
        </member>
        <member name="M:BP.En.Func.#ctor">
            <summary>
            功能
            </summary>
        </member>
        <member name="M:BP.En.Func.#ctor(System.String)">
            <summary>
            功能
            </summary>
            <param name="_No"></param>
        </member>
        <member name="M:BP.En.Func.QueryByNotNeedValidate">
            <summary>
            QueryByNotNeedValidate
            </summary>
            <returns>个数</returns>
        </member>
        <member name="M:BP.En.Func.QueryByUrl">
            <summary>
            按照Url query.
            </summary>
            <returns>查询出来的个数</returns>
        </member>
        <member name="P:BP.En.Func.RightButtnType">
            <summary>
             右键属性
            =0, 加入， =1 ，加入到点的操作。=2 加入到集合的操作。
            </summary>
        </member>
        <member name="P:BP.En.Func.IsDelete">
            <summary>
            是删除
            </summary>
        </member>
        <member name="P:BP.En.Func.Url">
            <summary>
            Url
            </summary>
        </member>
        <member name="P:BP.En.Func.Note">
            <summary>
            Note
            </summary>
        </member>
        <member name="P:BP.En.Func.IsValidate">
            <summary>
            是否要验证
            </summary>
        </member>
        <member name="P:BP.En.Func.IsShow">
            <summary>
            是否显示
            </summary>
        </member>
        <member name="P:BP.En.Func.Ico">
            <summary>
            ICO
            </summary>
        </member>
        <member name="P:BP.En.Func.FuncCate">
            <summary>
            功能类别
            </summary>
        </member>
        <member name="P:BP.En.Func.FuncCateNo">
            <summary>
            功能类别编号
            </summary>
        </member>
        <member name="P:BP.En.Func.EnMap">
            <summary>
            重写基类方法
            </summary>
        </member>
        <member name="T:BP.En.Funcs">
            <summary>
            功能集合
            </summary>
        </member>
        <member name="M:BP.En.Funcs.#ctor">
            <summary>
            功能集合
            </summary>
        </member>
        <member name="M:BP.En.Funcs.#ctor(System.String)">
            <summary>
            根据功能类别，生成和个事例
            </summary>
            <param name="funCate">类别编号</param>
        </member>
        <member name="M:BP.En.Funcs.QueryByNotNeedValidate">
            <summary>
            查询出来不需要验证
            </summary>
            <returns>查询的格说</returns>
        </member>
        <member name="P:BP.En.Funcs.GetNewEntity">
            <summary>
            得到它的 Entity 
            </summary>
        </member>
        <member name="T:BP.En.FuncCateAttr">
            <summary>
            功能类别属性
            </summary>
        </member>
        <member name="F:BP.En.FuncCateAttr.Ico">
            <summary>
            图标
            </summary>
        </member>
        <member name="F:BP.En.FuncCateAttr.URL">
            <summary>
            URL
            </summary>
        </member>
        <member name="T:BP.En.FuncCate">
            <summary>
            功能类别
            </summary>
        </member>
        <member name="M:BP.En.FuncCate.#ctor">
            <summary>
            功能类别
            </summary>
        </member>
        <member name="M:BP.En.FuncCate.#ctor(System.String)">
            <summary>
            功能类别
            </summary>
            <param name="_no">No</param>
        </member>
        <member name="P:BP.En.FuncCate.Ico">
            <summary>
            功能类别图标
            </summary>
        </member>
        <member name="P:BP.En.FuncCate.URL">
            <summary>
            此功能类别的 URL
            </summary>
        </member>
        <member name="P:BP.En.FuncCate.HisFuncs">
            <summary>
            他的功能s
            </summary>
        </member>
        <member name="P:BP.En.FuncCate.EnMap">
            <summary>
            Map
            </summary>
        </member>
        <member name="T:BP.En.FuncCates">
             <summary>
            得到集合
             </summary>
        </member>
        <member name="M:BP.En.FuncCates.#ctor">
            <summary>
            create ens
            </summary>
        </member>
        <member name="M:BP.En.FuncCates.QueryByGrade(System.Int32)">
            <summary>
            按照级别查询。
            </summary>
            <param name="_grade">级别</param>
            <returns></returns>
        </member>
        <member name="P:BP.En.FuncCates.GetNewEntity">
            <summary>
            en
            </summary>
        </member>
        <member name="T:BP.Sys.NoticeSoundAttr">
            <summary>
            提示声音
            </summary>
        </member>
        <member name="F:BP.Sys.NoticeSoundAttr.Url">
            <summary>
            名称
            </summary>
        </member>
        <member name="T:BP.Sys.NoticeSound">
            <summary>
            NoticeSounds
            </summary>
        </member>
        <member name="M:BP.Sys.NoticeSound.#ctor">
            <summary>
            NoticeSound
            </summary>
        </member>
        <member name="P:BP.Sys.NoticeSound.Url">
            <summary>
            实体名称
            </summary>
        </member>
        <member name="P:BP.Sys.NoticeSound.EnMap">
            <summary>
            map
            </summary>
        </member>
        <member name="T:BP.Sys.NoticeSounds">
            <summary>
            实体集合
            </summary>
        </member>
        <member name="M:BP.Sys.NoticeSounds.#ctor">
            <summary>
            NoticeSounds
            </summary>
        </member>
        <member name="P:BP.Sys.NoticeSounds.GetNewEntity">
            <summary>
            得到它的 Entity
            </summary>
        </member>
        <member name="T:BP.Port.StationAttr">
            <summary>
            岗位属性
            </summary>
        </member>
        <member name="F:BP.Port.StationAttr.IsAbsolute">
            <summary>
            是不是独立的
            </summary>
        </member>
        <member name="F:BP.Port.StationAttr.StationType">
            <summary>
            岗位类型
            </summary>
        </member>
        <member name="F:BP.Port.StationAttr.Note">
            <summary>
            Note
            </summary>
        </member>
        <member name="T:BP.Port.StationType">
            <summary>
            岗位类型
            </summary>
        </member>
        <member name="F:BP.Port.StationType.AbsoluteNormal">
            <summary>
            独立的(征管科室)
            </summary>
        </member>
        <member name="F:BP.Port.StationType.UnAbsoluteNormal">
            <summary>
            非独立的(分局长)
            </summary>
        </member>
        <member name="F:BP.Port.StationType.Itinerancy">
            <summary>
            外勤
            </summary>
        </member>
        <member name="F:BP.Port.StationType.InsideJob">
            <summary>
            内勤
            </summary>
        </member>
        <member name="T:BP.Port.Station">
            <summary>
            岗位
            </summary>
        </member>
        <member name="M:BP.Port.Station.#ctor">
            <summary>
            工作岗位
            </summary> 
        </member>
        <member name="M:BP.Port.Station.#ctor(System.String)">
            <summary>
            岗位
            </summary>
            <param name="_No"></param>
        </member>
        <member name="P:BP.Port.Station.StationTypeInt">
            <summary>
            岗位类型
            </summary>
        </member>
        <member name="P:BP.Port.Station.StatType">
            <summary>
            岗位类型
            </summary>
        </member>
        <member name="P:BP.Port.Station.IsAbsolute">
            <summary>
            是不是独立的stion
            </summary>
        </member>
        <member name="P:BP.Port.Station.EnMap">
            <summary>
            EnMap
            </summary>
        </member>
        <member name="T:BP.Port.Stations">
            <summary>
            岗位s
            </summary>
        </member>
        <member name="M:BP.Port.Stations.#ctor">
            <summary>
            岗位
            </summary>
        </member>
        <member name="P:BP.Port.Stations.GetNewEntity">
            <summary>
            得到它的 Entity
            </summary>
        </member>
        <member name="T:BP.Pub.AP">
            <summary>
            会计期间
            </summary>
        </member>
        <member name="P:BP.Pub.AP.PhysicsTable">
            <summary>
            物理表
            </summary>
        </member>
        <member name="P:BP.Pub.AP.Desc">
            <summary>
            描述
            </summary>
        </member>
        <member name="T:BP.Pub.APs">
            <summary>
            APs
            </summary>
        </member>
        <member name="M:BP.Pub.APs.#ctor">
            <summary>
            会计期间集合
            </summary>
        </member>
        <member name="P:BP.Pub.APs.GetNewEntity">
            <summary>
            得到它的 Entity 
            </summary>
        </member>
        <member name="T:BP.Pub.ND">
            <summary>
            会计期间
            </summary>
        </member>
        <member name="P:BP.Pub.ND.PhysicsTable">
            <summary>
            物理表
            </summary>
        </member>
        <member name="P:BP.Pub.ND.Desc">
            <summary>
            描述
            </summary>
        </member>
        <member name="T:BP.Pub.NDs">
            <summary>
            NDs
            </summary>
        </member>
        <member name="M:BP.Pub.NDs.#ctor">
            <summary>
            会计期间集合
            </summary>
        </member>
        <member name="P:BP.Pub.NDs.GetNewEntity">
            <summary>
            得到它的 Entity 
            </summary>
        </member>
        <member name="T:BP.DTS.RunType">
            <summary>
            运行类型
            </summary>
        </member>
        <member name="F:BP.DTS.RunType.Method">
            <summary>
            中间层方法
            </summary>
        </member>
        <member name="F:BP.DTS.RunType.SQL">
            <summary>
            SQL文本 
            </summary>
        </member>
        <member name="F:BP.DTS.RunType.SP">
            <summary>
            存储过程
            </summary>
        </member>
        <member name="T:BP.DTS.AttemperDetailAttr">
            <summary>
            调度包明细属性
            </summary>
        </member>
        <member name="F:BP.DTS.AttemperDetailAttr.FK_PackNo">
            <summary>
            编号
            </summary>
        </member>
        <member name="F:BP.DTS.AttemperDetailAttr.RunType">
            <summary>
            运行类型
            </summary>
        </member>
        <member name="F:BP.DTS.AttemperDetailAttr.RunText">
            <summary>
            运行文本(sql,方法)
            </summary>
        </member>
        <member name="F:BP.DTS.AttemperDetailAttr.RunTimeType">
            <summary>
            运行频率
            </summary>
        </member>
        <member name="F:BP.DTS.AttemperDetailAttr.EveryMonth">
            <summary>
            每月
            </summary>
        </member>
        <member name="F:BP.DTS.AttemperDetailAttr.EveryDay">
            <summary>
            每日
            </summary>
        </member>
        <member name="F:BP.DTS.AttemperDetailAttr.EveryHour">
            <summary>
            每时
            </summary>
        </member>
        <member name="F:BP.DTS.AttemperDetailAttr.EveryMinute">
            <summary>
            每分
            </summary>
        </member>
        <member name="F:BP.DTS.AttemperDetailAttr.Note">
            <summary>
            备注
            </summary>
        </member>
        <member name="T:BP.DTS.DTS">
            <summary>
            调度包明细
            </summary>
        </member>
        <member name="M:BP.DTS.DTS.#ctor">
            <summary>
            一个任务
            </summary>
        </member>
        <member name="M:BP.DTS.DTS.#ctor(System.String)">
            <summary>
            任务
            </summary>
            <param name="_No">编号</param>
        </member>
        <member name="M:BP.DTS.DTS.Run">
            <summary>
            执行任务(Execute(),通过线程状态)
            </summary>
        </member>
        <member name="M:BP.DTS.DTS.Execute">
            <summary>
            执行任务(0  中间层,1  SQL文本,2  SQL存储过程)
            </summary>
        </member>
        <member name="M:BP.DTS.DTS.ExecClassMethod">
            <summary>
            任务执行方法(中间层方法)
            </summary>
        </member>
        <member name="M:BP.DTS.DTS.ExecSqlText">
            <summary>
            任务执行方法(SQL文本)
            </summary>
        </member>
        <member name="M:BP.DTS.DTS.ExecSqlStoredPro">
            <summary>
            任务执行方法(SQL存储过程)
            </summary>
        </member>
        <member name="P:BP.DTS.DTS.RunTypeOfEnum">
            <summary>
            运行类型
            </summary>
        </member>
        <member name="P:BP.DTS.DTS.RunType1">
            <summary>
            任务类型（0，）
            </summary>
        </member>
        <member name="P:BP.DTS.DTS.RunTypeText">
            <summary>
            
            </summary>
        </member>
        <member name="P:BP.DTS.DTS.RunTimeType">
            <summary>
            频率
            </summary>
        </member>
        <member name="P:BP.DTS.DTS.RunTimeTypeText">
            <summary>
            运行时间类型
            </summary>
        </member>
        <member name="P:BP.DTS.DTS.RunText">
            <summary>
            所做工作
            </summary>
        </member>
        <member name="P:BP.DTS.DTS.Note">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:BP.DTS.DTS.EnMap">
            <summary>
            Map
            </summary>
        </member>
        <member name="T:BP.DTS.DTSs">
            <summary>
            调度包明细集构造函数
            </summary> 
        </member>
        <member name="M:BP.DTS.DTSs.GetNowTasks">
            <summary>
            获取当前任务（执行SQL,绑定调度包任务明细）
            </summary>
        </member>
        <member name="M:BP.DTS.DTSs.Run">
            <summary>
            执行任务
            </summary>
        </member>
        <member name="M:BP.DTS.DTSs.#ctor">
            <summary>
            调度包明细集构造函数
            </summary>
        </member>
        <member name="P:BP.DTS.DTSs.Item(System.Int32)">
            <summary>
            调度包明细集构造函数
            </summary>
        </member>
        <member name="P:BP.DTS.DTSs.GetNewEntity">
            <summary>
            调度包明细集构造函数
            </summary>
        </member>
        <member name="T:BP.Sys.SysEnPowerAbleAttr">
            <summary>
            abc_afs
            </summary>
        </member>
        <member name="F:BP.Sys.SysEnPowerAbleAttr.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="F:BP.Sys.SysEnPowerAbleAttr.EnClassName">
            <summary>
            实体名称
            </summary>
        </member>
        <member name="F:BP.Sys.SysEnPowerAbleAttr.EnType">
            <summary>
            实体类型
            </summary> 
        </member>
        <member name="T:BP.Sys.SysEnPowerAble">
            <summary>
            SysEnPowerAbles
            </summary>
        </member>
        <member name="M:BP.Sys.SysEnPowerAble.#ctor">
            <summary>
            系统实体
            </summary>
        </member>
        <member name="M:BP.Sys.SysEnPowerAble.#ctor(System.String)">
            <summary>
            系统实体
            </summary>
            <param name="EnsClassName">类名称</param>
        </member>
        <member name="P:BP.Sys.SysEnPowerAble.EnClassName">
            <summary>
            实体名称
            </summary>
        </member>
        <member name="P:BP.Sys.SysEnPowerAble.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:BP.Sys.SysEnPowerAble.HisEnType">
            <summary>
            实体类型 0 , 应用, 1, 管理员维护, 2, 预制实体.
            </summary>
        </member>
        <member name="T:BP.Sys.SysEnPowerAbles">
            <summary>
            实体集合
            </summary>
        </member>
        <member name="P:BP.Sys.SysEnPowerAbles.GetNewEntity">
            <summary>
            得到它的 Entity
            </summary>
        </member>
        <member name="T:BP.Sys.SysEnUACAttr">
            <summary>
            访问控制
            </summary>
        </member>
        <member name="F:BP.Sys.SysEnUACAttr.EmpID">
            <summary>
            员工ID
            </summary>
        </member>
        <member name="F:BP.Sys.SysEnUACAttr.FK_Ens">
            <summary>
            实体类名称
            </summary>
        </member>
        <member name="F:BP.Sys.SysEnUACAttr.IsInsert">
             <summary>
            是否新增
             </summary>
        </member>
        <member name="F:BP.Sys.SysEnUACAttr.IsDelete">
            <summary>
            是否删除
            </summary>
        </member>
        <member name="F:BP.Sys.SysEnUACAttr.IsUpdate">
            <summary>
            是否更新
            </summary>
        </member>
        <member name="F:BP.Sys.SysEnUACAttr.IsView">
            <summary>
            是否视图
            </summary>
        </member>
        <member name="F:BP.Sys.SysEnUACAttr.IsAdjunct">
            <summary>
            是否附件
            </summary>
        </member>
        <member name="T:BP.Sys.SysEnsUAC">
            <summary>
            访问控制
            </summary> 
        </member>
        <member name="M:BP.Sys.SysEnsUAC.CheckAll">
            <summary>
            CheckAll
            </summary>
        </member>
        <member name="M:BP.Sys.SysEnsUAC.#ctor">
            <summary>
            访问控制
            </summary>
        </member>
        <member name="M:BP.Sys.SysEnsUAC.#ctor(BP.En.Base.Entities,System.Int32)">
            <summary>
            访问控制
            </summary>
            <param name="classesName">集合类名称</param>
            <param name="empid">员工ID</param>
        </member>
        <member name="P:BP.Sys.SysEnsUAC.EmpID">
            <summary>
            员工ID
            </summary>
        </member>
        <member name="P:BP.Sys.SysEnsUAC.FK_Ens">
            <summary>
            类名称
            </summary>
        </member>
        <member name="P:BP.Sys.SysEnsUAC.IsInsert">
            <summary>
            是否新增
            </summary>
        </member>
        <member name="P:BP.Sys.SysEnsUAC.IsDelete">
            <summary>
            是否删除
            </summary>
        </member>
        <member name="P:BP.Sys.SysEnsUAC.IsUpdate">
            <summary>
            是否更新
            </summary>
        </member>
        <member name="P:BP.Sys.SysEnsUAC.IsView">
            <summary>
            是否查看
            </summary>
        </member>
        <member name="P:BP.Sys.SysEnsUAC.IsAdjunct">
            <summary>
            是否附件
            </summary>
        </member>
        <member name="P:BP.Sys.SysEnsUAC.EnMap">
            <summary>
            Map
            </summary>
        </member>
        <member name="T:BP.Sys.SysEnsUACs">
            <summary>
            访问控制
            </summary> 
        </member>
        <member name="M:BP.Sys.SysEnsUACs.RefreshUAC">
            <summary>
            刷新
            </summary>
        </member>
        <member name="M:BP.Sys.SysEnsUACs.#ctor">
            <summary>
            关于实体访问的构造
            </summary>
        </member>
        <member name="P:BP.Sys.SysEnsUACs.GetNewEntity">
            <summary>
            New entity
            </summary>
        </member>
        <member name="T:BP.Sys.SysMsgAttr">
            <summary>
            系统消息属性
            </summary>
        </member>
        <member name="F:BP.Sys.SysMsgAttr.MsgID">
            <summary>
            MsgID
            </summary>
        </member>
        <member name="F:BP.Sys.SysMsgAttr.FromEmp">
             <summary>
            发送人.(1系统管理员，员工。) Pub_Emp  
             </summary>
        </member>
        <member name="F:BP.Sys.SysMsgAttr.ToEmp">
            <summary>
            发送到. Pub_Emp
            </summary>
        </member>
        <member name="F:BP.Sys.SysMsgAttr.PRI">
            <summary>
            紧急程度(于流程紧急程度相同)
            </summary>
        </member>
        <member name="F:BP.Sys.SysMsgAttr.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="F:BP.Sys.SysMsgAttr.Doc">
            <summary>
            消息内容
            </summary>
        </member>
        <member name="F:BP.Sys.SysMsgAttr.State">
            <summary>
            0,初始化，1，已经阅读，2拒绝接受。
            </summary>
        </member>
        <member name="F:BP.Sys.SysMsgAttr.SendDateTime">
            <summary>
            发送时间
            </summary>
        </member>
        <member name="F:BP.Sys.SysMsgAttr.AcceptDateTime">
            <summary>
            接受时间
            </summary>
        </member>
        <member name="F:BP.Sys.SysMsgAttr.IsReturnReceipt">
            <summary>
            是不事要求阅读回执.
            </summary>
        </member>
        <member name="T:BP.Sys.SysMsg">
            <summary>
            SysMsg 的摘要说明。
            </summary>
        </member>
        <member name="M:BP.Sys.SysMsg.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:BP.Sys.SysMsg.#ctor(System.Int32)">
            <summary>
            msg
            </summary>
            <param name="msgid"></param>
        </member>
        <member name="M:BP.Sys.SysMsg.Delete(System.String)">
            <summary>
            删除一个用户的消息。
            </summary>
            <param name="userNo">要删除的用户。</param>
        </member>
        <member name="M:BP.Sys.SysMsg.SendToDept(System.Int32,System.String,System.String)">
            <summary>
            发送到某个部门
            </summary>
            <param name="from">发送人</param>
            <param name="deptNo">要发送的部门编号</param>
            <param name="title">标题</param>
            <param name="docs">消息内容</param>
        </member>
        <member name="M:BP.Sys.SysMsg.SendToStation(System.Int32,System.String,System.String)">
            <summary>
            发送到某个岗位
            </summary>
            <param name="from"></param>
            <param name="StationNo"></param>
            <param name="title"></param>
            <param name="docs"></param>
        </member>
        <member name="M:BP.Sys.SysMsg.SendToTeam(System.Int32,System.String,System.String)">
            <summary>
            发送到某个小组
            </summary>
            <param name="from"></param>
            <param name="StationNo"></param>
            <param name="title"></param>
            <param name="docs"></param>
        </member>
        <member name="M:BP.Sys.SysMsg.SendToDuty(System.Int32,System.String,System.String)">
             <summary>
            发送到某个职务
             </summary>
             <param name="from"></param>
             <param name="DutyNo"></param>
             <param name="title"></param>
             <param name="docs"></param>
        </member>
        <member name="P:BP.Sys.SysMsg.MyMsgNum">
            <summary>
            我的消息个数
            </summary>
        </member>
        <member name="P:BP.Sys.SysMsg.MsgID">
            <summary>
            紧急程度
            </summary>
        </member>
        <member name="P:BP.Sys.SysMsg.FromEmp">
            <summary>
            发送人
            </summary>
        </member>
        <member name="P:BP.Sys.SysMsg.FromEmpName">
            <summary>
            发送人
            </summary>
        </member>
        <member name="P:BP.Sys.SysMsg.ToEmp">
            <summary>
             发送到
            </summary>
        </member>
        <member name="P:BP.Sys.SysMsg.PRI">
            <summary>
            紧急程度
            </summary>
        </member>
        <member name="P:BP.Sys.SysMsg.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:BP.Sys.SysMsg.Doc">
            <summary>
            消息内容
            </summary>
        </member>
        <member name="P:BP.Sys.SysMsg.SendDateTime">
            <summary>
            发送时间
            </summary>
        </member>
        <member name="P:BP.Sys.SysMsg.AcceptDateTime">
            <summary>
            接受时间
            </summary>
        </member>
        <member name="P:BP.Sys.SysMsg.IsReturnReceipt">
            <summary>
            是不事要求阅读回执.
            </summary>
        </member>
        <member name="P:BP.Sys.SysMsg.EnMap">
            <summary>
            重写基类方法
            </summary>
        </member>
        <member name="T:BP.Sys.SysMsgs">
            <summary>
            节点集合
            </summary>
        </member>
        <member name="M:BP.Sys.SysMsgs.#ctor">
            <summary>
            节点集合
            </summary>
        </member>
        <member name="P:BP.Sys.SysMsgs.GetNewEntity">
            <summary>
            得到它的 Entity 
            </summary>
        </member>
        <member name="T:BP.Sys.SysYearMonth">
            <summary>
            年月
            </summary>
        </member>
        <member name="M:BP.Sys.SysYearMonth.#ctor">
            <summary>
            
            </summary> 
        </member>
        <member name="M:BP.Sys.SysYearMonth.#ctor(System.String)">
            <summary>
            SysYearMonth
            </summary>
            <param name="_No"></param>
        </member>
        <member name="P:BP.Sys.SysYearMonth.PhysicsTable">
            <summary>
            PhysicsTable
            </summary>
        </member>
        <member name="P:BP.Sys.SysYearMonth.Desc">
            <summary>
            Desc
            </summary>
        </member>
        <member name="T:BP.Sys.SysYearMonths">
            <summary>
            SysYearMonths
            </summary>
        </member>
        <member name="M:BP.Sys.SysYearMonths.#ctor">
            <summary>
            SysYearMonths
            </summary>
        </member>
        <member name="P:BP.Sys.SysYearMonths.GetNewEntity">
            <summary>
            SysYearMonth
            </summary>
        </member>
        <member name="T:BP.Sys.UserQuestionAttr">
            <summary>
            用户问题
            </summary>
        </member>
        <member name="F:BP.Sys.UserQuestionAttr.OID">
            <summary>
            OID
            </summary>
        </member>
        <member name="F:BP.Sys.UserQuestionAttr.Sender">
            <summary>
            发送人
            </summary>
        </member>
        <member name="F:BP.Sys.UserQuestionAttr.SendDateTime">
            <summary>
            发送时间
            </summary>
        </member>
        <member name="F:BP.Sys.UserQuestionAttr.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="F:BP.Sys.UserQuestionAttr.Docs">
            <summary>
            内容
            </summary>
        </member>
        <member name="T:BP.Sys.UserQuestion">
            <summary>
            用户问题
            </summary> 
        </member>
        <member name="M:BP.Sys.UserQuestion.#ctor">
            <summary>
            用户问题
            </summary>
        </member>
        <member name="M:BP.Sys.UserQuestion.#ctor(System.Int32)">
            <summary>
            用户问题
            </summary>
            <param name="oid"></param>
        </member>
        <member name="P:BP.Sys.UserQuestion.Sender">
            <summary>
            发送人
            </summary>
        </member>
        <member name="P:BP.Sys.UserQuestion.SendDateTime">
            <summary>
            发送日期时间
            </summary>
        </member>
        <member name="P:BP.Sys.UserQuestion.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:BP.Sys.UserQuestion.Docs">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:BP.Sys.UserQuestion.EnMap">
            <summary>
            Map
            </summary>
        </member>
        <member name="T:BP.Sys.UserQuestions">
            <summary>
            用户问题
            </summary> 
        </member>
        <member name="M:BP.Sys.UserQuestions.RefreshUAC">
            <summary>
            刷新
            </summary>
        </member>
        <member name="M:BP.Sys.UserQuestions.#ctor">
            <summary>
            关于实体访问的构造
            </summary>
        </member>
        <member name="P:BP.Sys.UserQuestions.GetNewEntity">
            <summary>
            New entity
            </summary>
        </member>
        <member name="T:BP.Tax.PubYearOfFuture">
            <summary>
            银行
            </summary>
        </member>
        <member name="P:BP.Tax.PubYearOfFuture.PhysicsTable">
            <summary>
            PhysicsTable
            </summary>
        </member>
        <member name="P:BP.Tax.PubYearOfFuture.Desc">
            <summary>
            Desc
            </summary>
        </member>
        <member name="T:BP.Tax.PubYearOfFutures">
            <summary>
            银行s
            </summary>
        </member>
        <member name="M:BP.Tax.PubYearOfFutures.#ctor">
            <summary>
            银行s
            </summary>
        </member>
        <member name="P:BP.Tax.PubYearOfFutures.GetNewEntity">
            <summary>
            银行
            </summary>
        </member>
        <member name="T:BP.Tax.PubYearOfHistory">
            <summary>
            银行
            </summary>
        </member>
        <member name="P:BP.Tax.PubYearOfHistory.PhysicsTable">
            <summary>
            PhysicsTable
            </summary>
        </member>
        <member name="P:BP.Tax.PubYearOfHistory.Desc">
            <summary>
            Desc
            </summary>
        </member>
        <member name="T:BP.Tax.PubYearOfHistorys">
            <summary>
            银行s
            </summary>
        </member>
        <member name="M:BP.Tax.PubYearOfHistorys.#ctor">
            <summary>
            银行s
            </summary>
        </member>
        <member name="P:BP.Tax.PubYearOfHistorys.GetNewEntity">
            <summary>
            银行
            </summary>
        </member>
        <member name="T:BP.Port.BPUserAttr">
            <summary>
            员工属性
            </summary>
        </member>
        <member name="F:BP.Port.BPUserAttr.Pass">
            <summary>
            密码
            </summary>
        </member>
        <member name="F:BP.Port.BPUserAttr.Note">
            <summary>
            备注
            </summary>
        </member>
        <member name="F:BP.Port.BPUserAttr.Email">
            <summary>
            Mail
            </summary>
        </member>
        <member name="F:BP.Port.BPUserAttr.FontSize">
            <summary>
            字体大小
            </summary>
        </member>
        <member name="F:BP.Port.BPUserAttr.IsTextAlert">
            <summary>
            文本提示
            </summary>
        </member>
        <member name="F:BP.Port.BPUserAttr.IsSoundAlert">
            <summary>
            声音提示
            </summary>
        </member>
        <member name="F:BP.Port.BPUserAttr.Style">
            <summary>
            用户风格
            </summary>
        </member>
        <member name="F:BP.Port.BPUserAttr.DGStyle">
            <summary>
            DG用户风格
            </summary>
        </member>
        <member name="F:BP.Port.BPUserAttr.LastEnterDate">
            <summary>
            最后进入的日期。
            </summary>
        </member>
        <member name="F:BP.Port.BPUserAttr.NoticeSound">
            <summary>
            NoticeSound
            </summary>
        </member>
        <member name="F:BP.Port.BPUserAttr.AuthorizedAgent">
            <summary>
            全权代理人
            </summary>
        </member>
        <member name="T:BP.Port.BPUser">
            <summary>
            BPUser 的摘要说明。
            </summary>
        </member>
        <member name="M:BP.Port.BPUser.#ctor(System.Int32)">
            <summary>
            BPUser 
            </summary>
            <param name="_oid"></param>
        </member>
        <member name="M:BP.Port.BPUser.#ctor">
            <summary>
            BPUser
            </summary>
        </member>
        <member name="P:BP.Port.BPUser.FontSize">
            <summary>
            字体大小
            </summary>
        </member>
        <member name="P:BP.Port.BPUser.NoticeSound">
            <summary>
            FK_Sys_NoticeSound
            </summary>
        </member>
        <member name="P:BP.Port.BPUser.Email">
            <summary>
            Mail
            </summary>
        </member>
        <member name="P:BP.Port.BPUser.Pass">
            <summary>
            pass
            </summary> 
        </member>
        <member name="P:BP.Port.BPUser.Note">
            <summary>
            Note
            </summary>
        </member>
        <member name="P:BP.Port.BPUser.LastEnterDate">
            <summary>
            最后进入日期
            </summary>
        </member>
        <member name="P:BP.Port.BPUser.Style">
            <summary>
            风格
            </summary>
        </member>
        <member name="P:BP.Port.BPUser.DGStyle">
            <summary>
            风格
            </summary>
        </member>
        <member name="P:BP.Port.BPUser.AuthorizedAgent">
            <summary>
            授权人
            </summary>
        </member>
        <member name="T:BP.Port.Win.Current">
            <summary>
            Class1 的摘要说明。
            </summary>
        </member>
        <member name="T:BP.Admin.DTSTest">
            <summary>
            DTSTest 的摘要说明。
            </summary>
        </member>
        <member name="T:BP.Web.MyClass">
            <summary>
            MyClass 的摘要说明。
            </summary>
        </member>
        <member name="M:BP.Web.MyClass.GenerNSRSQL(System.Int32,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            gener sql 
            </summary>
            <param name="from">从多少元</param>
            <param name="to">到 </param>
            <param name="ZSJG">征收机关</param>
            <param name="Level">级次</param>
            <param name="TaxpayerType">类型</param>
            <param name="HY">行业</param>
            <returns></returns>
        </member>
        <member name="T:BP.Web.OnlineUserManager">
            <summary>
            在线用户
            </summary>
        </member>
        <member name="T:BP.Web.OnlineUser">
            <summary>
            OnlineUser 的摘要说明。
            </summary>
        </member>
        <member name="M:BP.Web.OnlineUser.#ctor">
            <summary>
            再线用户
            </summary>
        </member>
        <member name="P:BP.Web.OnlineUser.EmpNo">
            <summary>
            员工编号
            </summary>
        </member>
        <member name="P:BP.Web.OnlineUser.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:BP.Web.OnlineUser.DeptName">
            <summary>
            部门
            </summary>
        </member>
        <member name="P:BP.Web.OnlineUser.LoginDateTime">
            <summary>
            登陆日期
            </summary>
        </member>
        <member name="P:BP.Web.OnlineUser.EmpID">
            <summary>
            工作ID
            </summary>
        </member>
        <member name="T:BP.Web.OnlineUsers">
            <summary>
            消息集合
            </summary>
        </member>
        <member name="M:BP.Web.OnlineUsers.AddOnlineUser(System.Int32,System.String,System.String,System.String)">
            <summary>
            增加消息
            </summary>
            <param name="workId"></param>
            <param name="nodeId"></param>
            <param name="toEmpId"></param>
            <param name="info"></param>
        </member>
        <member name="M:BP.Web.OnlineUsers.AddOnlineUser(BP.Web.OnlineUser)">
            <summary>
            增加消息
            </summary>
            <param name="OnlineUser">消息</param>
        </member>
        <member name="P:BP.Web.OnlineUsers.Item(System.Int32)">
            <summary>
            根据位置取得数据
            </summary>
        </member>
        <member name="T:BP.Web.PageBase">
            <summary>
            PageBase 的摘要说明。
            </summary>
        </member>
        <member name="M:BP.Web.PageBase.ExportEnToExcelModel_OpenWin(BP.En.Base.Attrs,System.String)">
            <summary>
            导出到一个excel,文件用于，数据导入。
            </summary>
            <param name="attr"></param>
            <param name="sheetName"></param>
            <returns></returns>
        </member>
        <member name="M:BP.Web.PageBase.WhoCanUseIt">
            <summary>
            谁能使用这个页面,他是编号组成的字串。
            such as ,admin,jww,002, 
            if return value is null, It's mean all emps can visit it . 
            </summary>
        </member>
        <member name="M:BP.Web.PageBase.GetRequestStrByKey(System.String)">
            <summary>
            取得属性by key.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:BP.Web.PageBase.ShowModalDialog(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            showmodaldialog 
            </summary>
            <param name="url"></param>
            <param name="title"></param>
            <param name="Height"></param>
            <param name="Width"></param>
        </member>
        <member name="M:BP.Web.PageBase.WinClose">
            <summary>
            关闭窗口
            </summary>
        </member>
        <member name="M:BP.Web.PageBase.WinOpen(System.String)">
            <summary>
            打开一个新的窗口
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:BP.Web.PageBase.ResponseWriteRedMsg(System.String)">
            <summary>
            输出到页面上红色的警告。
            </summary>
            <param name="msg">消息</param>
        </member>
        <member name="M:BP.Web.PageBase.ResponseWriteBlueMsg(System.String)">
            <summary>
            输出到页面上蓝色的信息。
            </summary>
            <param name="msg">消息</param>
        </member>
        <member name="M:BP.Web.PageBase.ResponseWriteBlueMsg_SaveOK">
            <summary>
            保存成功
            </summary>
        </member>
        <member name="M:BP.Web.PageBase.ResponseWriteBlueMsg_SaveOK(System.Int32)">
            <summary>
            保存成功
            </summary>
            <param name="num">记录个数。</param>
        </member>
        <member name="M:BP.Web.PageBase.ResponseWriteBlueMsg_DeleteOK">
            <summary>
            ResponseWriteBlueMsg_DeleteOK
            </summary>
        </member>
        <member name="M:BP.Web.PageBase.ResponseWriteBlueMsg_DeleteOK(System.Int32)">
            <summary>
            "共计["+delNum+"]条记录删除成功！"
            </summary>
            <param name="delNum">delNum</param>
        </member>
        <member name="M:BP.Web.PageBase.ResponseWriteBlueMsg_UpdataOK">
            <summary>
            ResponseWriteBlueMsg_UpdataOK
            </summary>
        </member>
        <member name="M:BP.Web.PageBase.ToErrorPage(System.String)">
            <summary>
            切换到信息也面。
            </summary>
            <param name="mess"></param>
        </member>
        <member name="M:BP.Web.PageBase.ToMsgPage(System.String)">
            <summary>
            切换到信息也面。
            </summary>
            <param name="mess"></param>
        </member>
        <member name="M:BP.Web.PageBase.ToErrorPage(System.String,System.String)">
             <summary>
            转到一个页面上。 '_top'
             </summary>
             <param name="mess"></param>
             <param name="target">'_top'</param>
        </member>
        <member name="M:BP.Web.PageBase.OnInit(System.EventArgs)">
            <summary>
            窗口的OnInit事件，自动在页面上加一下记录当前行的Hidden
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:BP.Web.PageBase.ShowRuning">
            <summary>
            显示运行
            </summary>
        </member>
        <member name="M:BP.Web.PageBase.SetValueByKey_del(System.String,System.Object,System.Object)">
            <summary>
            设置 ViewState Value
            </summary>
            <param name="key"></param>
            <param name="val"></param>
            <param name="DefaultVal"></param>
        </member>
        <member name="M:BP.Web.PageBase.GetValueByKey_del(System.String)">
            <summary>
            取出Val
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:BP.Web.PageBase.GetValueByKey_del(System.String,System.String)">
            <summary>
            ss
            </summary>
            <param name="key">ss</param>
            <param name="DefaultVal">ss</param>
            <returns></returns>
        </member>
        <member name="M:BP.Web.PageBase.GetBoolValusByKey_del(System.String,System.Boolean)">
            <summary>
            按照key 取出来,bool 的植. 
            </summary>
            <param name="key"></param>
            <param name="DefaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:BP.Web.PageBase.GetIntValueByKey_del(System.String,System.Int32)">
            <summary>
            取出int valus , 如果没有就返回 DefaultValue ;
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:BP.Web.PageBase.Alert(System.String,System.Boolean)">
            <summary>
            不用page 参数，show message
            </summary>
            <param name="mess"></param>
        </member>
        <member name="M:BP.Web.PageBase.ExportDataTableToExcel_OpenWin_del(System.Data.DataTable,System.String)">
            <summary>
            根据DataTable内容导出到Excel中  
            </summary>
            <param name="dt">要导出内容的DataTable</param>
            <param name="filepath">要产生的文件路径</param>
            <param name="filename">要产生的文件</param>
            <returns></returns>
        </member>
        <member name="M:BP.Web.PageBase.DelExportedTempFile(System.String)">
            <summary>
            删除掉导出时产生的临时文件 2002.11.09 create by bluesky 
            </summary>
            <param name="filepath">临时文件路径</param>
            <returns></returns>
        </member>
        <member name="P:BP.Web.PageBase.DGIsReadonly">
            <summary>
            是否是readonly.
            </summary>
        </member>
        <member name="P:BP.Web.PageBase.PictAddHeader">
             <summary>
            是否增加Header图片
             </summary>
        </member>
        <member name="P:BP.Web.PageBase.PictHeaderButton">
             <summary>
            Header图片是否有button
             </summary>
        </member>
        <member name="P:BP.Web.PageBase.PictAddFooter">
             <summary>
            是否增加footer图片
             </summary>
        </member>
        <member name="P:BP.Web.PageBase.IsCheckFunc">
            <summary>
            是否要检查功能
            </summary>
        </member>
        <member name="P:BP.Web.PageBase.IsAddSubBar">
             <summary>
            是否增加SubPageBar
             </summary>
        </member>
        <member name="P:BP.Web.PageBase.ExportFilePath">
            <summary>
            导出文件的路径
            </summary>
        </member>
        <member name="P:BP.Web.PageBase.Table">
            <summary>
            这个table 是用来处理页面上的DataGride. 
            </summary>
        </member>
        <member name="P:BP.Web.PageBase.Taxpayers">
            <summary>
            纳税人集合
            </summary>
        </member>
        <member name="P:BP.Web.PageBase.PK">
            <summary>
            应用程序主键
            </summary>
        </member>
        <member name="P:BP.Web.PageBase.IsNew">
            <summary>
            用来保存状态。
            </summary>
        </member>
        <member name="P:BP.Web.PageBase.PKint">
            <summary>
            PKOID if is null return 0 
            </summary>
        </member>
        <member name="T:BP.EnExt">
            <summary>
             关于对Entity扩展，得方法。
            </summary>
        </member>
        <member name="M:BP.EnExt.ToDataSet(BP.En.Base.Entities)">
            <summary>
            把指定的ens 转换为 dataset
            </summary>
            <param name="spen">指定的ens</param>
            <returns>返回关系dataset</returns>
        </member>
        <member name="M:BP.EnExt.DealBoolTypeInDataTable(BP.En.Base.Entity,System.Data.DataTable)">
            <summary>
            
            </summary>
            <param name="en"></param>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:BP.EnExt.dt_RowChanged(System.Object,System.Data.DataRowChangeEventArgs)">
            <summary>
            DataRowChangeEventArgs
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:BP.EnExt.ToTable(BP.En.Base.Entity,System.Int32)">
            <summary>
            把属性信息,与vlaue 转换为Table
            </summary>
            <param name="en">要转换的entity</param>
            <param name="editStyle">编辑风格</param>
            <returns>datatable</returns>
        </member>
        <member name="M:BP.EnExt.ToTable0(BP.En.Base.Entity)">
            <summary>
            用户风格0
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.EnExt.ToTable1(BP.En.Base.Entity)">
            <summary>
            用户风格1
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.EnExt.GetEnsString(BP.En.Base.Entities,System.String,System.String)">
            <summary>
            通过一个集合，一个key，一个分割符号，获得这个属性的子串。
            </summary>
            <param name="key"></param>
            <param name="listspt"></param>
            <returns></returns>
        </member>
        <member name="M:BP.EnExt.GetEnsString(BP.En.Base.Entities,System.String)">
            <summary>
            通过一个集合，一个分割符号，获得这个属性的子串。
            </summary>		
            <param name="listspt"></param>
            <returns></returns>
        </member>
        <member name="M:BP.EnExt.GetEnsString(BP.En.Base.Entities)">
            <summary>
            通过一个集合获得这个属性的子串。
            </summary>		
            <param name="listspt"></param>
            <returns></returns>
        </member>
        <member name="T:BP.PubClass">
            <summary>
            PageBase 的摘要说明。
            </summary>
        </member>
        <member name="M:BP.PubClass.InitSysEns">
            <summary>
            初始化系统实体，要做的工作是。
            1，初始化所有的Sys_Ens。
            2，初始化所有的Sys_EnsPowerAble。
            3，为每个用户初始化他的实体访问控制。
            </summary>
        </member>
        <member name="M:BP.PubClass.ToExcel(System.Web.UI.Control,System.String)">
            <summary>
            将某控件中的数据转化为Excel文件
            </summary>
            <param name="ctl"></param>
        </member>
        <member name="M:BP.PubClass.ToWord(System.Web.UI.Control,System.String)">
            <summary>
            将某控件中的数据转化为Word文件
            </summary>
            <param name="ctl"></param>
        </member>
        <member name="M:BP.PubClass.ResponseWriteRedMsg(System.String)">
            <summary>
            输出到页面上红色的警告。
            </summary>
            <param name="msg">消息</param>
        </member>
        <member name="M:BP.PubClass.ResponseWriteBlueMsg(System.String)">
            <summary>
            输出到页面上蓝色的信息。
            </summary>
            <param name="msg">消息</param>
        </member>
        <member name="M:BP.PubClass.ResponseWriteBlueMsg_SaveOK">
            <summary>
            保存成功
            </summary>
        </member>
        <member name="M:BP.PubClass.ResponseWriteBlueMsg_DeleteOK">
            <summary>
            ResponseWriteBlueMsg_DeleteOK
            </summary>
        </member>
        <member name="M:BP.PubClass.ResponseWriteBlueMsg_UpdataOK">
            <summary>
            ResponseWriteBlueMsg_UpdataOK
            </summary>
        </member>
        <member name="M:BP.PubClass.ResponseWriteBlackMsg(System.String)">
            <summary>
            输出到页面上黑色的信息。
            </summary>
            <param name="msg">消息</param>
        </member>
        <member name="M:BP.PubClass.ToErrorPage(System.String)">
            <summary>
            切换到信息也面。
            </summary>
            <param name="mess"></param>
        </member>
        <member name="M:BP.PubClass.ToMsgPage(System.String)">
            <summary>
            切换到信息也面。
            </summary>
            <param name="mess"></param>
        </member>
        <member name="M:BP.PubClass.ToErrorPage(System.String,System.String)">
             <summary>
            转到一个页面上。 '_top'
             </summary>
             <param name="mess"></param>
             <param name="target">'_top'</param>
        </member>
        <member name="M:BP.PubClass.Alert(System.String)">
            <summary>
            不用page 参数，show message
            </summary>
            <param name="mess"></param>
        </member>
        <member name="T:BP.SystemConfigOfTax">
            <summary>
            SystemConfigOfTax 的摘要说明。
            </summary>
        </member>
        <member name="P:BP.SystemConfigOfTax.UnitName">
            <summary>
            单位名称
            </summary>
        </member>
        <member name="P:BP.SystemConfigOfTax.UnitNo">
            <summary>
            单位No
            </summary>
        </member>
        <member name="P:BP.SystemConfigOfTax.FK_ZSJG">
            <summary>
            部门编号(征收机关编号.)
            </summary>
        </member>
        <member name="P:BP.SystemConfigOfTax.FK_Dept">
            <summary>
            系统自己编码的部门编号
            </summary>
        </member>
        <member name="T:BP.En.TaxUnit">
            <summary>
            TaxUnit 的摘要说明。
            </summary>
        </member>
        <member name="P:BP.En.TaxUnit.EnMap">
            <summary>
            重写基类方法
            </summary>
        </member>
        <member name="T:BP.En.TaxUnits">
            <summary>
            评分项目集合
            </summary>
        </member>
        <member name="P:BP.En.TaxUnits.GetNewEntity">
            <summary>
            得到它的 Entity 
            </summary>
        </member>
        <member name="T:BP.Web.WebUser">
            <summary>
            User 的摘要说明。
            </summary>
        </member>
        <member name="F:BP.Web.WebUser._HisBPUser">
            <summary>
            当前的用户
            </summary>
        </member>
        <member name="M:BP.Web.WebUser.GetHisFuncsByCateNo(System.String)">
            <summary>
            他的功能
            </summary>		
        </member>
        <member name="P:BP.Web.WebUser.FontSize">
            <summary>
            FontSize
            </summary>
        </member>
        <member name="P:BP.Web.WebUser.IsBSMode">
            <summary>
            是不是b/s 工作模式。
            </summary>
        </member>
        <member name="P:BP.Web.WebUser.UserType">
            <summary>
            用户类型 Tax, Taxpayer . 
            DS , GS , GongShang 
            </summary>
        </member>
        <member name="P:BP.Web.WebUser.HisBPUser">
            <summary>
            当前用户
            </summary>
        </member>
        <member name="P:BP.Web.WebUser.No">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:BP.Web.WebUser.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:BP.Web.WebUser.HisEmp">
            <summary>
            当前员工实体
            </summary>
        </member>
        <member name="P:BP.Web.WebUser.OID">
            <summary>
            OID
            </summary>
        </member>
        <member name="P:BP.Web.WebUser.Style">
            <summary>
            Style
            </summary>
        </member>
        <member name="P:BP.Web.WebUser.DGStyle">
            <summary>
            DGStyle
            0单行录入 , 1多行录入。 
            </summary>
        </member>
        <member name="P:BP.Web.WebUser.NoticeSound">
            <summary>
            提示声音
            </summary>
        </member>
        <member name="P:BP.Web.WebUser.LastEnterDate">
            <summary>
            最后登录日期
            </summary>
        </member>
        <member name="P:BP.Web.WebUser.IsAuthorize">
            <summary>
            是否是授权状态
            </summary> 
        </member>
        <member name="P:BP.Web.WebUser.IsOpenMenu">
            <summary>
            IsOpenMenu
            </summary>
        </member>
        <member name="P:BP.Web.WebUser.IsSoundAlert">
            <summary>
            声音提示
            </summary>
        </member>
        <member name="P:BP.Web.WebUser.IsTextAlert">
            <summary>
            是不是文字提示
            </summary>
        </member>
        <member name="P:BP.Web.WebUser.HisFuncs">
            <summary>
            他的功能
            </summary>
        </member>
        <member name="P:BP.Web.WebUser.HisDeptsOfPower">
            <summary>
            部门权限
            </summary>
        </member>
        <member name="P:BP.Web.WebUser.HisEmpsOfPower">
            <summary>
            员工权限
            </summary>
        </member>
        <member name="F:BP.Rpt.ChartType.Pie">
            <summary>
            饼状图
            </summary>
        </member>
        <member name="F:BP.Rpt.ChartType.Histogram">
            <summary>
            柱状图
            </summary>
        </member>
        <member name="F:BP.Rpt.ChartType.ZXT">
            <summary>
            折线图		
            </summary>
        </member>
        <member name="T:BP.Rpt.WorkWay">
            <summary>
            工作方式
            </summary>
        </member>
        <member name="F:BP.Rpt.WorkWay.Self">
            <summary>
            自己定义
            </summary>
        </member>
        <member name="F:BP.Rpt.WorkWay.Sum">
            <summary>
            求和
            </summary>
        </member>
        <member name="F:BP.Rpt.WorkWay.Avg">
            <summary>
            求平均数
            </summary>
        </member>
        <member name="F:BP.Rpt.WorkWay.Count">
            <summary>
            求数量。
            </summary>
        </member>
        <member name="T:BP.Rpt.DAttr">
            <summary>
            Entity 的摘要说明。
            </summary>	
        </member>
        <member name="F:BP.Rpt.DAttr.WorkWay">
            <summary>
            工作方式
            </summary>
        </member>
        <member name="F:BP.Rpt.DAttr.IsCutIfIsZero">
            <summary>
            如果是0是否把他去掉。
            </summary>
        </member>
        <member name="M:BP.Rpt.DAttr.#ctor(BP.En.Base.Attr,BP.Rpt.WorkWay,System.String,System.Boolean)">
            <summary>
            实体
            </summary>
        </member>
        <member name="T:BP.Rpt.DAttrs">
            <summary>
            
            </summary>
        </member>
        <member name="M:BP.Rpt.DAttrs.Add(BP.Rpt.DAttr)">
            <summary>
            增加一个属性
            </summary>
            <param name="attr">DAttr</param>
        </member>
        <member name="M:BP.Rpt.DAttrs.GetDAttrByKey(System.String)">
            <summary>
            根据一个key获得dattr.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:BP.Rpt.DAttrs.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="P:BP.Rpt.DAttrs.HisAttrs">
            <summary>
            他的attr集合
            </summary>
        </member>
        <member name="P:BP.Rpt.DAttrs.Item(System.Int32)">
            <summary>
            根据索引访问集合内的元素Attr。
            </summary>
        </member>
        <member name="T:BP.Rpt.Rpt2DNum">
            <summary>
            Entity 的摘要说明。
            次类报表实体用于对一个特定的列计算。
            </summary>	
        </member>
        <member name="M:BP.Rpt.Rpt2DNum.GetEntitiesNoNameByAttrKey(System.String)">
            <summary>
            得到纬度的实体集合，通过属性。
            </summary>
            <param name="attrOfD">纬度属性</param>
            <returns>EntitiesNoName</returns>
        </member>
        <member name="M:BP.Rpt.Rpt2DNum.GetDEns(System.String)">
            <summary>
            纬度1的实体集合
            </summary>
        </member>
        <member name="F:BP.Rpt.Rpt2DNum._HisAttrsOfSearch">
            <summary>
            单个实体查询属性。
            </summary>
        </member>
        <member name="F:BP.Rpt.Rpt2DNum._HisFKSearchAttrs">
            <summary>
            外键查询属性。
            </summary>
        </member>
        <member name="F:BP.Rpt.Rpt2DNum.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="M:BP.Rpt.Rpt2DNum.AddAttrOfD1ByKey(System.String)">
            <summary>
            增加
            </summary>
            <param name="attrKey">属性</param>
        </member>
        <member name="F:BP.Rpt.Rpt2DNum._DAttrs">
            <summary>
            要计算的数值属性。
            </summary>
        </member>
        <member name="M:BP.Rpt.Rpt2DNum.AddDAttr(System.String,BP.Rpt.WorkWay,System.Boolean)">
            <summary>
            增加
            </summary>
            <param name="attrKey">属性</param>
        </member>
        <member name="M:BP.Rpt.Rpt2DNum.AddDAttrSelf(System.String,System.String,System.Boolean)">
            <summary>
            增加
            </summary>
            <param name="attrKey">属性</param>
            <param name="ww"></param>
            <param name="tag"></param>
        </member>
        <member name="M:BP.Rpt.Rpt2DNum.#ctor">
            <summary>
            实体
            </summary>
        </member>
        <member name="P:BP.Rpt.Rpt2DNum.AttrsOfD1">
            <summary>
            第1纬度的属性。
            </summary>
        </member>
        <member name="P:BP.Rpt.Rpt2DNum.DAttrs">
            <summary>
            第1纬度的属性。
            </summary>
        </member>
        <member name="T:BP.Rpt.Rpt3D">
            <summary>
            Entity 的摘要说明。
            </summary>	
        </member>
        <member name="M:BP.Rpt.Rpt3D.GetEntitiesNoNameByAttrKey(System.String)">
            <summary>
            得到纬度的实体集合，通过属性。
            </summary>
            <param name="attrOfD">纬度属性</param>
            <returns>EntitiesNoName</returns>
        </member>
        <member name="M:BP.Rpt.Rpt3D.GetDEns(System.String)">
            <summary>
            纬度1的实体集合
            </summary>
        </member>
        <member name="F:BP.Rpt.Rpt3D._HisAttrsOfSearch">
            <summary>
            单个属性的查询属性集合
            </summary>
        </member>
        <member name="F:BP.Rpt.Rpt3D._HisFKSearchAttrs">
            <summary>
            外键查询属性
            </summary>
        </member>
        <member name="M:BP.Rpt.Rpt3D.AddFKSearchAttrs(System.String)">
            <summary>
            增加外键查询属性
            </summary>
            <param name="key">查询属性key</param>
        </member>
        <member name="F:BP.Rpt.Rpt3D.DataType">
            <summary>
            数据类型.
            </summary>
        </member>
        <member name="F:BP.Rpt.Rpt3D.DataProperty">
            <summary>
            数据性质。
            </summary>
        </member>
        <member name="F:BP.Rpt.Rpt3D.IsShowRate">
            <summary>
            显示比率(default true)
            </summary>
        </member>
        <member name="F:BP.Rpt.Rpt3D._HisEn">
            <summary>
            Entity
            </summary>
        </member>
        <member name="F:BP.Rpt.Rpt3D._HisEns">
            <summary>
            操作对象
            </summary>
        </member>
        <member name="F:BP.Rpt.Rpt3D.AttrOfD1">
            <summary>
            1纬度属性
            </summary>
        </member>
        <member name="F:BP.Rpt.Rpt3D.AttrOfD2">
            <summary>
            2纬度属性
            </summary>
        </member>
        <member name="F:BP.Rpt.Rpt3D.AttrOfD3">
            <summary>
            3纬度属性
            </summary>
        </member>
        <member name="F:BP.Rpt.Rpt3D._D2D3RefKey">
            <summary>
            2纬度3纬度关联属性。
            </summary>
        </member>
        <member name="F:BP.Rpt.Rpt3D.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="F:BP.Rpt.Rpt3D.IsShowSearchKey">
            <summary>
            是否能显示关键字查询。
            </summary>
        </member>
        <member name="M:BP.Rpt.Rpt3D.AddDAttrByKey(System.String)">
            <summary>
            增加一个纬度属性。
            </summary>
            <param name="attrKey">属性</param>
        </member>
        <member name="F:BP.Rpt.Rpt3D.OperationColumn">
            <summary>
            计算列
            （默认 COUNT(*) ）.
            AVG(filed).
            </summary>
        </member>
        <member name="M:BP.Rpt.Rpt3D.#ctor">
            <summary>
            实体
            </summary>
        </member>
        <member name="P:BP.Rpt.Rpt3D.DEns2">
            <summary>
            纬度2的实体集合
            </summary>
        </member>
        <member name="P:BP.Rpt.Rpt3D.DEns3">
            <summary>
            纬度3的实体集合
            </summary>
        </member>
        <member name="P:BP.Rpt.Rpt3D.HisAttrsOfSearch">
            <summary>
            单个属性的查询属性集合。
            </summary>
        </member>
        <member name="P:BP.Rpt.Rpt3D.HisFKSearchAttrs">
            <summary>
            外键查询属性。
            </summary>
        </member>
        <member name="P:BP.Rpt.Rpt3D.IsShowSum">
            <summary>
            是否可以显示合计(default true)
            </summary>
        </member>
        <member name="P:BP.Rpt.Rpt3D.HisEns">
            <summary>
            操作对象
            </summary>
        </member>
        <member name="P:BP.Rpt.Rpt3D.D2D3RefKey">
            <summary>
            3纬度属性
            </summary>
        </member>
        <member name="P:BP.Rpt.Rpt3D.DAttrs">
            <summary>
            纬度的属性，这些纬度可以供用户选择。
            </summary>
        </member>
        <member name="T:BP.Rpt.Rpt3Ds">
            <summary>
            EnObj 的摘要说明。
            </summary>
        </member>
        <member name="M:BP.Rpt.Rpt3Ds.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="T:BP.Sys.EnsRefAttr">
            <summary>
            实体实体之间的关联
            </summary>
        </member>
        <member name="F:BP.Sys.EnsRefAttr.CateEns">
            <summary>
            目录实体
            </summary>
        </member>
        <member name="F:BP.Sys.EnsRefAttr.SubEns">
            <summary>
            字实体
            </summary>
        </member>
        <member name="F:BP.Sys.EnsRefAttr.RefSubEnKey">
            <summary>
            关联到子实体类型
            </summary> 
        </member>
        <member name="T:BP.Sys.SysEnsRef">
            <summary>
            实体实体之间的关联
            </summary>
        </member>
        <member name="M:BP.Sys.SysEnsRef.#ctor">
            <summary>
            系统实体
            </summary>
        </member>
        <member name="P:BP.Sys.SysEnsRef.CateEns">
            <summary>
            目录实体
            </summary>
        </member>
        <member name="P:BP.Sys.SysEnsRef.SubEns">
            <summary>
            子实体
            </summary>
        </member>
        <member name="P:BP.Sys.SysEnsRef.RefSubEnKey">
            <summary>
            关联的key
            </summary>
        </member>
        <member name="T:BP.Sys.SysEnsRefs">
            <summary>
            实体集合
            </summary>
        </member>
        <member name="M:BP.Sys.SysEnsRefs.#ctor(System.String)">
            <summary>
            根据子实体找出
            </summary>
            <param name="subEns"></param>
        </member>
        <member name="M:BP.Sys.SysEnsRefs.GetRefSubEnKey(System.String,System.String)">
            <summary>
            取得目录实体与子实体关联的key
            如果关联不上就返回null.
            </summary>
            <param name="cateEns">目录实体</param>
            <param name="subEns">子实体</param>
            <returns>关联的键</returns>
        </member>
        <member name="P:BP.Sys.SysEnsRefs.GetNewEntity">
            <summary>
            得到它的 Entity
            </summary>
        </member>
        <member name="T:BP.Rpt.Rpt3DCell">
            <summary>
            三维实体
            </summary>
        </member>
        <member name="T:BP.Rpt.RptCell">
            <summary>
            Cell 基类
            单元格
            </summary>
        </member>
        <member name="F:BP.Rpt.RptCell.PK1">
            <summary>
            PK1
            </summary>
        </member>
        <member name="F:BP.Rpt.RptCell.PK2">
            <summary>
            PK2
            </summary>
        </member>
        <member name="F:BP.Rpt.RptCell.val">
            <summary>
            值
            </summary>
        </member>
        <member name="F:BP.Rpt.RptCell.Url">
            <summary>
            连接的Url。
            </summary>
        </member>
        <member name="F:BP.Rpt.RptCell.ToolTip">
            <summary>
            URl 显示的提示。
            </summary>
        </member>
        <member name="F:BP.Rpt.RptCell.Target">
            <summary>
            目标_top， _blank ， _parent
            </summary>
        </member>
        <member name="F:BP.Rpt.Rpt3DCell.PK3">
            <summary>
            3 纬属性
            </summary>
        </member>
        <member name="M:BP.Rpt.Rpt3DCell.#ctor(System.String,System.String,System.String,System.Object)">
            <summary>
            构造一个3维实体
            </summary>
            <param name="PK1">pk1</param>
            <param name="PK2">pk2</param>
            <param name="PK3">pk3</param>
            <param name="val">3个PK决定值</param>
        </member>
        <member name="M:BP.Rpt.Rpt3DCell.#ctor(System.String,System.String,System.String,System.Object,System.String,System.String)">
            <summary>
            构造一个3维实体
            </summary>
            <param name="PK1">pk1</param>
            <param name="PK2">pk2</param>
            <param name="PK3">pk3</param>
            <param name="url">要连接到的目标</param>
            <param name="val">3个PK决定值</param>
            <param name="_Target">目标</param>
        </member>
        <member name="T:BP.Rpt.Rpt3DCells">
            <summary>
            3纬报表集合
            </summary>
        </member>
        <member name="M:BP.Rpt.Rpt3DCells.GetSumByPK1(System.String)">
            <summary>
            根据Pk1,取得他的sum.
            </summary>
            <param name="pk1">pk1</param>
            <returns>合计</returns>
        </member>
        <member name="M:BP.Rpt.Rpt3DCells.GetSumByPK1(System.String,System.String)">
            <summary>
            根据Pk1,pk2 取得他的sum.
            </summary>
            <param name="pk1">pk1</param>
            <param name="pk2">pk2</param>
            <returns>合计</returns>
        </member>
        <member name="M:BP.Rpt.Rpt3DCells.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:BP.Rpt.Rpt3DCells.#ctor(System.Data.DataTable)">
            <summary>
            根据一个Table 构造，这个Table 必须有3个列。
            他的顺序必须是与纬度的顺序一致。 
            </summary>
            <param name="dt">DataTable</param>
        </member>
        <member name="M:BP.Rpt.Rpt3DCells.#ctor(System.Data.DataTable,System.String)">
            <summary>
            根据一个Table 构造，这个Table 必须有3个列。
            他的顺序必须是与纬度的顺序一致。
            </summary>
            <param name="dt">3个列的 DataTable</param>
            <param name="url">连接</param>
        </member>
        <member name="M:BP.Rpt.Rpt3DCells.BindWithDataTable(System.Data.DataTable)">
            <summary>
            根据一个Table 构造，这个Table 必须有3个列。
            他的顺序必须是与纬度的顺序一致。
            </summary>
            <param name="dt">3个列的 DataTable</param>
        </member>
        <member name="M:BP.Rpt.Rpt3DCells.BindWithDataTable(System.Data.DataTable,System.String,System.String)">
            <summary>
            根据一个Table 构造，这个Table 必须有3个列, 他的顺序是pk1, pk2,pk3.
            他的顺序必须是与纬度的顺序一致。
            </summary>
            <param name="dt">3个列的 DataTable</param>
            <param name="url">连接</param>
            <param name="target">连接到 _self , _blank</param>
        </member>
        <member name="M:BP.Rpt.Rpt3DCells.Add(BP.Rpt.Rpt3DCell)">
            <summary>
            加入一个新的元素
            </summary>
            <param name="myen">Cell实体</param>
        </member>
        <member name="M:BP.Rpt.Rpt3DCells.GetCell(System.String,System.String,System.String)">
            <summary>
            通过3个值取出他的cell.
            如果没有就New 一个返回。
            </summary>
            <param name="pk1">pk1</param>
            <param name="pk2">pk2</param>
            <param name="pk3">pk3</param>
            <returns>Rpt3DCell</returns>
        </member>
        <member name="P:BP.Rpt.Rpt3DCells.Item(System.Int32)">
            <summary>
            Rpt3DCell
            </summary>
        </member>
        <member name="M:BP.Rpt.Rpt1DCell.#ctor(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="pk"></param>
            <param name="val"></param>
        </member>
        <member name="F:BP.Rpt.Rpt1DCell.PK">
            <summary>
            PK1
            </summary>
        </member>
        <member name="F:BP.Rpt.Rpt1DCell.val">
            <summary>
            值
            </summary>
        </member>
        <member name="M:BP.Rpt.Rpt1DCells.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:BP.Rpt.Rpt1DCells.#ctor(System.Data.DataTable)">
            <summary>
            根据一个Table 构造，这个Table 必须有3个列。
            他的顺序必须是与纬度的顺序一致。 
            </summary>
            <param name="dt">DataTable</param>
        </member>
        <member name="M:BP.Rpt.Rpt1DCells.BindWithDataTable(System.Data.DataTable)">
            <summary>
            根据一个Table 构造，这个Table 必须有3个列。
            他的顺序必须是与纬度的顺序一致。
            </summary>
            <param name="dt">3个列的 DataTable</param>
        </member>
        <member name="M:BP.Rpt.Rpt1DCells.BindWithDataTable(System.Data.DataTable,System.String)">
            <summary>
            根据一个Table 构造，这个Table 必须有3个列。
            他的顺序必须是与纬度的顺序一致。
            </summary>
            <param name="dt">3个列的 DataTable</param>
        </member>
        <member name="M:BP.Rpt.Rpt1DCells.Add(BP.Rpt.Rpt1DCell)">
            <summary>
            加入一个新的元素
            </summary>
            <param name="myen">Cell实体</param>
        </member>
        <member name="M:BP.Rpt.Rpt1DCells.GetCell(System.String)">
            <summary>
            通过3个值取出他的cell.
            如果没有就New 一个返回。
            </summary>
            <param name="pk1">pk1</param>
            <returns>Rpt3DCell</returns>
        </member>
        <member name="P:BP.Rpt.Rpt1DCells.Item(System.Int32)">
            <summary>
            Rpt3DCell
            </summary>
        </member>
        <member name="T:BP.Rpt.RptPlanarCell">
            <summary>
             2 维单元格
             实体
            </summary>
        </member>
        <member name="M:BP.Rpt.RptPlanarCell.#ctor(System.String,System.String,System.Object)">
            <summary>
            构造
            </summary>
            <param name="PK1">PK1</param>
            <param name="PK2">PK2</param>
            <param name="val">Val</param>
        </member>
        <member name="M:BP.Rpt.RptPlanarCell.#ctor(System.String,System.String,System.Object,System.String)">
            <summary>
            构造
            </summary>
            <param name="PK1">PK1</param>
            <param name="PK2">PK2</param>
            <param name="val">Val</param>
            <param name="_Url">要连接的URL</param>
        </member>
        <member name="T:BP.Rpt.RptPlanarCells">
            <summary>
             2 维单元格s
             实体集合
            </summary>
        </member>
        <member name="M:BP.Rpt.RptPlanarCells.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:BP.Rpt.RptPlanarCells.#ctor(System.Data.DataTable)">
            <summary>
            根据Table构造一个集合。
            </summary>
            <param name="dt">这个DataTable要有3列，第1列PK1, 第2列PK2, 第3列Val</param>
        </member>
        <member name="M:BP.Rpt.RptPlanarCells.Add(System.String,System.String,System.Object,System.String)">
            <summary>
            增加一个新的实体 with url
            </summary>
            <param name="pk1">PK1</param>
            <param name="pk2">PK2</param>
            <param name="val">两个PK决定值</param>
            <param name="url">连接</param>
        </member>
        <member name="M:BP.Rpt.RptPlanarCells.Add(System.String,System.String,System.Object)">
            <summary>
            增加一个新的实体
            </summary>
            <param name="pk1">pk1</param>
            <param name="pk2">pk2</param>
            <param name="val">两个PK决定值</param>
        </member>
        <member name="M:BP.Rpt.RptPlanarCells.Add(BP.Rpt.RptPlanarCell)">
            <summary>
            加入一个新的元素
            </summary>
            <param name="myen">Cell实体</param>
        </member>
        <member name="M:BP.Rpt.RptPlanarCells.GetCell(System.String,System.String)">
            <summary>
            得到一个单元格。
            </summary>
            <param name="pk1">PK1</param>
            <param name="pk2">PK2</param>
            <returns>RptPlanarCell</returns>
        </member>
        <member name="M:BP.Rpt.RptPlanarCells.GetVal(System.String,System.String)">
            <summary>
            得到val.
            </summary>
            <param name="pk1"></param>
            <param name="pk2"></param>
            <returns>val</returns>
        </member>
        <member name="M:BP.Rpt.RptPlanarCells.GetRateByPK2(System.String)">
            <summary>
            
            </summary>
            <param name="pk2"></param>
            <returns></returns>
        </member>
        <member name="M:BP.Rpt.RptPlanarCells.GetRate(System.String,System.String)">
            <summary>
            得到一个Rate。
            </summary>
            <param name="pk1">PK1</param>
            <param name="pk2">PK2</param>
            <returns>RptPlanarCell</returns>
        </member>
        <member name="M:BP.Rpt.RptPlanarCells.GetSumByPK1(System.String)">
            <summary>
            得到Sum
            </summary>
            <param name="pk1">pk</param>
            <returns>sum</returns>
        </member>
        <member name="M:BP.Rpt.RptPlanarCells.GetSumByPK2(System.String)">
            <summary>
            得到Sum
            </summary>
            <param name="pk1">pk</param>
            <returns>sum</returns>
        </member>
        <member name="M:BP.Rpt.RptPlanarCells.GenerHtmlStrBy(System.String,System.String)">
            <summary>
            得到一个单元格内的字符串
            </summary>
            <param name="pk1">pk1</param>
            <param name="pk2">pk2</param>
            <returns>html 标记</returns>
        </member>
        <member name="P:BP.Rpt.RptPlanarCells.Item(System.Int32)">
            <summary>
            根据索引访问
            </summary>
        </member>
        <member name="P:BP.Rpt.RptPlanarCells.Sum">
            <summary>
            合计
            </summary>
        </member>
        <member name="T:BP.Rpt.Rpt3DEntity">
            <summary>
            3维交叉报表实体
            数据类型是对于一个数据类型进行分析。
            </summary>
        </member>
        <member name="T:BP.Rpt.RptEntity">
            <summary>
            报表实体的基本属性：
            他的2纬3位报表都是从此基础上继承下来的。
            </summary>
        </member>
        <member name="F:BP.Rpt.RptEntity.DataType">
            <summary>
            数据类型
            </summary>
        </member>
        <member name="F:BP.Rpt.RptEntity.IsShowTooltips">
            <summary>
            是否显示tooltips
            </summary>
        </member>
        <member name="M:BP.Rpt.RptEntity.#ctor">
            <summary>
            报表实体
            </summary>
        </member>
        <member name="F:BP.Rpt.RptEntity.CellUrlTarget">
            <summary>
            连接属性
            </summary>
        </member>
        <member name="F:BP.Rpt.RptEntity.Title">
            <summary>
            交叉报表标题
            </summary>
        </member>
        <member name="F:BP.Rpt.RptEntity.LeftTitle">
            <summary>
            项目
            </summary>
        </member>
        <member name="F:BP.Rpt.RptEntity.Author">
            <summary>
            作者
            </summary>
        </member>
        <member name="F:BP.Rpt.RptEntity.ReportDate">
            <summary>
            报表日期
            </summary>
        </member>
        <member name="M:BP.Rpt.Rpt3DEntity.CutNotRefD1">
            <summary>
            按照纬度删除不能对应上的纬度
            </summary>
        </member>
        <member name="M:BP.Rpt.Rpt3DEntity.CutNotRefD2">
            <summary>
            按照纬度删除不能对应上的纬度
            </summary>
        </member>
        <member name="M:BP.Rpt.Rpt3DEntity.CutNotRefD3">
            <summary>
            按照纬度删除不能对应上的纬度
            </summary>
        </member>
        <member name="M:BP.Rpt.Rpt3DEntity.GetSumByD2D3(System.String,System.String)">
            <summary>
            根据第1纬度取道他的信息.
            </summary>
            <param name="d1">纬度key</param>
            <returns></returns>
        </member>
        <member name="M:BP.Rpt.Rpt3DEntity.GetSumByD1(System.String)">
            <summary>
            根据第1纬度取道他的信息.
            </summary>
            <param name="d1">纬度key</param>
            <returns></returns>
        </member>
        <member name="M:BP.Rpt.Rpt3DEntity.GetCellContext(System.String,System.String,System.String)">
            <summary>
            用到HTML的显示。把Val 根据URL的设置转换为Link.
            </summary>
            <param name="pk1"></param>
            <param name="pk2"></param>
            <returns></returns>
        </member>
        <member name="M:BP.Rpt.Rpt3DEntity.GetCellContext_(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            用到HTML的显示。把Val 根据URL的设置转换为Link.
            </summary>
            <param name="pk1"></param>
            <param name="pk2"></param>
            <returns></returns>
        </member>
        <member name="M:BP.Rpt.Rpt3DEntity.#ctor">
            <summary>
            3维交叉报表实体
            </summary>
        </member>
        <member name="M:BP.Rpt.Rpt3DEntity.#ctor(BP.En.Base.EntitiesNoName,BP.En.Base.EntitiesNoName,BP.En.Base.EntitiesNoName,System.Data.DataTable,System.String)">
            <summary>
            3维交叉报表实体
            </summary>
            <param name="d1">d1</param>
            <param name="d2">d2</param>
            <param name="d3">d3</param>
            <param name="dt">dt</param>
        </member>
        <member name="F:BP.Rpt.Rpt3DEntity.SingleDimensionItem1">
            <summary>
            一维实体(一般是列)
            </summary>
        </member>
        <member name="F:BP.Rpt.Rpt3DEntity.SingleDimensionItem2">
            <summary>
            维实体 (1级科目)
            </summary>
        </member>
        <member name="F:BP.Rpt.Rpt3DEntity.SingleDimensionItem3">
            <summary>
            多级元素
            </summary>
        </member>
        <member name="F:BP.Rpt.Rpt3DEntity.HisCells">
            <summary>
            Cell集合
            </summary>
        </member>
        <member name="F:BP.Rpt.Rpt3DEntity.Item3RefKey">
            <summary>
            第三维要关联的字段。
            </summary>
        </member>
        <member name="F:BP.Rpt.Rpt3DEntity._d1ClassName">
            <summary>
            1纬度的类名称
            </summary>
        </member>
        <member name="F:BP.Rpt.Rpt3DEntity._d2ClassName">
            <summary>
            2纬度的类名称
            </summary>
        </member>
        <member name="F:BP.Rpt.Rpt3DEntity._d3ClassName">
            <summary>
            3纬度的类名称
            </summary>
        </member>
        <member name="M:BP.Rpt.Rpt3DEntity.GetD1Context(System.String,System.String)">
            <summary>
            此方法，是为了HTML 使用。
            </summary>
            <param name="pk1No">No 值</param>
            <param name="name">名称</param>
            <returns>html</returns>
        </member>
        <member name="M:BP.Rpt.Rpt3DEntity.GetD2Context(System.String,System.String)">
            <summary>
            此方法，是为了HTML 使用。
            </summary>
            <param name="pk1No">No 值</param>
            <param name="name">名称</param>
            <returns>html</returns>
        </member>
        <member name="M:BP.Rpt.Rpt3DEntity.GetD3Context(System.String,System.String)">
            <summary>
            此方法，是为了HTML 使用。
            </summary>
            <param name="pk1No">No 值</param>
            <param name="name">名称</param>
            <returns>html</returns>
        </member>
        <member name="P:BP.Rpt.Rpt3DEntity.D2D3RefKey">
            <summary>
            d2d3相关联的key
            </summary>
        </member>
        <member name="P:BP.Rpt.Rpt3DEntity.HisSum">
            <summary>
            合计
            </summary>
        </member>
        <member name="P:BP.Rpt.Rpt3DEntity.IsShowItem1Url">
            <summary>
            是不是需要显示Item1 的URL.
            </summary>
        </member>
        <member name="P:BP.Rpt.Rpt3DEntity.IsShowItem2Url">
            <summary>
            是不是需要显示Item2 的URL.
            </summary>
        </member>
        <member name="P:BP.Rpt.Rpt3DEntity.IsShowItem3Url">
            <summary>
            是不是需要显示Item3 的URL.
            </summary>
        </member>
        <member name="P:BP.Rpt.Rpt3DEntity.D1ClassesName">
            <summary>
            1纬度的类名称。
            </summary>
        </member>
        <member name="P:BP.Rpt.Rpt3DEntity.D2ClassesName">
            <summary>
            2纬度的类名称。
            </summary>
        </member>
        <member name="P:BP.Rpt.Rpt3DEntity.D3ClassesName">
            <summary>
            3纬度的类名称。
            </summary>
        </member>
        <member name="T:BP.Rpt.RptPlanarEntity">
            <summary>
            2交叉报表实体
            </summary>
        </member>
        <member name="F:BP.Rpt.RptPlanarEntity.DataProperty">
            <summary>
            个数
            </summary>
        </member>
        <member name="F:BP.Rpt.RptPlanarEntity._IsShowItem1Url">
            <summary>
            是否要显示Item的Url。
            </summary>
        </member>
        <member name="F:BP.Rpt.RptPlanarEntity._IsShowItem2Url">
            <summary>
            是否要显示Item2的Url。
            </summary>
        </member>
        <member name="M:BP.Rpt.RptPlanarEntity.#ctor">
            <summary>
            交叉报表实体
            </summary>
        </member>
        <member name="M:BP.Rpt.RptPlanarEntity.#ctor(BP.En.Base.EntitiesNoName,BP.En.Base.EntitiesNoName,BP.Rpt.RptPlanarCells)">
            <summary>
            交叉报表实体
            </summary>
            <param name="HisSingleDimensionItem1">一个集合</param>
            <param name="HisSingleDimensionItem2">另外一个集合</param>
            <param name="cells">单元格</param>
        </member>
        <member name="M:BP.Rpt.RptPlanarEntity.#ctor(BP.En.Base.EntitiesNoName,BP.En.Base.EntitiesNoName,System.Data.DataTable)">
            <summary>
            交叉报表实体
            </summary>
            <param name="d1">一个集合</param>
            <param name="d2">另外一个集合</param>
            <param name="cells">单元格</param>
        </member>
        <member name="F:BP.Rpt.RptPlanarEntity.SingleDimensionItem1">
            <summary>
            一维实体1
            </summary>
        </member>
        <member name="F:BP.Rpt.RptPlanarEntity.SingleDimensionItem2">
            <summary>
            一维实体2
            </summary>
        </member>
        <member name="F:BP.Rpt.RptPlanarEntity.PlanarCells">
            <summary>
            单元s
            </summary>
        </member>
        <member name="M:BP.Rpt.RptPlanarEntity.GetCellContext(System.String,System.String)">
            <summary>
            用到HTML的显示。把Val 根据URL的设置转换为Link.
            </summary>
            <param name="pk1">pk1</param>
            <param name="pk2">pk2</param>
            <returns>string</returns>
        </member>
        <member name="P:BP.Rpt.RptPlanarEntity.IsShowItem1Url">
            <summary>
            是不是需要显示Item1 的URL.
            </summary>
        </member>
        <member name="P:BP.Rpt.RptPlanarEntity.IsShowItem2Url">
            <summary>
            是不是需要显示Item1 的URL.
            </summary>
        </member>
        <member name="T:BP.DA.PieEntity">
            <summary>
            PieEntity 的摘要说明。
            </summary>
        </member>
        <member name="M:BP.DA.PieEntity.#ctor(System.String,System.String,System.Single)">
            <summary>
            构造
            </summary>
            <param name="No">编号</param>
            <param name="Name">名称</param>
            <param name="val">值</param>
        </member>
        <member name="T:BP.DA.PieEntities">
            <summary>
            
            </summary>
        </member>
        <member name="M:BP.DA.PieEntities.ToDataTable">
            <summary>
            转换数据到Table
            Colmun 如下
            No
            Name
            Val
            </summary>
            <returns>DataTable</returns>
        </member>
        <member name="M:BP.DA.PieGroupEntities.Add(BP.DA.PieEntities)">
            <summary>
            增一个 PieEntities
            </summary>
            <param name="en"></param>
        </member>
        <member name="M:BP.DA.PieGroupEntities.ToDataTable">
            <summary>
            转换数据到Table
            Colmun 如下
            GroupNo
            GroupTitle
            No
            Name
            Val
            </summary>
            <returns>DataTable</returns>
        </member>
        <member name="P:BP.DA.PieGroupEntities.Item(System.Int32)">
            <summary>
            取出里面的值根据索引
            </summary>
        </member>
        <member name="T:BP.Rpt.RefLinkAttr">
            <summary>
            关联类的属性。
            </summary>
        </member>
        <member name="F:BP.Rpt.RefLinkAttr.ClassName">
            <summary>
            类名称
            </summary>
        </member>
        <member name="F:BP.Rpt.RefLinkAttr.Url">
            <summary>
            连接
            </summary>
        </member>
        <member name="F:BP.Rpt.RefLinkAttr.Target">
            <summary>
            目标
            </summary>
        </member>
        <member name="T:BP.Rpt.RefLink">
            <summary>
            RefLink 的摘要说明。
            关联实体
            </summary>
        </member>
        <member name="M:BP.Rpt.RefLink.HtmlName(System.String,System.String)">
            <summary>
            组合的HTMl字符串。
            </summary>
            <param name="className"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="P:BP.Rpt.RefLink.Url">
            <summary>
            要连接到的地方。
            </summary>
        </member>
        <member name="P:BP.Rpt.RefLink.Target">
            <summary>
            连接的目标
            </summary>
        </member>
        <member name="P:BP.Rpt.RefLink.Note">
            <summary>
            备注，用来显示给用户看。
            </summary>
        </member>
        <member name="P:BP.Rpt.RefLink.ClassName">
            <summary>
            类名称
            </summary>		 
        </member>
        <member name="P:BP.Rpt.RefLink.EnMap">
            <summary>
            重写基类方法
            </summary>
        </member>
        <member name="T:BP.Rpt.RefLinks">
            <summary>
            功能集合
            </summary>
        </member>
        <member name="M:BP.Rpt.RefLinks.#ctor(System.String)">
            <summary>
            按照className ，生成它的与之相关联的实体集合。
            </summary>
            <param name="className"></param>
        </member>
        <member name="P:BP.Rpt.RefLinks.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:BP.Rpt.RefLinks.GetNewEntity">
            <summary>
            得到它的 Entity 
            </summary>
        </member>
        <member name="T:BP.Rpt.RptEntitiesNoNameWithNum">
            <summary>
            RptEntitiesNoNameMoney 的摘要说明。
            </summary>
        </member>
        <member name="M:BP.Rpt.RptEntitiesNoNameWithNum.CutIsZero">
            <summary>
            去掉项目=0 的纬度。
            </summary>
        </member>
        <member name="M:BP.Rpt.RptEntitiesNoNameWithNum.GetNameByNo(System.String)">
            <summary>
            GetNameByNo
            </summary>
            <param name="No"></param>
            <returns></returns>
        </member>
        <member name="F:BP.Rpt.RptEntitiesNoNameWithNum.SingleDimensionItem1">
            <summary>
            SingleDimensionItem1
            </summary>
        </member>
        <member name="F:BP.Rpt.RptEntitiesNoNameWithNum.Rpt1DCells">
            <summary>
            单元格集合
            </summary>
        </member>
        <member name="M:BP.Rpt.RptEntitiesNoNameWithNum.#ctor(BP.En.Base.EntitiesNoName,BP.Rpt.Rpt1DCells)">
            <summary>
            根据一个EntitiesNoName , 单元格 , 组合。
            </summary>
            <param name="ens"></param>
            <param name="cells"></param>
        </member>
        <member name="M:BP.Rpt.RptEntitiesNoNameWithNum.#ctor(BP.En.Base.EntitiesNoName,System.Data.DataTable,System.String)">
            <summary>
            
            </summary>
            <param name="ens"></param>
            <param name="dt"></param>
            <param name="url"></param>
        </member>
        <member name="T:BP.Rpt.RptFactory">
            <summary>
            RptFactory 的摘要说明。
            </summary>
        </member>
        <member name="M:BP.Rpt.RptFactory.Rpt3DEntity(BP.En.Base.Entity,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            产生3维得Rpt3DEntity
            用来统计个数
            </summary>
            <param name="en">实体</param>
            <param name="attrOfD1">纬度1属性</param>
            <param name="attrOfD2">纬度2属性</param>
            <param name="attrOfD3">纬度3属性</param>
            <param name="d1d2RefKey">纬度2，3关联属性（可以为空）</param>
            <param name="cellUrl">Url，（可以为空）</param>
            <returns>生成的实体。</returns>
        </member>
        <member name="T:BP.Pub.UploadType">
            <summary>
            更新方式
            </summary>
        </member>
        <member name="F:BP.Pub.UploadType.Clear">
            <summary>
            清空方式
            </summary>
        </member>
        <member name="F:BP.Pub.UploadType.Add">
            <summary>
            增加方式
            </summary>
        </member>
        <member name="F:BP.Pub.UploadType.Update">
            <summary>
            更新方式
            </summary>
        </member>
        <member name="T:BP.Pub.DataIOAttr">
            <summary>
            EnUnit 的摘要说明。
            县城属性
            </summary>
        </member>
        <member name="F:BP.Pub.DataIOAttr.Flag">
            <summary>
            标记
            </summary>
        </member>
        <member name="F:BP.Pub.DataIOAttr.RecordDateTime">
            <summary>
            记录时间
            </summary>
        </member>
        <member name="F:BP.Pub.DataIOAttr.Recorder">
            <summary>
            记录人
            </summary>
        </member>
        <member name="F:BP.Pub.DataIOAttr.I1">
            <summary>
            I1
            </summary>
        </member>
        <member name="T:BP.En.EmpAttr">
            <summary>
            员工属性
            </summary>
        </member>
        <member name="F:BP.En.EmpAttr.PhoneOfOffice">
            <summary>
            办公电话
            </summary>
        </member>
        <member name="F:BP.En.EmpAttr.PhoneOfHome">
            <summary>
            家庭电话
            </summary>
        </member>
        <member name="F:BP.En.EmpAttr.PhoneOfMobile">
            <summary>
            手机
            </summary>
        </member>
        <member name="F:BP.En.EmpAttr.FK_Duty">
            <summary>
            职务
            </summary>
        </member>
        <member name="F:BP.En.EmpAttr.FK_Station">
            <summary>
            主要岗位
            </summary>
        </member>
        <member name="F:BP.En.EmpAttr.FK_DutyText">
            <summary>
            职务名称
            </summary>
        </member>
        <member name="F:BP.En.EmpAttr.FK_ZSJG">
            <summary>
            征收机关
            </summary>
        </member>
        <member name="F:BP.En.EmpAttr.FK_Dept">
            <summary>
            部门编号
            </summary>
        </member>
        <member name="F:BP.En.EmpAttr.FK_DeptText">
            <summary>
            部门名称
            </summary>
        </member>
        <member name="F:BP.En.EmpAttr.UnitNo">
            <summary>
            单位编号
            </summary>
        </member>
        <member name="F:BP.En.EmpAttr.TeamNo">
            <summary>
            小组编号
            </summary>
        </member>
        <member name="F:BP.En.EmpAttr.IsOpenMenu">
            <summary>
            是不是打开菜单
            </summary>
        </member>
        <member name="T:BP.En.Emp">
            <summary>
            Emp 的摘要说明。
            </summary>
        </member>
        <member name="M:BP.En.Emp.#ctor">
            <summary>
            员工
            </summary>		
        </member>
        <member name="M:BP.En.Emp.#ctor(System.Int32)">
            <summary>
            员工ID
            </summary>
            <param name="_oid">OID</param>	
        </member>
        <member name="M:BP.En.Emp.#ctor(System.String)">
            <summary>
            员工编号
            </summary>
            <param name="_No">No</param>
        </member>
        <member name="M:BP.En.Emp.#ctor(System.String,System.String)">
            <summary>
            Emp
            </summary>
            <param name="_No">EmpNo</param>
            <param name="_unitNo">单位编号</param>
        </member>
        <member name="P:BP.En.Emp.TeamNo">
            <summary>
            小组
            </summary>
        </member>
        <member name="P:BP.En.Emp.UnitNo">
            <summary>
            机关单位编号
            </summary>
        </member>
        <member name="P:BP.En.Emp.PhoneOfOffice">
            <summary>
            移动电话
            </summary> 
        </member>
        <member name="P:BP.En.Emp.PhoneOfHome">
            <summary>
            办公电话
            </summary> 
        </member>
        <member name="P:BP.En.Emp.PhoneOfMobile">
            <summary>
            家庭电话
            </summary> 
        </member>
        <member name="P:BP.En.Emp.FK_Duty">
            <summary>
            职务
            </summary>
        </member>
        <member name="P:BP.En.Emp.FK_Dept">
            <summary>
            部门
            </summary>
        </member>
        <member name="P:BP.En.Emp.FK_ZSJG">
            <summary>
            征收机关
            </summary>
        </member>
        <member name="P:BP.En.Emp.StationRefText">
            <summary>
            StationRefText 
            </summary>
        </member>
        <member name="P:BP.En.Emp.FK_Station">
            <summary>
            FK_Station （主要的工作岗位）
            </summary>
        </member>
        <member name="P:BP.En.Emp.AuthorizedAgentOfEmp">
            <summary>
            授权人
            </summary>
        </member>
        <member name="P:BP.En.Emp.HisDuty">
            <summary>
            HisStation
            </summary>
        </member>
        <member name="P:BP.En.Emp.HisDept">
            <summary>
            主要的部门。
            </summary>
        </member>
        <member name="P:BP.En.Emp.HisStation">
            <summary>
            主要的工作岗位。
            </summary>
        </member>
        <member name="P:BP.En.Emp.HisStations">
            <summary>
            工作岗位集合。
            </summary>
        </member>
        <member name="P:BP.En.Emp.IsTextAlert">
            <summary>
            IsSoundAlert ico 
            </summary>
        </member>
        <member name="P:BP.En.Emp.IsSoundAlert">
            <summary>
            IsSoundAlert 
            </summary>
        </member>
        <member name="P:BP.En.Emp.IsOpenMenu">
            <summary>
            是不是打开菜单。
            </summary>
        </member>
        <member name="P:BP.En.Emp.EnMap">
            <summary>
            重写基类方法
            </summary>
        </member>
        <member name="T:BP.En.Emps">
            <summary>
            员工
            </summary>
        </member>
        <member name="M:BP.En.Emps.#ctor">
            <summary>
            员工s
            </summary>
        </member>
        <member name="M:BP.En.Emps.#ctor(System.String)">
            <summary>
            单位的全部员工
            </summary>
            <param name="unitNo">机关单位编号</param>
        </member>
        <member name="M:BP.En.Emps.QByUnitTeam(System.String,System.String)">
            <summary>
            按照小组编号查询。
            </summary>
            <param name="unitNo">单位编号</param>
            <param name="teamNo">小组编号</param>
            <returns></returns>
        </member>
        <member name="M:BP.En.Emps.QByUnit(System.String)">
            <summary>
            按照单位查询
            </summary>
            <param name="unitNo">单位编号</param>
            <returns>查询出的Num</returns>
        </member>
        <member name="M:BP.En.Emps.QByTeam(System.String)">
            <summary>
            按照小组编号查询。
            </summary>		 
            <param name="teamNo">小组编号</param>
            <returns></returns>
        </member>
        <member name="M:BP.En.Emps.RetrieveByFK_Dept(System.String)">
            <summary>
            按照部门查询
            </summary>
            <param name="fk_dept">fk_dept</param>
            <returns></returns>
        </member>
        <member name="P:BP.En.Emps.GetNewEntity">
            <summary>
            得到它的 Entity 
            </summary>
        </member>
        <member name="T:BP.Web.TaxUser">
            <summary>
            User 的摘要说明。
            </summary>
        </member>
        <member name="M:BP.Web.TaxUser.SignIn(BP.En.Emp,System.Boolean,System.Boolean)">
            <summary>
            登陆
            </summary>
            <param name="em">要登陆的员工</param>
            <param name="isAuthorize">是不是授权方式登陆的．</param>
            <param name="isAddHerToOnlineUsers">是否把他加入在线人员名单．</param>
        </member>
        <member name="P:BP.Web.TaxUser.FK_ZSJG">
            <summary>
            所在部门编号(地税规定的部门)
            </summary>
        </member>
        <member name="P:BP.Web.TaxUser.UnitNo">
            <summary>
            所在的机关单位编号
            </summary>
        </member>
        <member name="P:BP.Web.TaxUser.UnitNoInHisSystem">
            <summary>
            所在的机关单位编号
            </summary>
        </member>
        <member name="P:BP.Web.TaxUser.TeamNo">
            <summary>
            小组编号
            </summary>
        </member>
        <member name="T:BP.Tax.DSDeptAttr">
            <summary>
            部门
            </summary>
        </member>
        <member name="F:BP.Tax.DSDeptAttr.IsDetl">
            <summary>
            是否明
            </summary>
        </member>
        <member name="T:BP.Tax.ZSJG">
            <summary>
            征收机关
            </summary>
        </member>
        <member name="M:BP.Tax.ZSJG.#ctor">
            <summary>
            征收机关
            </summary>
        </member>
        <member name="M:BP.Tax.ZSJG.#ctor(System.String)">
            <summary>
            征收机关
            </summary>
            <param name="_No">No</param>
        </member>
        <member name="P:BP.Tax.ZSJG.EnMap">
            <summary>
            Map
            </summary>
        </member>
        <member name="T:BP.Tax.ZSJGs">
            <summary>
            征收机关s
            </summary>
        </member>
        <member name="M:BP.Tax.ZSJGs.#ctor">
            <summary>
            征收机关s
            </summary>
        </member>
        <member name="P:BP.Tax.ZSJGs.GetNewEntity">
            <summary>
            En
            </summary>
        </member>
    </members>
</doc>
