<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BP.WF</name>
    </assembly>
    <members>
        <member name="T:BP.WF.BookAttr">
            <summary>
            文书属性
            </summary>
        </member>
        <member name="F:BP.WF.BookAttr.MID">
            <summary>
            MID
            </summary>
        </member>
        <member name="F:BP.WF.BookAttr.WorkID">
            <summary>
            工作ID
            </summary>
        </member>
        <member name="F:BP.WF.BookAttr.FK_Node">
            <summary>
            节点
            </summary>
        </member>
        <member name="F:BP.WF.BookAttr.FK_NodeRefFunc">
            <summary>
            相关功能
            </summary>
        </member>
        <member name="F:BP.WF.BookAttr.IsReturn">
            <summary>
            是否归还
            </summary>
        </member>
        <member name="F:BP.WF.BookAttr.FlowTitle">
            <summary>
            FlowTitle
            </summary>
        </member>
        <member name="F:BP.WF.BookAttr.Admin">
            <summary>
            管理员
            </summary>
        </member>
        <member name="F:BP.WF.BookAttr.CreateTime">
            <summary>
            建立时间．
            </summary>
        </member>
        <member name="F:BP.WF.BookAttr.Returner">
            <summary>
            归还人．
            </summary>
        </member>
        <member name="F:BP.WF.BookAttr.ReturnerDept">
            <summary>
            部门
            </summary>
        </member>
        <member name="F:BP.WF.BookAttr.ReturnerZSJG">
            <summary>
            征收机关
            </summary>
        </member>
        <member name="F:BP.WF.BookAttr.ReturnTime">
            <summary>
            归还时间
            </summary>
        </member>
        <member name="F:BP.WF.BookAttr.ReturnerNote">
            <summary>
            归还人备注
            </summary>
        </member>
        <member name="T:BP.WF.Book">
            <summary>
            文书
            </summary> 
        </member>
        <member name="M:BP.WF.Book.#ctor">
            <summary>
            条目
            </summary>
        </member>
        <member name="P:BP.WF.Book.MID">
            <summary>
             MID
            </summary>
        </member>
        <member name="P:BP.WF.Book.IsReturn">
            <summary>
             是否归还
            </summary>
        </member>
        <member name="P:BP.WF.Book.WorkID">
            <summary>
             WorkID
            </summary>
        </member>
        <member name="P:BP.WF.Book.FK_Node">
            <summary>
             FK_Node
            </summary>
        </member>
        <member name="P:BP.WF.Book.FK_NodeRefFunc">
            <summary>
             文书
            </summary>
        </member>
        <member name="P:BP.WF.Book.Admin">
            <summary>
             管理
            </summary>
        </member>
        <member name="P:BP.WF.Book.FlowTitle">
            <summary>
            流程标题
            </summary>
        </member>
        <member name="P:BP.WF.Book.CreateTime">
            <summary>
            建立时间。
            </summary>
        </member>
        <member name="P:BP.WF.Book.ReturnerDept">
            <summary>
            部门。
            </summary>
        </member>
        <member name="P:BP.WF.Book.ReturnerZSJG">
            <summary>
            征收机关。
            </summary>
        </member>
        <member name="P:BP.WF.Book.Returner">
            <summary>
             Returner
            </summary>
        </member>
        <member name="P:BP.WF.Book.ReturnerNote">
            <summary>
            归还人备注
            </summary>
        </member>
        <member name="P:BP.WF.Book.ReturnTime">
            <summary>
            规划日期
            </summary>
        </member>
        <member name="P:BP.WF.Book.EnMap">
            <summary>
            EnMap
            </summary>
        </member>
        <member name="T:BP.WF.Books">
            <summary>
            条目
            </summary>
        </member>
        <member name="M:BP.WF.Books.GetBooksByEmpId(System.Int32)">
            <summary>
            根据一个员工的ID , 得到他能够考核的项目.
            </summary>
            <param name="empId">员工ID</param>
            <returns></returns>
        </member>
        <member name="M:BP.WF.Books.#ctor">
            <summary>
            Books
            </summary>
        </member>
        <member name="P:BP.WF.Books.GetNewEntity">
            <summary>
            GetNewEntity
            </summary>
        </member>
        <member name="T:BP.WF.BookExtAttr">
            <summary>
            文书属性
            </summary>
        </member>
        <member name="F:BP.WF.BookExtAttr.WorkID">
            <summary>
            工作ID
            </summary>
        </member>
        <member name="F:BP.WF.BookExtAttr.FK_Node">
            <summary>
            节点
            </summary>
        </member>
        <member name="F:BP.WF.BookExtAttr.FK_NodeRefFunc">
            <summary>
            相关功能
            </summary>
        </member>
        <member name="F:BP.WF.BookExtAttr.IsReturn">
            <summary>
            是否归还
            </summary>
        </member>
        <member name="F:BP.WF.BookExtAttr.FlowTitle">
            <summary>
            FlowTitle
            </summary>
        </member>
        <member name="F:BP.WF.BookExtAttr.Admin">
            <summary>
            管理员
            </summary>
        </member>
        <member name="F:BP.WF.BookExtAttr.CreateTime">
            <summary>
            建立时间．
            </summary>
        </member>
        <member name="F:BP.WF.BookExtAttr.Returner">
            <summary>
            归还人．
            </summary>
        </member>
        <member name="F:BP.WF.BookExtAttr.ReturnTime">
            <summary>
            归还时间
            </summary>
        </member>
        <member name="F:BP.WF.BookExtAttr.ReturnerNote">
            <summary>
            归还人备注
            </summary>
        </member>
        <member name="T:BP.WF.BookExt">
            <summary>
            文书
            </summary> 
        </member>
        <member name="M:BP.WF.BookExt.#ctor">
            <summary>
            条目
            </summary>
        </member>
        <member name="P:BP.WF.BookExt.IsReturn">
            <summary>
             是否归还
            </summary>
        </member>
        <member name="P:BP.WF.BookExt.WorkID">
            <summary>
             WorkID
            </summary>
        </member>
        <member name="P:BP.WF.BookExt.FK_Node">
            <summary>
             FK_Node
            </summary>
        </member>
        <member name="P:BP.WF.BookExt.FK_NodeRefFunc">
            <summary>
             文书
            </summary>
        </member>
        <member name="P:BP.WF.BookExt.Admin">
            <summary>
             管理
            </summary>
        </member>
        <member name="P:BP.WF.BookExt.FlowTitle">
            <summary>
            流程标题
            </summary>
        </member>
        <member name="P:BP.WF.BookExt.CreateTime">
            <summary>
            建立时间。
            </summary>
        </member>
        <member name="P:BP.WF.BookExt.Returner">
            <summary>
             Returner
            </summary>
        </member>
        <member name="P:BP.WF.BookExt.ReturnerNote">
            <summary>
            归还人备注
            </summary>
        </member>
        <member name="P:BP.WF.BookExt.ReturnTime">
            <summary>
            规划日期
            </summary>
        </member>
        <member name="P:BP.WF.BookExt.EnMap">
            <summary>
            EnMap
            </summary>
        </member>
        <member name="T:BP.WF.BookExts">
            <summary>
            条目
            </summary>
        </member>
        <member name="M:BP.WF.BookExts.GetBookExtsByEmpId(System.Int32)">
            <summary>
            根据一个员工的ID , 得到他能够考核的项目.
            </summary>
            <param name="empId">员工ID</param>
            <returns></returns>
        </member>
        <member name="M:BP.WF.BookExts.#ctor">
            <summary>
            BookExts
            </summary>
        </member>
        <member name="P:BP.WF.BookExts.GetNewEntity">
            <summary>
            GetNewEntity
            </summary>
        </member>
        <member name="T:BP.WF.DTS.InitCHOfNode">
            <summary>
            流程实效考核
            </summary>
        </member>
        <member name="T:BP.WF.DTS.InitFlows">
            <summary>
            流程统计
            </summary>
        </member>
        <member name="M:BP.WF.DTS.InitFlows.#ctor">
            <summary>
            流程统计
            </summary>
        </member>
        <member name="M:BP.WF.DTS.InitFlows.Do">
            <summary>
            流程统计
            </summary>
        </member>
        <member name="T:BP.WF.DTS.WFBadFlag">
            <summary>
            WFBadFlag
            </summary>
        </member>
        <member name="F:BP.WF.DTS.WFBadFlag.FlowDeptBad">
            <summary>
            窜岗
            </summary>
        </member>
        <member name="F:BP.WF.DTS.WFBadFlag.FlowEmpBad">
            <summary>
            窜人
            </summary>
        </member>
        <member name="T:BP.WF.DTS.WFDTS">
            <summary>
            流程调度
            </summary>
        </member>
        <member name="M:BP.WF.DTS.WFDTS.InitCHOfNode">
            <summary>
            调度考核
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.DTS.WFDTS.InitCHOfFlow_del">
            <summary>
            生成考核信息。
            建议一个月执行一次。
            </summary>
            <returns>返回执行的内容。</returns>
        </member>
        <member name="M:BP.WF.DTS.WFDTS.ClearInvalidWF">
            <summary>
            两个方面：
            1，如果原始表里删除了，产生工作者列表里要删除。工作者集合里要删除。		 
            2，如果原始表里开始节点里有没有完成的工作，
            但是在产生的流程里没有他们。就把原始记录删除。
            </summary>
        </member>
        <member name="M:BP.WF.DTS.WFDTS.DTSPCWork">
            <summary>
            获取外部属性
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.DTS.WFDTS.TransferAutoGenerWorkFlow(System.String)">
            <summary>
            TransferAutoGenerWorkFlow
            </summary>
            <param name="flowNo">TransferAutoGenerWorkFlow</param>
            <returns></returns>
        </member>
        <member name="M:BP.WF.DTS.WFDTS.TransferAutoGenerWorkFlow(BP.WF.Flow)">
            <summary>
            TransferAutoGenerWorkFlow
            </summary>
            <param name="fl"></param>
            <returns></returns>
        </member>
        <member name="M:BP.WF.DTS.WFDTS.TransferAutoGenerWorkFlowAll">
            <summary>
            调用自动产生工作流程
            </summary>
        </member>
        <member name="M:BP.WF.DTS.WFDTS.#ctor">
            <summary>
            StandardCheckss
            </summary>
        </member>
        <member name="T:BP.WF.ConditionAttr">
            <summary>
            条件属性
            </summary>
        </member>
        <member name="F:BP.WF.ConditionAttr.EnClassName">
            <summary>
            实体类名称
            </summary>
        </member>
        <member name="F:BP.WF.ConditionAttr.AttrKey">
            <summary>
            属性Key
            </summary>
        </member>
        <member name="F:BP.WF.ConditionAttr.FK_Operator">
            <summary>
            运算符号
            </summary>
        </member>
        <member name="F:BP.WF.ConditionAttr.OperatorValue">
            <summary>
            运算的值
            </summary>
        </member>
        <member name="F:BP.WF.ConditionAttr.OperatorPK">
            <summary>
            PK
            </summary>
        </member>
        <member name="T:BP.WF.Condition">
            <summary>
            条件基类
            </summary>
        </member>
        <member name="M:BP.WF.Condition.beforeUpdateInsertAction">
            <summary>
            在更新与插入之前要做得操作。
            </summary>
            <returns></returns>
        </member>
        <member name="F:BP.WF.Condition._HisWork">
            <summary>
            _HisWork
            </summary>
        </member>
        <member name="F:BP.WF.Condition.OperatorPK">
            <summary>
            实体的PK
            </summary>
        </member>
        <member name="M:BP.WF.Condition.#ctor">
            <summary>
            条件基类
            </summary>
        </member>
        <member name="P:BP.WF.Condition.ConditionDesc">
            <summary>
            条件描述,描述成立的条件。
            </summary>
        </member>
        <member name="P:BP.WF.Condition.EnClassName">
            <summary>
            实体
            </summary>
        </member>
        <member name="P:BP.WF.Condition.HisWorks">
            <summary>
            他的工作集合
            </summary>
        </member>
        <member name="P:BP.WF.Condition.HisWork">
            <summary>
            HisWork
            </summary>
        </member>
        <member name="P:BP.WF.Condition.AttrKey">
            <summary>
            要运算的实体属性
            </summary>
        </member>
        <member name="P:BP.WF.Condition.FK_Operator">
            <summary>
            运算符号
            </summary>
        </member>
        <member name="P:BP.WF.Condition.OperatorValue">
            <summary>
            运算值
            </summary>
        </member>
        <member name="P:BP.WF.Condition.IsPassed">
            <summary>
            这个条件能不能通过
            </summary>
        </member>
        <member name="T:BP.WF.Conditions">
            <summary>
            条件基类s
            </summary>
        </member>
        <member name="M:BP.WF.Conditions.#ctor">
            <summary>
            条件基类
            </summary>
        </member>
        <member name="P:BP.WF.Conditions.IsAllPassed">
            <summary>
            在这里面的所有条件是不是都符合.
            </summary>
        </member>
        <member name="P:BP.WF.Conditions.IsOneOfConditionPassed">
            <summary>
            是不是其中的一个passed. 
            </summary>
        </member>
        <member name="P:BP.WF.Conditions.GetOneOfConditionPassed">
            <summary>
            取出其中一个的完成条件。. 
            </summary>
        </member>
        <member name="T:BP.WF.ConditionNodeAttr">
            <summary>
            节点完成任务的条件
            </summary>
        </member>
        <member name="F:BP.WF.ConditionNodeAttr.NodeID">
            <summary>
            节点
            </summary>
        </member>
        <member name="T:BP.WF.ConditionNode">
            <summary>
            有节点的 节点完成任务条件
            </summary>
        </member>
        <member name="M:BP.WF.ConditionNode.#ctor">
            <summary>
            节点完成任务条件
            </summary>
        </member>
        <member name="P:BP.WF.ConditionNode.NodeID">
            <summary>
            节点的ID
            </summary>
        </member>
        <member name="P:BP.WF.ConditionNode.HisNode">
            <summary>
            他的节点
            </summary>
        </member>
        <member name="P:BP.WF.ConditionNode.PhysicsTable">
            <summary>
            指定表
            </summary>
        </member>
        <member name="P:BP.WF.ConditionNode.Desc">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:BP.WF.ConditionNode.EnMap">
            <summary>
            属性
            </summary>
        </member>
        <member name="T:BP.WF.ConditionsNode">
            <summary>
            节点完成任务条件s
            一般来说他只有一个条件.
            条件与条件之间是 or  关系.
            如果有多个条件,满足,任意一个条件就通过.
            </summary>
        </member>
        <member name="F:BP.WF.ConditionsNode.NodeId">
            <summary>
            nodeid
            </summary>
        </member>
        <member name="M:BP.WF.ConditionsNode.#ctor">
            <summary>
            节点完成任务条件
            </summary>
        </member>
        <member name="M:BP.WF.ConditionsNode.#ctor(System.Int32)">
            <summary>
            节点完成任务条件集合
            </summary>
            <param name="nodeID">从节点</param>		
        </member>
        <member name="T:BP.WF.DirectionConditionAttr">
            <summary>
            条件属性
            </summary>
        </member>
        <member name="F:BP.WF.DirectionConditionAttr.NodeID">
            <summary>
            节点
            </summary>
        </member>
        <member name="F:BP.WF.DirectionConditionAttr.ToNodeID">
            <summary>
            要转到的节点
            </summary>
        </member>
        <member name="F:BP.WF.DirectionConditionAttr.Groupkey">
            <summary>
            组Key
            </summary>
        </member>
        <member name="T:BP.WF.DirectionCondition">
            <summary>
            节点方向条件
            </summary>
        </member>
        <member name="M:BP.WF.DirectionCondition.beforeUpdateInsertAction">
            <summary>
            在更新与插入之前要做得操作。
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.DirectionCondition.#ctor">
            <summary>
            节点方向条件
            </summary>
        </member>
        <member name="M:BP.WF.DirectionCondition.#ctor(System.Int32,System.Int32)">
            <summary>
            节点方向条件
            </summary>
            <param name="nodeID">节点信息</param>
            <param name="toNodeID">要转向的节点</param>		 
        </member>
        <member name="P:BP.WF.DirectionCondition.NodeID">
            <summary>
            节点信息
            </summary>
        </member>
        <member name="P:BP.WF.DirectionCondition.ToNodeID">
            <summary>
            要转向的节点
            </summary>
        </member>
        <member name="P:BP.WF.DirectionCondition.EnMap">
            <summary>
            属性
            </summary>
        </member>
        <member name="T:BP.WF.DirectionConditions">
            <summary>
            节点方向条件s
            </summary>
        </member>
        <member name="M:BP.WF.DirectionConditions.#ctor">
            <summary>
            节点方向条件
            </summary>
        </member>
        <member name="M:BP.WF.DirectionConditions.#ctor(System.Int32,System.Int32,System.Object)">
            <summary>
            节点方向条件
            </summary>
            <param name="fromNode">从节点</param>
            <param name="toNode">到节点</param>
            <param name="operatorPK">操作的PK</param>
        </member>
        <member name="P:BP.WF.DirectionConditions.GetNewEntity">
            <summary>
            得到它的 Entity 
            </summary>
        </member>
        <member name="T:BP.WF.FlowCompleteConditionAttr">
            <summary>
            流程完成流程的条件
            </summary>
        </member>
        <member name="F:BP.WF.FlowCompleteConditionAttr.NodeID">
            <summary>
            节点
            </summary>
        </member>
        <member name="T:BP.WF.FlowCompleteCondition">
            <summary>
            有节点的 节点完成任务条件
            </summary>
        </member>
        <member name="M:BP.WF.FlowCompleteCondition.#ctor">
            <summary>
            节点完成任务条件
            </summary>
        </member>
        <member name="P:BP.WF.FlowCompleteCondition.Desc">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:BP.WF.FlowCompleteCondition.PhysicsTable">
            <summary>
            物理表
            </summary>
        </member>
        <member name="T:BP.WF.FlowCompleteConditions">
            <summary>
            流程完成流程的条件
            </summary>
            <summary>
            节点完成流程条件s
            一般来说他只有一个条件.
            条件与条件之间是 or  关系.
            如果有多个条件,满足,任意一个条件就通过.
            </summary>
        </member>
        <member name="M:BP.WF.FlowCompleteConditions.#ctor">
            <summary>
            节点完成流程条件
            </summary>
        </member>
        <member name="M:BP.WF.FlowCompleteConditions.#ctor(System.Int32)">
            <summary>
            节点完成流程条件集合
            </summary>
            <param name="nodeID">从节点</param>	
        </member>
        <member name="P:BP.WF.FlowCompleteConditions.GetNewEntity">
            <summary>
            得到它的 Entity 
            </summary>
        </member>
        <member name="T:BP.WF.GlobalCompleteConditionAttr">
            <summary>
            节点完成任务的条件
            </summary>
        </member>
        <member name="F:BP.WF.GlobalCompleteConditionAttr.FK_Flow">
            <summary>
            流程No
            </summary>
        </member>
        <member name="T:BP.WF.GlobalCompleteCondition">
            <summary>
            有节点的 节点完成任务条件
            </summary>
        </member>
        <member name="F:BP.WF.GlobalCompleteCondition._HisFlow">
            <summary>
            工作流程
            </summary>
        </member>
        <member name="M:BP.WF.GlobalCompleteCondition.#ctor">
            <summary>
            全局工作流程完成工作的条件
            </summary>
        </member>
        <member name="P:BP.WF.GlobalCompleteCondition.FK_Flow">
            <summary>
            gongu
            </summary>
        </member>
        <member name="P:BP.WF.GlobalCompleteCondition.HisFlow">
            <summary>
            工作流程
            </summary>
        </member>
        <member name="P:BP.WF.GlobalCompleteCondition.EnMap">
            <summary>
            属性
            </summary>
        </member>
        <member name="T:BP.WF.GlobalCompleteConditions">
            <summary>
            全局工作流程完成工作的条件s
            一般来说他只有一个条件.
            条件与条件之间是 or  关系.
            如果有多个条件,满足,任意一个条件就通过.
            </summary>
        </member>
        <member name="M:BP.WF.GlobalCompleteConditions.#ctor">
            <summary>
            全局工作流程完成工作的条件
            </summary>
        </member>
        <member name="M:BP.WF.GlobalCompleteConditions.#ctor(System.String,System.Int32)">
            <summary>
            全局工作流程完成工作的条件集合
            </summary>
            <param name="flowNo">flowNo</param>
            <param name="workFolwID">workFolwID</param>
        </member>
        <member name="P:BP.WF.GlobalCompleteConditions.GetNewEntity">
            <summary>
            得到它的 Entity 
            </summary>
        </member>
        <member name="T:BP.WF.NodeCompleteConditionAttr">
            <summary>
            节点完成任务的条件
            </summary>
        </member>
        <member name="F:BP.WF.NodeCompleteConditionAttr.NodeID">
            <summary>
            节点
            </summary>
        </member>
        <member name="T:BP.WF.NodeCompleteCondition">
            <summary>
            有节点的 节点完成任务条件
            </summary>
        </member>
        <member name="M:BP.WF.NodeCompleteCondition.#ctor">
            <summary>
            节点完成任务条件
            </summary>
        </member>
        <member name="P:BP.WF.NodeCompleteCondition.Desc">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:BP.WF.NodeCompleteCondition.PhysicsTable">
            <summary>
            物理表
            </summary>
        </member>
        <member name="T:BP.WF.NodeCompleteConditions">
            <summary>
            节点完成任务条件s
            一般来说他只有一个条件.
            条件与条件之间是 or  关系.
            如果有多个条件,满足,任意一个条件就通过.
            </summary>
        </member>
        <member name="M:BP.WF.NodeCompleteConditions.#ctor">
            <summary>
            节点完成任务条件
            </summary>
        </member>
        <member name="M:BP.WF.NodeCompleteConditions.#ctor(System.Int32)">
            <summary>
            节点完成任务条件集合
            </summary>
            <param name="nodeID">从节点</param>		
        </member>
        <member name="P:BP.WF.NodeCompleteConditions.GetNewEntity">
            <summary>
            得到它的 Entity 
            </summary>
        </member>
        <member name="T:BP.WF.DirectionAttr">
            <summary>
            节点方向属性	  
            </summary>
        </member>
        <member name="F:BP.WF.DirectionAttr.Node">
            <summary>
            节点
            </summary>
        </member>
        <member name="F:BP.WF.DirectionAttr.ToNode">
            <summary>
            转向的节点
            </summary>
        </member>
        <member name="T:BP.WF.Direction">
            <summary>
            节点方向
            节点的方向有两部分组成.
            1, Node.
            2, toNode.
            记录了从一个节点到其他的多个节点.
            也记录了到这个节点的其他的节点.
            </summary>
        </member>
        <member name="M:BP.WF.Direction.#ctor">
            <summary>
            节点方向
            </summary>
        </member>
        <member name="P:BP.WF.Direction.Node">
             <summary>
            节点
             </summary>
        </member>
        <member name="P:BP.WF.Direction.ToNode">
            <summary>
            转向的节点
            </summary>
        </member>
        <member name="P:BP.WF.Direction.EnMap">
            <summary>
            重写基类方法
            </summary>
        </member>
        <member name="T:BP.WF.Directions">
            <summary>
            节点方向
            </summary>
        </member>
        <member name="M:BP.WF.Directions.#ctor">
            <summary>
            节点方向
            </summary>
        </member>
        <member name="M:BP.WF.Directions.#ctor(System.Int32)">
            <summary>
            节点方向
            </summary>
            <param name="NodeID">节点ID</param>
        </member>
        <member name="M:BP.WF.Directions.GetHisToNodes(System.Int32,System.Boolean)">
            <summary>
            此节点的转向方向集合
            </summary>
            <param name="nodeID">此节点的ID</param>
            <param name="isLifecyle">是不是判断在节点的生存期内</param>		 
            <returns>转向方向集合(ToNodes)</returns> 
        </member>
        <member name="M:BP.WF.Directions.GetHisFromNodes(System.Int32)">
            <summary>
            转向此节点的集合的Nodes
            </summary>
            <param name="nodeID">此节点的ID</param>
            <returns>转向此节点的集合的Nodes (FromNodes)</returns> 
        </member>
        <member name="P:BP.WF.Directions.GetNewEntity">
            <summary>
            得到它的 Entity 
            </summary>
        </member>
        <member name="T:BP.WF.WFState">
            <summary>
            流程状态
            </summary>
        </member>
        <member name="F:BP.WF.WFState.Runing">
            <summary>
            运行状态
            </summary>
        </member>
        <member name="F:BP.WF.WFState.Complete">
            <summary>
            完成状态
            </summary>
        </member>
        <member name="F:BP.WF.WFState.Stop">
            <summary>
            强制终止
            </summary>
        </member>
        <member name="F:BP.WF.WFState.Delete">
            <summary>
            删除
            </summary>
        </member>
        <member name="T:BP.WF.FlowAttr">
            <summary>
            流程属性
            </summary>
        </member>
        <member name="F:BP.WF.FlowAttr.FK_FlowSort">
            <summary>
            流程类别
            </summary>
        </member>
        <member name="F:BP.WF.FlowAttr.CreateDate">
            <summary>
            建立的日期。
            </summary>
        </member>
        <member name="F:BP.WF.FlowAttr.Creater">
            <summary>
            建立人
            </summary>
        </member>
        <member name="F:BP.WF.FlowAttr.FlowType">
            <summary>
            流程类型
            </summary>
        </member>
        <member name="F:BP.WF.FlowAttr.StartNodeType">
            <summary>
            开始工作节点类型
            </summary>
        </member>
        <member name="F:BP.WF.FlowAttr.IsCanNumCheck">
            <summary>
            能不能流程Num考核。
            </summary>
        </member>
        <member name="F:BP.WF.FlowAttr.LifeCycleFrom">
            <summary>
            生命周期从
            </summary>
        </member>
        <member name="F:BP.WF.FlowAttr.LifeCycleTo">
            <summary>
            生命周期到
            </summary>
        </member>
        <member name="T:BP.WF.Flow">
            <summary>
            流程
            记录了流程的信息．
            流程的编号，名称，建立时间．
            </summary>
        </member>
        <member name="F:BP.WF.Flow._HisNodes">
            <summary>
            节点
            </summary>
        </member>
        <member name="M:BP.WF.Flow.#ctor">
            <summary>
            流程
            </summary>
        </member>
        <member name="M:BP.WF.Flow.#ctor(System.String)">
            <summary>
            流程
            </summary>
            <param name="_No">编号</param>
        </member>
        <member name="M:BP.WF.Flow.GetNodesWithOutStandardCheck_del">
            <summary>
            取出不包含标准审核的节点.
            </summary>
            <returns></returns>
        </member>
        <member name="P:BP.WF.Flow.LifeCycleFrom">
            <summary>
            生命周期到
            </summary>
        </member>
        <member name="P:BP.WF.Flow.LifeCycleTo">
            <summary>
            生命周期从
            </summary>
        </member>
        <member name="P:BP.WF.Flow.IsCanNumCheck">
            <summary>
            是不是能够流程数量考核
            对于能够通过主体软件知道一个流程使用个数的流程都是能进行流程使用率考核的流程。
            </summary>
        </member>
        <member name="P:BP.WF.Flow.FK_FlowSort">
            <summary>
            流程类别
            </summary>
        </member>
        <member name="P:BP.WF.Flow.FlowType">
            <summary>
            流程类型(大的类型)
            </summary>
        </member>
        <member name="P:BP.WF.Flow.IsAutoWorkFlow">
            <summary>
            是否自动流程
            </summary>
        </member>
        <member name="P:BP.WF.Flow.IsMutiLineWorkFlow">
            <summary>
            是否多线程自动流程
            </summary>
        </member>
        <member name="P:BP.WF.Flow.IsInLifeCycle">
            <summary>
            是不是在生存期内.
            </summary>
        </member>
        <member name="P:BP.WF.Flow.IsTaxpayerFlow">
            <summary>
            是不是纳税人工作流程
            </summary>
        </member>
        <member name="P:BP.WF.Flow.IsPCFlow">
            <summary>
            是不是一条自动运行的工作流程.
            </summary>
        </member>
        <member name="P:BP.WF.Flow.HisNodes">
            <summary>
            他的节点集合.
            </summary>
        </member>
        <member name="P:BP.WF.Flow.HisStartNode">
            <summary>
            他的 Start 节点
            </summary>
        </member>
        <member name="P:BP.WF.Flow.HisEndNodes_del">
            <summary>
            他的 end 节点
            可能有很多的结束节点.
            </summary>
        </member>
        <member name="P:BP.WF.Flow.HisFlowSort">
            <summary>
            他的事务类别
            </summary>
        </member>
        <member name="P:BP.WF.Flow.EnMap">
            <summary>
            重写基类方法
            </summary>
        </member>
        <member name="T:BP.WF.Flows">
            <summary>
            流程集合
            </summary>
        </member>
        <member name="M:BP.WF.Flows.RetrieveIsAutoWorkFlow">
            <summary>
            查出来全部的自动流程
            </summary>
        </member>
        <member name="M:BP.WF.Flows.Retrieve(System.String,System.Boolean)">
            <summary>
            查询出来全部的在生存期间内的流程
            </summary>
            <param name="flowSort">流程类别</param>
            <param name="IsCountInLifeCycle">是不是计算在生存期间内 true 查询出来全部的 </param>
        </member>
        <member name="M:BP.WF.Flows.#ctor">
            <summary>
            工作流程
            </summary>
        </member>
        <member name="M:BP.WF.Flows.#ctor(System.String,System.Boolean)">
            <summary>
            查询出来全部的在生存期间内的流程
            </summary>
            <param name="flowSort">流程类别</param>
            <param name="IsCountInLifeCycle">是不是计算在生存期间内</param>
        </member>
        <member name="P:BP.WF.Flows.GetNewEntity">
            <summary>
            得到它的 Entity 
            </summary>
        </member>
        <member name="T:BP.WF.FlowSort">
            <summary>
             的摘要说明。
            </summary>
        </member>
        <member name="M:BP.WF.FlowSort.#ctor">
            <summary>
            流程类别
            </summary>
        </member>
        <member name="M:BP.WF.FlowSort.#ctor(System.String)">
            <summary>
            流程类别
            </summary>
            <param name="_No"></param>
        </member>
        <member name="P:BP.WF.FlowSort.EnMap">
            <summary>
            流程类别Map
            </summary>
        </member>
        <member name="T:BP.WF.FlowSorts">
            <summary>
            纳税人集合
            </summary>
        </member>
        <member name="M:BP.WF.FlowSorts.#ctor">
            <summary>
            流程类别s
            </summary>
        </member>
        <member name="M:BP.WF.FlowSorts.AddByNoName(System.String,System.String)">
            <summary>
            流程类别s
            </summary>
            <param name="no">ss</param>
            <param name="name">anme</param>
        </member>
        <member name="P:BP.WF.FlowSorts.GetNewEntity">
            <summary>
            得到它的 Entity 
            </summary>
        </member>
        <member name="F:BP.WF.DoWhere.None">
            <summary>
            不处理
            </summary>
        </member>
        <member name="F:BP.WF.DoWhere.AppCenterDSN">
            <summary>
            主应用程序
            </summary>
        </member>
        <member name="F:BP.WF.DoWhere.DBAccessOfOracle9i">
            <summary>
            DBAccessOfOracle9i
            </summary>
        </member>
        <member name="F:BP.WF.DoWhere.DBAccessOfMSSQL2000">
            <summary>
            DBAccessOfMSSQL2000
            </summary>
        </member>
        <member name="F:BP.WF.DoWhere.DBAccessOfOLE">
            <summary>
            DBAccessOfOLE
            </summary>
        </member>
        <member name="F:BP.WF.DoWhere.DBAccessOfODBC">
            <summary>
            DBAccessOfODBC
            </summary>
        </member>
        <member name="T:BP.WF.NodeState">
            <summary>
            节点状态
            </summary>
        </member>
        <member name="F:BP.WF.NodeState.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="F:BP.WF.NodeState.Complete">
            <summary>
            已经完成
            </summary>
        </member>
        <member name="F:BP.WF.NodeState.Warning">
            <summary>
            警告状态
            </summary>
        </member>
        <member name="F:BP.WF.NodeState.CutCent">
            <summary>
            扣分状态
            </summary>
        </member>
        <member name="F:BP.WF.NodeState.Stop">
            <summary>
            强制终止
            </summary>
        </member>
        <member name="F:BP.WF.NodeState.Delete">
            <summary>
            删除
            </summary>
        </member>
        <member name="F:BP.WF.NodeState.Back">
            <summary>
            退回
            </summary>
        </member>
        <member name="T:BP.WF.NodePositionType">
            <summary>
            节点位置类型
            这个类型不需要存储,是判断出来的.
            </summary>
        </member>
        <member name="F:BP.WF.NodePositionType.StartNode">
            <summary>
            开始节点
            </summary>
        </member>
        <member name="F:BP.WF.NodePositionType.MiddleNode">
            <summary>
            中间节点
            </summary>
        </member>
        <member name="F:BP.WF.NodePositionType.EndNode">
            <summary>
            结束节点
            </summary>
        </member>
        <member name="T:BP.WF.NodeWorkType">
            <summary>
            节点工作类型
            节点工作类型( 0, 审核节点, 1 信息采集节点,  2, 开始节点)
            </summary>
        </member>
        <member name="F:BP.WF.NodeWorkType.StandardChecks">
            <summary>
            标准审核节点
            </summary>
        </member>
        <member name="F:BP.WF.NodeWorkType.NumChecks">
            <summary>
            数量审核节点
            </summary>
        </member>
        <member name="F:BP.WF.NodeWorkType.Work">
            <summary>
            工作节点
            </summary>
        </member>
        <member name="F:BP.WF.NodeWorkType.StartWork">
            <summary>
            开始节点
            </summary>
        </member>
        <member name="F:BP.WF.NodeWorkType.PCStartWork">
            <summary>
            计算机开始工作节点
            </summary>
        </member>
        <member name="F:BP.WF.NodeWorkType.PCWork">
            <summary>
            计算机工作节点
            </summary>
        </member>
        <member name="F:BP.WF.NodeWorkType.TaxpayerStartWork">
            <summary>
            纳税人开始工作节点
            </summary>
        </member>
        <member name="F:BP.WF.NodeWorkType.PCTaxpayerStartWorks">
            <summary>
            纳税人开始计算机工作节点
            </summary>
        </member>
        <member name="F:BP.WF.NodeWorkType.MultiLineStartWork">
            <summary>
            多线形开始工作节点
            </summary>
        </member>
        <member name="F:BP.WF.NodeWorkType.MultiLineWork">
            <summary>
            多线形工作节点
            </summary>
        </member>
        <member name="F:BP.WF.NodeWorkType.MultiLinePCStartWork">
            <summary>
            自动多线形开始工作节点
            </summary>
        </member>
        <member name="T:BP.WF.NodeAttr">
            <summary>
            节点属性
            </summary>
        </member>
        <member name="F:BP.WF.NodeAttr.OID">
            <summary>
            OID
            </summary>
        </member>
        <member name="F:BP.WF.NodeAttr.FK_Flow">
            <summary>
            节点的流程
            </summary>
        </member>
        <member name="F:BP.WF.NodeAttr.NodeWorkType">
            <summary>
            节点工作类型
            </summary>
        </member>
        <member name="F:BP.WF.NodeAttr.Name">
            <summary>
            节点的描述
            </summary>
        </member>
        <member name="F:BP.WF.NodeAttr.WorkClassName">
            <summary>
            节点的工作类名称
            </summary>
        </member>
        <member name="F:BP.WF.NodeAttr.X">
            <summary>
            x
            </summary>
        </member>
        <member name="F:BP.WF.NodeAttr.Y">
            <summary>
            y
            </summary>
        </member>
        <member name="F:BP.WF.NodeAttr.WarningDays">
            <summary>
            WarningDays(警告天数)
            </summary>
        </member>
        <member name="F:BP.WF.NodeAttr.DeductDays">
            <summary>
            DeductDays(扣分天数)
            </summary>
        </member>
        <member name="F:BP.WF.NodeAttr.DeductCent">
            <summary>
            DeductCent 扣分
            </summary>
        </member>
        <member name="F:BP.WF.NodeAttr.MaxDeductCent">
            <summary>
            最高扣分
            </summary>
        </member>
        <member name="F:BP.WF.NodeAttr.SwinkCent">
            <summary>
            辛苦加分
            </summary>
        </member>
        <member name="F:BP.WF.NodeAttr.MaxSwinkCent">
            <summary>
            最大的辛苦加分
            </summary>
        </member>
        <member name="F:BP.WF.NodeAttr.Step">
            <summary>
            流程步骤
            </summary>
        </member>
        <member name="F:BP.WF.NodeAttr.IsCanBack">
            <summary>
            是不是能够后退
            </summary>
        </member>
        <member name="F:BP.WF.NodeAttr.DefaultImageUrl">
            <summary>
            默认图片
            </summary>
        </member>
        <member name="F:BP.WF.NodeAttr.HoverImageUrl">
            <summary>
            悬挂图片
            </summary>
        </member>
        <member name="F:BP.WF.NodeAttr.Docs">
            <summary>
            工作内容
            </summary>
        </member>
        <member name="F:BP.WF.NodeAttr.Note">
            <summary>
            备注
            </summary>
        </member>
        <member name="F:BP.WF.NodeAttr.Sound">
            <summary>
            /sss
            </summary>
        </member>
        <member name="F:BP.WF.NodeAttr.LifeCycleFrom">
            <summary>
            生命周期从
            </summary>
        </member>
        <member name="F:BP.WF.NodeAttr.LifeCycleTo">
            <summary>
            生命周期到
            </summary>
        </member>
        <member name="F:BP.WF.NodeAttr.DoWhat">
            <summary>
            工作之后执行，执行什么？
            </summary>
        </member>
        <member name="F:BP.WF.NodeAttr.DoWhere">
            <summary>
            在那里执行
            </summary>
        </member>
        <member name="F:BP.WF.NodeAttr.RunType">
            <summary>
            运行类型sql, produces
            </summary>
        </member>
        <member name="T:BP.WF.Node">
            <summary>
            这里存放每个节点的信息.	 
            </summary>
        </member>
        <member name="M:BP.WF.Node.InitGlobalFlowBook">
            <summary>
            初始化全局的文书。
            </summary>
        </member>
        <member name="M:BP.WF.Node.InitGlobalFlowBookTable">
            <summary>
            生成文书编号．
            </summary>
        </member>
        <member name="M:BP.WF.Node.InitGlobalWorks">
            <summary>
            初始化全局的Nodes. 
            1, 搜索work 实体.
            </summary>
        </member>
        <member name="M:BP.WF.Node.GetGlobalNodesInDLL">
            <summary>
            取去出来全局的works,并更新系统的节点信息.
            1,
            </summary>
            <returns>Nodes</returns>
        </member>
        <member name="M:BP.WF.Node.ReSetNodeAttr">
            <summary>
            同步属性
            </summary>
        </member>
        <member name="M:BP.WF.Node.GetWork(System.Int32)">
            <summary>
            得到一个工作data实体
            </summary>
            <param name="workId">工作ID</param>
            <returns>如果没有就返回null</returns>
        </member>
        <member name="F:BP.WF.Node._HisToNodesOfCurrent">
            <summary>
            他的将要可以转向的节点方向集合.
            没有生命周期的概念,全部的节点..
            </summary>
        </member>
        <member name="F:BP.WF.Node._HisToNodes">
            <summary>
            他的将要可以转向的节点方向集合.
            没有生命周期的概念,全部的节点..
            </summary>
        </member>
        <member name="M:BP.WF.Node.AfterDoTask">
            <summary>
            用户执行动作之后,所要做的工作		 
            </summary>
            <returns>返回消息,运行的消息</returns>
        </member>
        <member name="M:BP.WF.Node.CheckNodeTaskIsComplate">
            <summary>
            检查这个节点上的工作是不是完成.
            </summary>
            <returns>完成与不完成</returns>
        </member>
        <member name="M:BP.WF.Node.CheckFlowIsComplate">
            <summary>
            检查整个事务是不是完成
            </summary>
            <returns>完成与不完成</returns>
        </member>
        <member name="M:BP.WF.Node.Forward">
            <summary>
            传寄(这个事务要转发给其他的人, 就是要启动其他岗位上的事务)
            </summary>
        </member>
        <member name="M:BP.WF.Node.#ctor">
            <summary>
            节点
            </summary>
        </member>
        <member name="M:BP.WF.Node.#ctor(System.Int32)">
            <summary>
            节点
            </summary>
            <param name="_oid">节点ID</param>	
        </member>
        <member name="M:BP.WF.Node.#ctor(System.String)">
            <summary>
            节点
            </summary>
            <param name="workClassName">类名称</param>
        </member>
        <member name="M:BP.WF.Node.beforeInsert">
            <summary>
            插入前所做的工作
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="M:BP.WF.Node.beforeUpdate">
            <summary>
            更新前所做的工作
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="M:BP.WF.Node.beforeDelete">
            <summary>
            删除前所做的工作
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="P:BP.WF.Node.HisNodeCompleteConditions">
            <summary>
            节点完成任务的条件
            条件与条件之间是or 的关系, 就是说,如果任何一个条件满足,这个员工在这个节电上的任务就完成了.
            </summary>
        </member>
        <member name="P:BP.WF.Node.HisFlowCompleteConditions">
            <summary>
            他的完成任务的条件,此节点是完成任务的条件集合
            条件与条件之间是or 的关系, 就是说,如果任何一个条件满足,这个任务就完成了.
            </summary>
        </member>
        <member name="P:BP.WF.Node.DoWhat">
            <summary>
            工作之后作什么?
            </summary>
        </member>
        <member name="P:BP.WF.Node.DoWhere">
            <summary>
            在那里执行MsSQLServer， 
            </summary>
        </member>
        <member name="P:BP.WF.Node.RunType">
            <summary>
            运行类型 sql, producted messide
            </summary>
        </member>
        <member name="P:BP.WF.Node.OID">
            <summary>
            OID
            </summary>
        </member>
        <member name="P:BP.WF.Node.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:BP.WF.Node.WarningDays">
            <summary>
            x警告天数
            </summary>
        </member>
        <member name="P:BP.WF.Node.DeductDays">
            <summary>
            需要天数（限期）
            </summary>
        </member>
        <member name="P:BP.WF.Node.MaxDeductCent">
            <summary>
            最高扣分
            </summary>
        </member>
        <member name="P:BP.WF.Node.MaxSwinkCent">
            <summary>
            最高辛苦加分
            </summary>
        </member>
        <member name="P:BP.WF.Node.SwinkCent">
            <summary>
            最高辛苦加分
            </summary>
        </member>
        <member name="P:BP.WF.Node.Step">
            <summary>
            流程步骤
            </summary>
        </member>
        <member name="P:BP.WF.Node.NeedCompleteDays">
            <summary>
            最终期限( 需要天数（限期）+警告天数)
            </summary>
        </member>
        <member name="P:BP.WF.Node.DeductCent">
            <summary>
            扣分率（分/天）
            </summary>
        </member>
        <member name="P:BP.WF.Node.X">
            <summary>
            x
            </summary>
        </member>
        <member name="P:BP.WF.Node.Y">
            <summary>
            y
            </summary>
        </member>
        <member name="P:BP.WF.Node.FK_Flow">
            <summary>
            节点的事务编号
            </summary>
        </member>
        <member name="P:BP.WF.Node.WorksClassName">
            <summary>
            工作类
            </summary> 
        </member>
        <member name="P:BP.WF.Node.DefaultImageUrl">
            <summary>
            默认图片
            </summary> 
        </member>
        <member name="P:BP.WF.Node.HoverImageUrl">
            <summary>
            盘旋图片
            </summary> 
        </member>
        <member name="P:BP.WF.Node.Docs">
            <summary>
            Docs
            </summary> 
        </member>
        <member name="P:BP.WF.Node.Note">
            <summary>
            Note
            </summary> 
        </member>
        <member name="P:BP.WF.Node.Sound">
            <summary>
            声音
            </summary>
        </member>
        <member name="P:BP.WF.Node.LifeCycleFrom">
            <summary>
            生命周期到
            </summary>
        </member>
        <member name="P:BP.WF.Node.LifeCycleTo">
            <summary>
            生命周期从
            </summary>
        </member>
        <member name="P:BP.WF.Node.HisNodeRefFuncs">
            <summary>
            HisNodeRefFuncs
            </summary>
        </member>
        <member name="P:BP.WF.Node.HisFlow">
            <summary>
            此节点所在的事务.
            </summary>
        </member>
        <member name="P:BP.WF.Node.IsMultiStations">
            <summary>
            是不是多岗位工作节点.
            </summary>
        </member>
        <member name="P:BP.WF.Node.HisStations">
            <summary>
            此节点所在的工作岗位
            </summary>
        </member>
        <member name="P:BP.WF.Node.HisStationsStr">
            <summary>
            HisStationsStr
            </summary>
        </member>
        <member name="P:BP.WF.Node.HisDutys">
            <summary>
            他的职务s
            </summary>
        </member>
        <member name="P:BP.WF.Node.HisDepts">
            <summary>
            他的部门
            </summary>
        </member>
        <member name="P:BP.WF.Node.HisWork">
            <summary>
            得到他的一个工作实体
            </summary>
        </member>
        <member name="P:BP.WF.Node.HisWorks">
            <summary>
            他的工作s
            </summary>
        </member>
        <member name="P:BP.WF.Node.HisWorksDesc">
            <summary>
            他的工作描述
            </summary>
        </member>
        <member name="P:BP.WF.Node.MyNodeWorkType">
            <summary>
            计算出来的属性
            </summary>
            <summary>
            计算出来的属性
            </summary>
        </member>
        <member name="P:BP.WF.Node.NodeWorkTypeOfInt">
            <summary>
            Int type
            </summary>
        </member>
        <member name="P:BP.WF.Node.NodeWorkType">
            <summary>
            返回工作节点的工作类型
            </summary>
        </member>
        <member name="P:BP.WF.Node.HisNodePositionType">
            <summary>
            他的位置节点类型
            </summary>
        </member>
        <member name="P:BP.WF.Node.IsStatrNode">
            <summary>
            是不是开始节点
            </summary>
        </member>
        <member name="P:BP.WF.Node.IsEndNode">
            <summary>
            是不是结束节点
            </summary>
        </member>
        <member name="P:BP.WF.Node.IsMiddleNode">
            <summary>
            是不是中间节点
            </summary>
        </member>
        <member name="P:BP.WF.Node.IsCheckNode">
            <summary>
            是不是审核节点
            </summary>
        </member>
        <member name="P:BP.WF.Node.IsNumWorkNode">
            <summary>
            是不是数量审核节点.
            </summary>
        </member>
        <member name="P:BP.WF.Node.IsStandardCheckNode">
            <summary>
            是不是标准审核节点
            </summary>
        </member>
        <member name="P:BP.WF.Node.IsWorkNode_del">
            <summary>
            是不是普通工作节点
            </summary>
        </member>
        <member name="P:BP.WF.Node.IsPCNode">
            <summary>
            是不是PC工作节点
            </summary>
        </member>
        <member name="P:BP.WF.Node.NodeWorkTypeText">
            <summary>
            工作性质
            </summary>
        </member>
        <member name="P:BP.WF.Node.IsInLifeCycle">
            <summary>
            是不是在生存期内.
            </summary>
        </member>
        <member name="P:BP.WF.Node.HisToNodesOfCurrent">
            <summary>
            他的将要转向的方向集合
            如果他没有到转向方向,他就是结束节点.
            有生命周期的概念,全部的节点.
            </summary>
        </member>
        <member name="P:BP.WF.Node.HisToNodes">
            <summary>
            他的将要转向的方向集合
            如果他没有到转向方向,他就是结束节点.
            没有生命周期的概念,全部的节点.
            </summary>
        </member>
        <member name="P:BP.WF.Node.HisFromNodes">
            <summary>
            他的将要来自的方向集合
            如果他没有到来的方向,他就是开始节点.
            </summary>
        </member>
        <member name="P:BP.WF.Node.HisDirectionConditions">
            <summary>
            方向条件
            条件与条件之间是 or 的关系, 就是说,如果任何一个条件满足,这个任务就完成了.
            </summary>
        </member>
        <member name="P:BP.WF.Node.EnMap">
            <summary>
            重写基类方法
            </summary>
        </member>
        <member name="T:BP.WF.Nodes">
            <summary>
            节点集合
            </summary>
        </member>
        <member name="M:BP.WF.Nodes.#ctor">
            <summary>
            节点集合
            </summary>
        </member>
        <member name="M:BP.WF.Nodes.#ctor(System.String)">
            <summary>
            根据流程编号查询出他的节点.
            </summary>
            <param name="FlowNo"></param>
        </member>
        <member name="M:BP.WF.Nodes.RetrievePCNode">
            <summary>
            查询计算机自动获取外部属性的工作节点
            </summary>
        </member>
        <member name="M:BP.WF.Nodes.RetrieveAll">
            <summary>
            RetrieveAll
            </summary>
            <returns></returns>
        </member>
        <member name="P:BP.WF.Nodes.GetNewEntity">
            <summary>
            得到它的 Entity 
            </summary>
        </member>
        <member name="T:BP.WF.NodeStationAttr">
            <summary>
            节点工作岗位属性	  
            </summary>
        </member>
        <member name="F:BP.WF.NodeStationAttr.FK_Node">
            <summary>
            节点
            </summary>
        </member>
        <member name="F:BP.WF.NodeStationAttr.FK_Station">
            <summary>
            工作岗位
            </summary>
        </member>
        <member name="T:BP.WF.NodeStation">
            <summary>
            节点工作岗位
            节点的工作岗位有两部分组成.	 
            记录了从一个节点到其他的多个节点.
            也记录了到这个节点的其他的节点.
            </summary>
        </member>
        <member name="M:BP.WF.NodeStation.#ctor">
            <summary>
            节点工作岗位
            </summary>
        </member>
        <member name="P:BP.WF.NodeStation.FK_Node">
             <summary>
            节点
             </summary>
        </member>
        <member name="P:BP.WF.NodeStation.FK_Station">
            <summary>
            工作岗位
            </summary>
        </member>
        <member name="P:BP.WF.NodeStation.EnMap">
            <summary>
            重写基类方法
            </summary>
        </member>
        <member name="T:BP.WF.NodeStations">
            <summary>
            节点工作岗位
            </summary>
        </member>
        <member name="M:BP.WF.NodeStations.#ctor">
            <summary>
            节点工作岗位
            </summary>
        </member>
        <member name="M:BP.WF.NodeStations.#ctor(System.Int32)">
            <summary>
            节点工作岗位
            </summary>
            <param name="NodeID">节点ID</param>
        </member>
        <member name="M:BP.WF.NodeStations.#ctor(System.String)">
            <summary>
            节点工作岗位
            </summary>
            <param name="StationNo">StationNo </param>
        </member>
        <member name="M:BP.WF.NodeStations.GetHisNodes(BP.Port.Stations)">
            <summary>
            取到一个工作岗位集合能够访问到的节点s
            </summary>
            <param name="sts">工作岗位集合</param>
            <returns></returns>
        </member>
        <member name="M:BP.WF.NodeStations.GetHisNodes(System.Int32)">
            <summary>
            取到一个员工能够访问到的节点。
            </summary>
            <param name="empId">员工ID</param>
            <returns></returns>
        </member>
        <member name="M:BP.WF.NodeStations.GetHisNodes(System.String)">
            <summary>
            工作岗位对应的节点
            </summary>
            <param name="stationNo">工作岗位编号</param>
            <returns>节点s</returns>
        </member>
        <member name="M:BP.WF.NodeStations.GetHisStations(System.Int32)">
            <summary>
            转向此节点的集合的Nodes
            </summary>
            <param name="nodeID">此节点的ID</param>
            <returns>转向此节点的集合的Nodes (FromNodes)</returns> 
        </member>
        <member name="P:BP.WF.NodeStations.HisStations">
            <summary>
            他的工作岗位
            </summary>
        </member>
        <member name="P:BP.WF.NodeStations.HisNodes">
            <summary>
            他的工作节点
            </summary>
        </member>
        <member name="P:BP.WF.NodeStations.GetNewEntity">
            <summary>
            得到它的 Entity 
            </summary>
        </member>
        <member name="T:BP.WF.WatchdogAttr">
            <summary>
            工作记录属性
            </summary>
        </member>
        <member name="F:BP.WF.WatchdogAttr.WorkID">
            <summary>
            工作ID
            </summary>
        </member>
        <member name="F:BP.WF.WatchdogAttr.NodeId">
            <summary>
            节点ID
            </summary>
        </member>
        <member name="F:BP.WF.WatchdogAttr.NodeState">
            <summary>
            节点状态
            </summary>
        </member>
        <member name="F:BP.WF.WatchdogAttr.Workers">
            <summary>
            工作者（做这个工作使用的工作者集合）
            </summary>
        </member>
        <member name="F:BP.WF.WatchdogAttr.FK_Dept">
            <summary>
            工作部门（做这个工作使用的工作部门）
            </summary>
        </member>
        <member name="F:BP.WF.WatchdogAttr.FK_Station">
            <summary>
            工作岗位（做这个工作使用的工作岗位）
            </summary>
        </member>
        <member name="F:BP.WF.WatchdogAttr.InitDateTime">
            <summary>
            初始化时间（工作启动时间，或者任务分配时间）
            </summary>
        </member>
        <member name="F:BP.WF.WatchdogAttr.ComplateDatetime">
            <summary>
            完成时间
            </summary>
        </member>
        <member name="F:BP.WF.WatchdogAttr.DoEmp">
            <summary>
            执行人(如果当前的工作没有完成，执行人为空。）
            </summary>
        </member>
        <member name="T:BP.WF.Watchdog">
            <summary>
             工作记录。
            </summary>
        </member>
        <member name="M:BP.WF.Watchdog.#ctor">
            <summary>
            流程类别
            </summary>
        </member>
        <member name="P:BP.WF.Watchdog.WorkID">
            <summary>
            工作ID
            </summary>
        </member>
        <member name="P:BP.WF.Watchdog.NodeId">
            <summary>
            节点ID
            </summary>
        </member>
        <member name="P:BP.WF.Watchdog.NodeState">
            <summary>
            节点状态
            </summary>
        </member>
        <member name="P:BP.WF.Watchdog.Workers">
            <summary>
            工作者
            </summary>
        </member>
        <member name="P:BP.WF.Watchdog.FK_Dept">
            <summary>
            工作者部门
            </summary>
        </member>
        <member name="P:BP.WF.Watchdog.FK_Station">
            <summary>
            工作者 使用的岗位
            </summary>
        </member>
        <member name="P:BP.WF.Watchdog.InitDateTime">
            <summary>
            时间
            </summary>
        </member>
        <member name="P:BP.WF.Watchdog.ComplateDatetime">
            <summary>
            时间
            </summary>
        </member>
        <member name="P:BP.WF.Watchdog.DoEmp">
            <summary>
            时间
            </summary>
        </member>
        <member name="P:BP.WF.Watchdog.EnMap">
            <summary>
            流程类别Map
            </summary>
        </member>
        <member name="T:BP.WF.Watchdogs">
            <summary>
            工作记录
            </summary>
        </member>
        <member name="M:BP.WF.Watchdogs.#ctor">
            <summary>
            工作记录s
            </summary>
        </member>
        <member name="P:BP.WF.Watchdogs.GetNewEntity">
            <summary>
            工作记录 Entity 
            </summary>
        </member>
        <member name="T:BP.WF.BadWFAttr">
            <summary>
            错误流程
            </summary>
        </member>
        <member name="F:BP.WF.BadWFAttr.WorkId">
            <summary>
            工作ID
            </summary>
        </member>
        <member name="F:BP.WF.BadWFAttr.FK_Flow">
            <summary>
            FK_Flow
            </summary>
        </member>
        <member name="F:BP.WF.BadWFAttr.BadFlag">
            <summary>
            错误标记
            </summary>
        </member>
        <member name="F:BP.WF.BadWFAttr.Note">
            <summary>
            备注
            </summary>
        </member>
        <member name="T:BP.WF.BadWF">
            <summary>
            错误流程
            </summary>
        </member>
        <member name="M:BP.WF.BadWF.#ctor">
            <summary>
            错误流程
            </summary>
        </member>
        <member name="M:BP.WF.BadWF.#ctor(System.Int32,System.String)">
            <summary>
            错误流程
            </summary>
            <param name="workid">workid</param>
            <param name="flowNo">flowNo</param>
        </member>
        <member name="P:BP.WF.BadWF.Note">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:BP.WF.BadWF.BadFlag">
            <summary>
            错误标记
            </summary>
        </member>
        <member name="P:BP.WF.BadWF.FK_Flow">
            <summary>
            工作流程
            </summary>
        </member>
        <member name="P:BP.WF.BadWF.WorkId">
            <summary>
            工作ID
            </summary>
        </member>
        <member name="P:BP.WF.BadWF.EnMap">
            <summary>
            重写基类方法
            </summary>
        </member>
        <member name="T:BP.WF.BadWFs">
            <summary>
            错误流程s 
            </summary>
        </member>
        <member name="M:BP.WF.BadWFs.#ctor">
            <summary>
            错误流程s 
            </summary>
        </member>
        <member name="P:BP.WF.BadWFs.GetNewEntity">
            <summary>
            得到它的 Entity
            </summary>
        </member>
        <member name="T:BP.WF.BadWorkFlowAttr">
            <summary>
            错误流程
            </summary>
        </member>
        <member name="F:BP.WF.BadWorkFlowAttr.WorkID">
            <summary>
            地税编号
            </summary>
        </member>
        <member name="F:BP.WF.BadWorkFlowAttr.FK_Flow">
            <summary>
            工作流
            </summary>
        </member>
        <member name="F:BP.WF.BadWorkFlowAttr.PRI">
            <summary>
            PRI
            </summary>
        </member>
        <member name="F:BP.WF.BadWorkFlowAttr.WFState">
            <summary>
            流程状态
            </summary>
        </member>
        <member name="F:BP.WF.BadWorkFlowAttr.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="F:BP.WF.BadWorkFlowAttr.FK_Dept">
            <summary>
            部门
            </summary>
        </member>
        <member name="F:BP.WF.BadWorkFlowAttr.Recorder">
            <summary>
            记录人
            </summary>
        </member>
        <member name="F:BP.WF.BadWorkFlowAttr.RecordDateTime">
            <summary>
            产生时间
            </summary>
        </member>
        <member name="F:BP.WF.BadWorkFlowAttr.CompleteDateTime">
            <summary>
            完成时间
            </summary>
        </member>
        <member name="F:BP.WF.BadWorkFlowAttr.Cent">
            <summary>
            得分
            </summary>
        </member>
        <member name="F:BP.WF.BadWorkFlowAttr.FlowNote">
            <summary>
            note
            </summary>
        </member>
        <member name="F:BP.WF.BadWorkFlowAttr.FK_CurrentNode">
            <summary>
            当前工作到的节点.
            </summary>
        </member>
        <member name="T:BP.WF.BadWorkFlow">
            <summary>
            错误流程
            </summary>
        </member>
        <member name="M:BP.WF.BadWorkFlow.#ctor">
            <summary>
            错误流程流程
            </summary>
        </member>
        <member name="M:BP.WF.BadWorkFlow.#ctor(System.Int32)">
            <summary>
            错误流程流程
            </summary>
            <param name="workId"></param>
        </member>
        <member name="M:BP.WF.BadWorkFlow.beforeInsert">
            <summary>
            ss
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.BadWorkFlow.beforeUpdate">
            <summary>
            ss
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.BadWorkFlow.beforeDelete">
            <summary>
            ss
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.BadWorkFlow.afterDelete">
            <summary>
            df
            </summary>
        </member>
        <member name="P:BP.WF.BadWorkFlow.FK_Flow">
            <summary>
            工作流程编号
            </summary>
        </member>
        <member name="P:BP.WF.BadWorkFlow.FK_Dept">
            <summary>
            部门
            </summary>
        </member>
        <member name="P:BP.WF.BadWorkFlow.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:BP.WF.BadWorkFlow.RecordDateTime">
            <summary>
            产生时间
            </summary>
        </member>
        <member name="P:BP.WF.BadWorkFlow.FlowNote">
            <summary>
            流程备注
            </summary>
        </member>
        <member name="P:BP.WF.BadWorkFlow.WorkID">
            <summary>
            流程ID
            </summary>
        </member>
        <member name="P:BP.WF.BadWorkFlow.PRI">
            <summary>
            级别
            </summary>
        </member>
        <member name="P:BP.WF.BadWorkFlow.FK_CurrentNode">
            <summary>
            当前工作到的节点
            </summary>
        </member>
        <member name="P:BP.WF.BadWorkFlow.WFState">
            <summary>
            工作流程状态( 0, 未完成,1 完成, 2 强制终止 3, 删除状态,) 
            </summary>
        </member>
        <member name="P:BP.WF.BadWorkFlow.EnMap">
            <summary>
            重写基类方法
            </summary>
        </member>
        <member name="T:BP.WF.BadWorkFlows">
            <summary>
            错误流程s
            </summary>
        </member>
        <member name="M:BP.WF.BadWorkFlows.QuByFlowAndEmp(System.String,System.Int32)">
            <summary>
            根据工作流程,员工ID 查询出来他当前的能做的工作.
            </summary>
            <param name="flowNo">流程编号</param>
            <param name="empId">员工ID</param>
            <returns></returns>
        </member>
        <member name="M:BP.WF.BadWorkFlows.#ctor">
            <summary>
            产生工作流程集合
            </summary>
        </member>
        <member name="P:BP.WF.BadWorkFlows.GetNewEntity">
            <summary>
            得到它的 Entity 
            </summary>
        </member>
        <member name="T:BP.WF.GenerWorkFlowAttr">
            <summary>
            产生的工作
            </summary>
        </member>
        <member name="F:BP.WF.GenerWorkFlowAttr.WorkID">
            <summary>
            地税编号
            </summary>
        </member>
        <member name="F:BP.WF.GenerWorkFlowAttr.FK_Flow">
            <summary>
            工作流
            </summary>
        </member>
        <member name="F:BP.WF.GenerWorkFlowAttr.PRI">
            <summary>
            PRI
            </summary>
        </member>
        <member name="F:BP.WF.GenerWorkFlowAttr.WFState">
            <summary>
            流程状态
            </summary>
        </member>
        <member name="F:BP.WF.GenerWorkFlowAttr.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="F:BP.WF.GenerWorkFlowAttr.FK_Dept">
            <summary>
            部门
            </summary>
        </member>
        <member name="F:BP.WF.GenerWorkFlowAttr.Recorder">
            <summary>
            记录人
            </summary>
        </member>
        <member name="F:BP.WF.GenerWorkFlowAttr.RecordDateTime">
            <summary>
            产生时间
            </summary>
        </member>
        <member name="F:BP.WF.GenerWorkFlowAttr.CompleteDateTime">
            <summary>
            完成时间
            </summary>
        </member>
        <member name="F:BP.WF.GenerWorkFlowAttr.Cent">
            <summary>
            得分
            </summary>
        </member>
        <member name="F:BP.WF.GenerWorkFlowAttr.FlowNote">
            <summary>
            note
            </summary>
        </member>
        <member name="F:BP.WF.GenerWorkFlowAttr.FK_CurrentNode">
            <summary>
            当前工作到的节点.
            </summary>
        </member>
        <member name="F:BP.WF.GenerWorkFlowAttr.FK_Station">
            <summary>
            当前工作岗位
            </summary>
        </member>
        <member name="T:BP.WF.GenerWorkFlow">
            <summary>
            产生的工作
            </summary>
        </member>
        <member name="M:BP.WF.GenerWorkFlow.#ctor">
            <summary>
            产生的工作流程
            </summary>
        </member>
        <member name="M:BP.WF.GenerWorkFlow.#ctor(System.Int32,System.String)">
            <summary>
            产生的工作流程
            </summary>
            <param name="workId">工作流程ID</param>
            <param name="flowNo">流程编号</param>
        </member>
        <member name="M:BP.WF.GenerWorkFlow.beforeInsert">
            <summary>
            ss
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.GenerWorkFlow.beforeUpdate">
            <summary>
            ss
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.GenerWorkFlow.beforeDelete">
            <summary>
            流程删除之前的操作.
            需要把工作者列表也要删除.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.GenerWorkFlow.afterDelete">
            <summary>
            删除后,需要把工作者列表也要删除.
            </summary>
        </member>
        <member name="P:BP.WF.GenerWorkFlow.HisFlow">
            <summary>
            HisFlow
            </summary>
        </member>
        <member name="P:BP.WF.GenerWorkFlow.FK_Flow">
            <summary>
            工作流程编号
            </summary>
        </member>
        <member name="P:BP.WF.GenerWorkFlow.FK_Dept">
            <summary>
            部门
            </summary>
        </member>
        <member name="P:BP.WF.GenerWorkFlow.FK_Station">
            <summary>
            当前的工作岗位
            </summary>
        </member>
        <member name="P:BP.WF.GenerWorkFlow.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:BP.WF.GenerWorkFlow.RecordDateTime">
            <summary>
            产生时间
            </summary>
        </member>
        <member name="P:BP.WF.GenerWorkFlow.FlowNote">
            <summary>
            流程备注
            </summary>
        </member>
        <member name="P:BP.WF.GenerWorkFlow.WorkID">
            <summary>
            流程ID
            </summary>
        </member>
        <member name="P:BP.WF.GenerWorkFlow.PRI">
            <summary>
            级别
            </summary>
        </member>
        <member name="P:BP.WF.GenerWorkFlow.FK_CurrentNode">
            <summary>
            当前工作到的节点
            </summary>
        </member>
        <member name="P:BP.WF.GenerWorkFlow.WFState">
            <summary>
            工作流程状态( 0, 未完成,1 完成, 2 强制终止 3, 删除状态,) 
            </summary>
        </member>
        <member name="P:BP.WF.GenerWorkFlow.WFStateLab">
            <summary>
            流程状态
            </summary>
        </member>
        <member name="P:BP.WF.GenerWorkFlow.EnMap">
            <summary>
            重写基类方法
            </summary>
        </member>
        <member name="T:BP.WF.GenerWorkFlows">
            <summary>
            产生的工作s
            </summary>
        </member>
        <member name="M:BP.WF.GenerWorkFlows.QuByFlowAndEmp(System.String,System.Int32)">
            <summary>
            根据工作流程,员工ID 查询出来他当前的能做的工作.
            </summary>
            <param name="flowNo">流程编号</param>
            <param name="empId">员工ID</param>
            <returns></returns>
        </member>
        <member name="M:BP.WF.GenerWorkFlows.#ctor">
            <summary>
            产生工作流程集合
            </summary>
        </member>
        <member name="P:BP.WF.GenerWorkFlows.GetNewEntity">
            <summary>
            得到它的 Entity 
            </summary>
        </member>
        <member name="T:BP.WF.MsgStatAttr">
            <summary>
            消息统计
            </summary>
        </member>
        <member name="F:BP.WF.MsgStatAttr.FK_Flow">
            <summary>
            FK_Flow
            </summary>
        </member>
        <member name="F:BP.WF.MsgStatAttr.FK_FlowSort">
            <summary>
            FK_FlowSort
            </summary>
        </member>
        <member name="F:BP.WF.MsgStatAttr.FK_Emp">
            <summary>
            节点对应的人员。 
            </summary>
        </member>
        <member name="F:BP.WF.MsgStatAttr.Num">
            <summary>
            Num
            </summary>
        </member>
        <member name="T:BP.WF.MsgStat">
            <summary>
            消息统计
            </summary>
        </member>
        <member name="M:BP.WF.MsgStat.#ctor">
            <summary>
            消息统计
            </summary>
        </member>
        <member name="P:BP.WF.MsgStat.FK_Flow">
            <summary>
            工作流程
            </summary>
        </member>
        <member name="P:BP.WF.MsgStat.FK_FlowText">
            <summary>
            流程文本
            </summary>
        </member>
        <member name="P:BP.WF.MsgStat.Num">
            <summary>
            Num
            </summary>
        </member>
        <member name="P:BP.WF.MsgStat.FK_Emp">
            <summary>
            员工
            </summary>
        </member>
        <member name="P:BP.WF.MsgStat.EnMap">
            <summary>
            重写基类方法
            </summary>
        </member>
        <member name="T:BP.WF.MsgStats">
            <summary>
            消息统计s 
            </summary>
        </member>
        <member name="M:BP.WF.MsgStats.#ctor">
            <summary>
            消息统计s
            </summary>
        </member>
        <member name="M:BP.WF.MsgStats.#ctor(System.String,System.Int32)">
            <summary>
            消息统计s 
            </summary>
            <param name="flow">流程</param>
            <param name="empId">员工ID</param> 
        </member>
        <member name="M:BP.WF.MsgStats.#ctor(System.Int32)">
            <summary>
            消息统计s 
            </summary>		 
            <param name="empId">员工ID</param> 
        </member>
        <member name="P:BP.WF.MsgStats.GetNewEntity">
            <summary>
            得到它的 Entity
            </summary>
        </member>
        <member name="T:BP.WF.WFMsgAttr">
            <summary>
            消息
            </summary>
        </member>
        <member name="F:BP.WF.WFMsgAttr.WorkId">
            <summary>
            工作ID
            </summary>
        </member>
        <member name="F:BP.WF.WFMsgAttr.FK_Flow">
            <summary>
            FK_Flow
            </summary>
        </member>
        <member name="F:BP.WF.WFMsgAttr.Title">
            <summary>
            工作标题
            </summary>
        </member>
        <member name="F:BP.WF.WFMsgAttr.PRI">
            <summary>
            PRI
            </summary>
        </member>
        <member name="F:BP.WF.WFMsgAttr.FK_Dept">
            <summary>
            工作隶属部门
            </summary>
        </member>
        <member name="F:BP.WF.WFMsgAttr.WFState">
            <summary>
            工作状态
            </summary>
        </member>
        <member name="F:BP.WF.WFMsgAttr.Cent">
            <summary>
            分数
            </summary>
        </member>
        <member name="F:BP.WF.WFMsgAttr.Recorder">
            <summary>
            记录人
            </summary>
        </member>
        <member name="F:BP.WF.WFMsgAttr.RecordDateTime">
            <summary>
            任务记录时间
            </summary>
        </member>
        <member name="F:BP.WF.WFMsgAttr.FK_CurrentNode">
            <summary>
            当前节点ID
            </summary>
        </member>
        <member name="F:BP.WF.WFMsgAttr.FK_Emp">
            <summary>
            节点对应的人员。 
            </summary>
        </member>
        <member name="F:BP.WF.WFMsgAttr.GenerDateTime">
            <summary>
            消息产生时间
            </summary>
        </member>
        <member name="F:BP.WF.WFMsgAttr.FlowNote">
            <summary>
            流程备注
            </summary>
        </member>
        <member name="F:BP.WF.WFMsgAttr.IsAutoGener">
            <summary>
            是不是自动生成
            </summary>
        </member>
        <member name="T:BP.WF.WFMsg">
            <summary>
            消息
            </summary>
        </member>
        <member name="M:BP.WF.WFMsg.#ctor">
            <summary>
            消息
            </summary>
        </member>
        <member name="M:BP.WF.WFMsg.#ctor(System.Int32)">
            <summary>
            消息
            </summary>
            <param name="workid">workid</param>
        </member>
        <member name="P:BP.WF.WFMsg.FK_Flow">
            <summary>
            工作流程
            </summary>
        </member>
        <member name="P:BP.WF.WFMsg.FK_FlowText">
            <summary>
            流程文本
            </summary>
        </member>
        <member name="P:BP.WF.WFMsg.FK_DeptText">
            <summary>
            部门
            </summary>
        </member>
        <member name="P:BP.WF.WFMsg.FK_Dept">
            <summary>
            隶属部门
            </summary>
        </member>
        <member name="P:BP.WF.WFMsg.GenerDateTime">
            <summary>
            产生时间
            </summary>
        </member>
        <member name="P:BP.WF.WFMsg.Title">
            <summary>
            工作标题
            </summary>
        </member>
        <member name="P:BP.WF.WFMsg.WorkId">
            <summary>
            工作ID
            </summary>
        </member>
        <member name="P:BP.WF.WFMsg.FK_Emp">
            <summary>
            员工
            </summary>
        </member>
        <member name="P:BP.WF.WFMsg.PRI">
            <summary>
            紧急程度
            </summary>
        </member>
        <member name="P:BP.WF.WFMsg.WFState">
            <summary>
            工作状态
            </summary>
        </member>
        <member name="P:BP.WF.WFMsg.FK_CurrentNodeText">
            <summary>
            当前的节点文本
            </summary>
        </member>
        <member name="P:BP.WF.WFMsg.FK_CurrentNode">
            <summary>
            节点ID
            </summary>
        </member>
        <member name="P:BP.WF.WFMsg.EnMap">
            <summary>
            重写基类方法
            </summary>
        </member>
        <member name="T:BP.WF.WFMsgs">
            <summary>
            消息s 
            </summary>
        </member>
        <member name="M:BP.WF.WFMsgs.#ctor">
            <summary>
            消息s 
            </summary>
        </member>
        <member name="P:BP.WF.WFMsgs.GetNewEntity">
            <summary>
            得到它的 Entity
            </summary>
        </member>
        <member name="T:BP.WF.WorkerListAttr">
            <summary>
            ss
            </summary>
        </member>
        <member name="F:BP.WF.WorkerListAttr.WorkID">
            <summary>
            工作节点
            </summary>
        </member>
        <member name="F:BP.WF.WorkerListAttr.FK_Node">
            <summary>
            处罚单据编号
            </summary>
        </member>
        <member name="F:BP.WF.WorkerListAttr.FK_Flow">
            <summary>
            流程
            </summary>
        </member>
        <member name="F:BP.WF.WorkerListAttr.FK_Emp">
            <summary>
            征管软件是不是罚款
            </summary>
        </member>
        <member name="F:BP.WF.WorkerListAttr.IsAutoGener">
            <summary>
            是否自动分配
            </summary>
        </member>
        <member name="F:BP.WF.WorkerListAttr.GenerDateTime">
            <summary>
            产生时间
            </summary>
        </member>
        <member name="T:BP.WF.WorkerList">
            <summary>
            工作者列表
            </summary>
        </member>
        <member name="M:BP.WF.WorkerList.#ctor">
            <summary>
            WorkerList
            </summary>
        </member>
        <member name="M:BP.WF.WorkerList.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            工作者列表
            </summary>
            <param name="workId"></param>
            <param name="nodeId"></param>
            <param name="empId"></param>
        </member>
        <member name="P:BP.WF.WorkerList.WorkID">
            <summary>
            ss
            </summary>
        </member>
        <member name="P:BP.WF.WorkerList.FK_Node">
            <summary>
            Node
            </summary>
        </member>
        <member name="P:BP.WF.WorkerList.HisEmp">
            <summary>
            员工
            </summary>
        </member>
        <member name="P:BP.WF.WorkerList.FK_Emp">
            <summary>
            员工
            </summary>
        </member>
        <member name="P:BP.WF.WorkerList.IsAutoGener">
            <summary>
            是否自动分配
            </summary>
        </member>
        <member name="P:BP.WF.WorkerList.FK_EmpText">
            <summary>
            员工名称
            </summary>		 
        </member>
        <member name="P:BP.WF.WorkerList.FK_Flow">
            <summary>
            FK_Flow
            </summary>		 
        </member>
        <member name="P:BP.WF.WorkerList.GenerDataTime">
            <summary>
            产生时间
            </summary>		 
        </member>
        <member name="P:BP.WF.WorkerList.HisNode">
            <summary>
            节点
            </summary>
        </member>
        <member name="P:BP.WF.WorkerList.EnMap">
            <summary>
            重写基类方法
            </summary>
        </member>
        <member name="T:BP.WF.WorkerLists">
            <summary>
            WorkerList
            </summary>
        </member>
        <member name="M:BP.WF.WorkerLists.#ctor">
            <summary>
            WorkerList
            </summary>
        </member>
        <member name="M:BP.WF.WorkerLists.#ctor(System.Int32,System.Int32)">
            <summary>
            工作者
            </summary>
            <param name="workId">工作id</param>
            <param name="nodeId">节点id</param>
        </member>
        <member name="M:BP.WF.WorkerLists.#ctor(System.Int32,System.String)">
            <summary>
            工作者
            </summary>
            <param name="workId">工作者ID</param>
            <param name="flowNo">流程编号</param>
        </member>
        <member name="M:BP.WF.WorkerLists.CheckUserPower(System.Int32,System.String,System.Int32)">
            <summary>
            检查用户的权限
            </summary>
            <param name="workId">工作ID</param>
            <param name="flowNo">流程编号</param>
            <param name="empId">员工信息</param>
            <returns></returns>
        </member>
        <member name="P:BP.WF.WorkerLists.GetNewEntity">
            <summary>
            得到它的 Entity 
            </summary>
        </member>
        <member name="T:BP.WF.AutoWorkFlowTransferAttr">
            <summary>
            自动流程属性
            </summary>
        </member>
        <member name="F:BP.WF.AutoWorkFlowTransferAttr.FK_Flow">
            <summary>
            流程
            </summary>
        </member>
        <member name="F:BP.WF.AutoWorkFlowTransferAttr.FK_ZSJG">
            <summary>
            征收机关
            </summary>
        </member>
        <member name="F:BP.WF.AutoWorkFlowTransferAttr.FK_Transfer">
            <summary>
            设定的调用人
            </summary>
        </member>
        <member name="T:BP.WF.AutoWorkFlowTransfer">
            <summary>
            自动流程属性
            </summary>
        </member>
        <member name="M:BP.WF.AutoWorkFlowTransfer.#ctor">
            <summary>
            ss
            </summary>
        </member>
        <member name="M:BP.WF.AutoWorkFlowTransfer.#ctor(System.String,System.String)">
            <summary>
            流程
            </summary>
            <param name="flow">流程</param>
            <param name="zsjg">征收机关</param>
        </member>
        <member name="P:BP.WF.AutoWorkFlowTransfer.FK_ZSJG">
            <summary>
             征收机关
            </summary>
        </member>
        <member name="P:BP.WF.AutoWorkFlowTransfer.FK_Flow">
            <summary>
            流程
            </summary>
        </member>
        <member name="P:BP.WF.AutoWorkFlowTransfer.FK_Transfer">
            <summary>
            设定的调用人
            </summary>
        </member>
        <member name="P:BP.WF.AutoWorkFlowTransfer.FK_TransferOfEmp">
            <summary>
            调用人.
            </summary>
        </member>
        <member name="P:BP.WF.AutoWorkFlowTransfer.HisFlow">
            <summary>
            HisFlow
            </summary>
        </member>
        <member name="P:BP.WF.AutoWorkFlowTransfer.EnMap">
            <summary>
            Map
            </summary>
        </member>
        <member name="T:BP.WF.AutoWorkFlowTransfers">
            <summary>
            自动流程s
            </summary> 
        </member>
        <member name="M:BP.WF.AutoWorkFlowTransfers.#ctor">
            <summary>
            AutoWorkFlowTransfers
            </summary>
        </member>
        <member name="P:BP.WF.AutoWorkFlowTransfers.GetNewEntity">
            <summary>
            GetNewEntity
            </summary>
        </member>
        <member name="T:BP.WF.NodeDeptAttr">
            <summary>
            节点属性
            </summary>
        </member>
        <member name="F:BP.WF.NodeDeptAttr.FK_Node">
            <summary>
            节点ID
            </summary>
        </member>
        <member name="F:BP.WF.NodeDeptAttr.FK_Dept">
            <summary>
            部门
            </summary>
        </member>
        <member name="T:BP.WF.NodeDept">
            <summary>
            NodeDept 的摘要说明。
            </summary>
        </member>
        <member name="M:BP.WF.NodeDept.#ctor">
            <summary>
            节点岗位
            </summary> 
        </member>
        <member name="M:BP.WF.NodeDept.#ctor(System.Int32,System.String)">
            <summary>
            节点部门对应
            </summary>
            <param name="_nodeid">节点ID</param>
            <param name="dutyNo">部门编号</param> 	
        </member>
        <member name="M:BP.WF.NodeDept.beforeInsert">
            <summary>
            插入前所做的工作
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="M:BP.WF.NodeDept.beforeUpdate">
            <summary>
            更新前所做的工作
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="M:BP.WF.NodeDept.beforeDelete">
            <summary>
            删除前所做的工作
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="P:BP.WF.NodeDept.FK_Node">
            <summary>
            节点
            </summary>
        </member>
        <member name="P:BP.WF.NodeDept.FK_Dept">
             <summary>
            部门
             </summary>
        </member>
        <member name="P:BP.WF.NodeDept.EnMap">
            <summary>
            重写基类方法
            </summary>
        </member>
        <member name="T:BP.WF.NodeDepts">
            <summary>
            节点集合 
            </summary>
        </member>
        <member name="M:BP.WF.NodeDepts.#ctor">
            <summary>
            节点与部门集合
            </summary>
        </member>
        <member name="M:BP.WF.NodeDepts.#ctor(System.String)">
            <summary>
            节点与部门集合
            </summary>
            <param name="StationNo">部门编号</param>
        </member>
        <member name="M:BP.WF.NodeDepts.#ctor(System.Int32)">
            <summary>
            节点与部门集合
            </summary>
            <param name="FK_Node">FK_Node</param>
        </member>
        <member name="M:BP.WF.NodeDepts.GetHisNodes(System.String)">
            <summary>
            部门对应的节点
            </summary>
            <param name="stationNo">部门编号</param>
            <returns>节点s</returns>
        </member>
        <member name="M:BP.WF.NodeDepts.GetHisDepts(System.Int32)">
            <summary>
            转向此节点的集合的Nodes
            </summary>
            <param name="nodeID">此节点的ID</param>
            <returns>转向此节点的集合的Nodes (FromNodes)</returns> 
        </member>
        <member name="P:BP.WF.NodeDepts.GetNewEntity">
            <summary>
            得到它的 Entity 
            </summary>
        </member>
        <member name="T:BP.WF.NodeDutyAttr">
            <summary>
            节点属性
            </summary>
        </member>
        <member name="F:BP.WF.NodeDutyAttr.FK_Node">
            <summary>
            节点ID
            </summary>
        </member>
        <member name="F:BP.WF.NodeDutyAttr.FK_Duty">
            <summary>
            部门
            </summary>
        </member>
        <member name="T:BP.WF.NodeDuty">
            <summary>
            NodeDuty 的摘要说明。
            </summary>
        </member>
        <member name="M:BP.WF.NodeDuty.#ctor">
            <summary>
            节点岗位
            </summary> 
        </member>
        <member name="M:BP.WF.NodeDuty.#ctor(System.Int32,System.String)">
            <summary>
            节点部门对应
            </summary>
            <param name="_nodeid">节点ID</param>
            <param name="dutyNo">部门编号</param> 	
        </member>
        <member name="M:BP.WF.NodeDuty.beforeInsert">
            <summary>
            插入前所做的工作
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="M:BP.WF.NodeDuty.beforeUpdate">
            <summary>
            更新前所做的工作
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="M:BP.WF.NodeDuty.beforeDelete">
            <summary>
            删除前所做的工作
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="P:BP.WF.NodeDuty.FK_Node">
            <summary>
            节点
            </summary>
        </member>
        <member name="P:BP.WF.NodeDuty.FK_Duty">
             <summary>
            部门
             </summary>
        </member>
        <member name="P:BP.WF.NodeDuty.EnMap">
            <summary>
            重写基类方法
            </summary>
        </member>
        <member name="T:BP.WF.NodeDutys">
            <summary>
            节点集合 
            </summary>
        </member>
        <member name="M:BP.WF.NodeDutys.#ctor">
            <summary>
            节点与部门集合
            </summary>
        </member>
        <member name="M:BP.WF.NodeDutys.#ctor(System.String)">
            <summary>
            节点与部门集合
            </summary>
            <param name="StationNo">部门编号</param>
        </member>
        <member name="M:BP.WF.NodeDutys.#ctor(System.Int32)">
            <summary>
            节点与部门集合
            </summary>
            <param name="FK_Node">FK_Node</param>
        </member>
        <member name="M:BP.WF.NodeDutys.GetHisNodes(System.String)">
            <summary>
            部门对应的节点
            </summary>
            <param name="stationNo">部门编号</param>
            <returns>节点s</returns>
        </member>
        <member name="M:BP.WF.NodeDutys.GetHisDutys(System.Int32)">
            <summary>
            转向此节点的集合的Nodes
            </summary>
            <param name="nodeID">此节点的ID</param>
            <returns>转向此节点的集合的Nodes (FromNodes)</returns> 
        </member>
        <member name="P:BP.WF.NodeDutys.GetNewEntity">
            <summary>
            得到它的 Entity 
            </summary>
        </member>
        <member name="T:BP.WF.AgentAttr">
            <summary>
            代理日志
            </summary>
        </member>
        <member name="F:BP.WF.AgentAttr.WorkId">
            <summary>
            工作ID
            </summary>
        </member>
        <member name="F:BP.WF.AgentAttr.FK_Flow">
            <summary>
            流程
            </summary>
        </member>
        <member name="F:BP.WF.AgentAttr.FK_Node">
            <summary>
            节点
            </summary>
        </member>
        <member name="F:BP.WF.AgentAttr.Authorized">
            <summary>
            Authorized人员
            </summary>
        </member>
        <member name="F:BP.WF.AgentAttr.AuthorizedAgent">
            <summary>
            代理人。 
            </summary>
        </member>
        <member name="T:BP.WF.AgentLog">
            <summary>
            代理日志
            </summary>
        </member>
        <member name="M:BP.WF.AgentLog.#ctor">
            <summary>
            代理日志
            </summary>
        </member>
        <member name="M:BP.WF.AgentLog.#ctor(System.Int32,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            代理日志
            </summary>
            <param name="workid">工作ID</param>
            <param name="flowNo">流程编号</param>
            <param name="nodeId">节点ID</param>
            <param name="authorized">授权人</param>
            <param name="authorizedAgent">代理人</param>
        </member>
        <member name="P:BP.WF.AgentLog.FK_Flow">
            <summary>
            工作流程
            </summary>
        </member>
        <member name="P:BP.WF.AgentLog.FK_FlowText">
            <summary>
            流程文本
            </summary>
        </member>
        <member name="P:BP.WF.AgentLog.WorkId">
            <summary>
            工作ID
            </summary>
        </member>
        <member name="P:BP.WF.AgentLog.FK_Node">
            <summary>
            FK_Node
            </summary>
        </member>
        <member name="P:BP.WF.AgentLog.Authorized">
            <summary>
            Authorized
            </summary>
        </member>
        <member name="P:BP.WF.AgentLog.AuthorizedAgent">
            <summary>
            代理人
            </summary>
        </member>
        <member name="P:BP.WF.AgentLog.EnMap">
            <summary>
            重写基类方法
            </summary>
        </member>
        <member name="T:BP.WF.AgentLogs">
            <summary>
            代理日志s 
            </summary>
        </member>
        <member name="M:BP.WF.AgentLogs.#ctor">
            <summary>
            代理日志s
            </summary>
        </member>
        <member name="M:BP.WF.AgentLogs.#ctor(System.Int32,System.String)">
            <summary>
            代理日志s 
            </summary>
        </member>
        <member name="P:BP.WF.AgentLogs.GetNewEntity">
            <summary>
            得到它的 Entity
            </summary>
        </member>
        <member name="T:BP.WF.NodeRefFuncAttr">
            <summary>
            节点的相关功能属性
            </summary>
        </member>
        <member name="F:BP.WF.NodeRefFuncAttr.NodeId">
            <summary>
            节点ID
            </summary>
        </member>
        <member name="F:BP.WF.NodeRefFuncAttr.URL">
            <summary>
            URL
            </summary>
        </member>
        <member name="F:BP.WF.NodeRefFuncAttr.RefFuncType">
            <summary>
            相关功能类型
            </summary>
        </member>
        <member name="F:BP.WF.NodeRefFuncAttr.Width">
            <summary>
            Width
            </summary>
        </member>
        <member name="F:BP.WF.NodeRefFuncAttr.Hight">
            <summary>
            Hight
            </summary>
        </member>
        <member name="F:BP.WF.NodeRefFuncAttr.DefaultIcon">
            <summary>
            默认得图标
            </summary>
        </member>
        <member name="F:BP.WF.NodeRefFuncAttr.DefaultHover">
            <summary>
            默认得盘旋图标
            </summary>
        </member>
        <member name="F:BP.WF.NodeRefFuncAttr.ToolTip">
            <summary>
            ToolTip
            </summary>
        </member>
        <member name="T:BP.WF.NodeRefFunc">
            <summary>
            相关功能
            </summary>
        </member>
        <member name="M:BP.WF.NodeRefFunc.#ctor">
            <summary>
            ss
            </summary>
        </member>
        <member name="M:BP.WF.NodeRefFunc.#ctor(System.Int32)">
            <summary>
            节点OID
            </summary>
            <param name="_oid"></param>
        </member>
        <member name="M:BP.WF.NodeRefFunc.beforeUpdateInsertAction">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.NodeRefFunc.beforeInsert">
            <summary>
            beforeInsert
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.NodeRefFunc.beforeUpdate">
            <summary>
            这里要做的工作是,第1,从征收管理数软件中找.罚款信息.
            是不是一致.
            1, 纳税人, 罚款金额. 票据号码. 是不是有这一条记录.
            如果没有就抛出异常.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.NodeRefFunc.beforeDelete">
            <summary>
            beforeDelete
            </summary>
            <returns></returns>
        </member>
        <member name="P:BP.WF.NodeRefFunc.RefFuncType">
            <summary>
            相关功能类型
            
            </summary>
        </member>
        <member name="P:BP.WF.NodeRefFunc.NodeId">
            <summary>
            NodeId
            </summary>
        </member>
        <member name="P:BP.WF.NodeRefFunc.URL">
            <summary>
            url
            </summary>
        </member>
        <member name="P:BP.WF.NodeRefFunc.Hight">
            <summary>
            Hight
            </summary>
        </member>
        <member name="P:BP.WF.NodeRefFunc.Width">
            <summary>
            Width
            </summary>
        </member>
        <member name="P:BP.WF.NodeRefFunc.DefaultIcon">
            <summary>
            默认盘旋图标
            </summary>
        </member>
        <member name="P:BP.WF.NodeRefFunc.DefaultHover">
            <summary>
            默认得盘旋图标
            </summary>
        </member>
        <member name="P:BP.WF.NodeRefFunc.ToolTip">
            <summary>
            提示信息
            </summary>
        </member>
        <member name="P:BP.WF.NodeRefFunc.EnMap">
            <summary>
            重写基类方法
            </summary>
        </member>
        <member name="T:BP.WF.NodeRefFuncs">
            <summary>
            节点的相关功能
            </summary>
        </member>
        <member name="M:BP.WF.NodeRefFuncs.#ctor">
            <summary>
            相关功能
            </summary>
        </member>
        <member name="M:BP.WF.NodeRefFuncs.#ctor(System.Int32)">
            <summary>
            相关功能
            </summary>
            <param name="NodeID">NodeID</param>
        </member>
        <member name="P:BP.WF.NodeRefFuncs.GetNewEntity">
            <summary>
            得到它的 Entity 
            </summary>
        </member>
        <member name="T:BP.WF.WFPubClass">
            <summary>
            WFPubClass 的摘要说明。
            </summary>
        </member>
        <member name="M:BP.WF.WFPubClass.SendMsg(BP.WF.WorkNodes,System.String,System.String)">
            <summary>
            向一个工作节点发送消息
            </summary>
            <param name="wns"></param>
            <param name="title"></param>
            <param name="docs"></param>
        </member>
        <member name="P:BP.WF.WFPubClass.DefaultWorkId">
            <summary>
            默认的工作ID authorize
            </summary>
        </member>
        <member name="P:BP.WF.WFPubClass.DefaultCheckNum">
            <summary>
            默认的审核金额
            </summary>
        </member>
        <member name="P:BP.WF.WFPubClass.DefaultRefMsg">
            <summary>
            参考消息
            </summary>
        </member>
        <member name="T:BP.WF.WorkFlow">
            <summary>
            WF 的摘要说明。
            工作流
            这里包含了两个方面
            工作的信息．
            流程的信息．
            </summary>
        </member>
        <member name="M:BP.WF.WorkFlow.IsCanDoCurrentWork(System.Int32)">
            <summary>
            是不是能够作当前的工作。
            </summary>
            <param name="empId">员工ID</param>
            <returns>是不是能够作当前的工作</returns>
        </member>
        <member name="M:BP.WF.WorkFlow.DoDeleteWorkFlowByReal">
            <summary>
            真正的删除工作流程
            </summary>
        </member>
        <member name="M:BP.WF.WorkFlow.DoDeleteWorkFlowByFlag(System.String)">
            <summary>
            删除当前的工作流程用标记.
            </summary>
        </member>
        <member name="M:BP.WF.WorkFlow.WritLog(System.String)">
            <summary>
            写入流程日志[已经包含了记录时间]
            </summary>
            <param name="doc"></param>
        </member>
        <member name="M:BP.WF.WorkFlow.DoStopWorkFlow(System.String)">
            <summary>
            强制终止流程. 
             1, 设置流程的状态为强制终止状态.
             2, 设置当前的工作节点是强制终止状态. 
             3, 设置产生的工作流程为 强制终止状态 .
             4, 除去当前工作人员的消息.
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:BP.WF.WorkFlow.DoComeBackWrokFlow(System.String)">
            <summary>
            恢复流程.
            </summary>
            <param name="msg">回复流程的原因</param>
        </member>
        <member name="M:BP.WF.WorkFlow.GetCurrentWorkNode">
            <summary>
            得到当前的进行中的工作。
            </summary>
            <returns></returns>		 
        </member>
        <member name="M:BP.WF.WorkFlow.DoFlowOver">
            <summary>
            执行此工作流程任务完成
            </summary>		 
        </member>
        <member name="F:BP.WF.WorkFlow._HisNodes">
            <summary>
            他的节点
            </summary>
        </member>
        <member name="F:BP.WF.WorkFlow._HisFlow">
            <summary>
            工作流程
            </summary>
        </member>
        <member name="F:BP.WF.WorkFlow._WorkID">
            <summary>
            工作ID
            </summary>
        </member>
        <member name="M:BP.WF.WorkFlow.#ctor(BP.WF.Flow,System.Int32)">
            <summary>
            建立一个工作流事例
            </summary>
            <param name="flow">流程No</param>
            <param name="wkid">工作ID</param>
        </member>
        <member name="F:BP.WF.WorkFlow._HisStartWork">
            <summary>
            开始工作
            </summary>
        </member>
        <member name="F:BP.WF.WorkFlow._HisStartWorkNode">
            <summary>
            开始工作节点
            </summary>
        </member>
        <member name="M:BP.WF.WorkFlow.IsCanDoWorkCheckByEmpStation(System.Int32,System.Int32)">
            <summary>
            是否这个员工能执行这个工作
            </summary>
            <param name="nodeId">节点</param>
            <param name="empId">员工</param>
            <returns>能不能执行</returns> 
        </member>
        <member name="M:BP.WF.WorkFlow.IsCanDoWorkCheckByEmpDuty(System.Int32,System.String)">
            <summary>
            是否这个员工能执行这个工作
            </summary>
            <param name="nodeId">节点</param>
            <param name="dutyNo">员工</param>
            <returns>能不能执行</returns> 
        </member>
        <member name="M:BP.WF.WorkFlow.IsCanDoWorkCheckByEmpDept(System.Int32,System.String)">
            <summary>
            是否这个员工能执行这个工作
            </summary>
            <param name="nodeId">节点</param>
            <param name="deptNo">员工</param>
            <returns>能不能执行</returns> 
        </member>
        <member name="M:BP.WF.WorkFlow.CanDoWorkEmps(System.Int32)">
            <summary>
            在物理上能构作这项工作的人员。
            </summary>
            <param name="nodeId">节点ID</param>		 
            <returns></returns>
        </member>
        <member name="M:BP.WF.WorkFlow.GetEmpsBy(System.Data.DataTable)">
            <summary>
            GetEmpsBy
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="P:BP.WF.WorkFlow.HisNodes">
            <summary>
            节点s
            </summary>
        </member>
        <member name="P:BP.WF.WorkFlow.HisWorkNodes">
            <summary>
            工作节点s
            </summary>
        </member>
        <member name="P:BP.WF.WorkFlow.HisFlow">
            <summary>
            工作流程
            </summary>
        </member>
        <member name="P:BP.WF.WorkFlow.WorkID">
            <summary>
            工作ID
            </summary>
        </member>
        <member name="P:BP.WF.WorkFlow.HisStartWork">
            <summary>
            他开始的工作.
            </summary>
        </member>
        <member name="P:BP.WF.WorkFlow.HisStartWorkNode">
            <summary>
            他开始的工作.
            </summary>
        </member>
        <member name="P:BP.WF.WorkFlow.IsComplete">
            <summary>
            是不是完成
            </summary>
        </member>
        <member name="P:BP.WF.WorkFlow.IsCompleteStr">
            <summary>
            是不是完成
            </summary>
        </member>
        <member name="T:BP.WF.WorkFlows">
            <summary>
            工作流程集合.
            </summary>
        </member>
        <member name="M:BP.WF.WorkFlows.#ctor(BP.WF.Flow)">
            <summary>
            工作流程
            </summary>
            <param name="flow">流程编号</param>
        </member>
        <member name="M:BP.WF.WorkFlows.#ctor">
            <summary>
            工作流程集合
            </summary>
        </member>
        <member name="M:BP.WF.WorkFlows.#ctor(BP.WF.Flow,System.Int32)">
            <summary>
            工作流程集合
            </summary>
            <param name="flow">流程</param>
            <param name="flowState">工作ID</param> 
        </member>
        <member name="M:BP.WF.WorkFlows.#ctor(BP.WF.Flow,System.Int32,System.Int32)">
            <summary>
            工作流程集合
            </summary>
            <param name="flow">工作流程</param>
            <param name="flowState">工作流程状态</param>
            <param name="PRI">优先级别</param>
        </member>
        <member name="M:BP.WF.WorkFlows.#ctor(BP.WF.Flow,System.Int32,System.Int32,System.String)">
            <summary>
            工作流程集合
            </summary>
            <param name="flow">flow</param>
            <param name="flowState">flowState</param>
            <param name="PRI">PRI</param>
            <param name="dept">dept</param>
        </member>
        <member name="M:BP.WF.WorkFlows.GetNotCompleteWork(System.String)">
            <summary>
            GetNotCompleteNode
            </summary>
            <param name="flowNo">流程编号</param>
            <returns>StartWorks</returns>
        </member>
        <member name="M:BP.WF.WorkFlows.Add(BP.WF.WorkFlow)">
            <summary>
            增加一个工作流程
            </summary>
            <param name="wn">工作流程</param>
        </member>
        <member name="M:BP.WF.WorkFlows.ClearBadWorkNode">
            <summary>
            清除死节点。
            死节点的产生，就是用户非法的操作，或者系统出现存储故障，造成的流程中的当前工作节点没有工作人员，从而不能正常的运行下去。
            清除死节点，就是把他们放到死节点工作集合里面。
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.WorkFlows.DTSPCWork1">
            <summary>
            调度计算机获取外部属性.
            </summary>
            <returns>调度的消息</returns>
        </member>
        <member name="P:BP.WF.WorkFlows.Item(System.Int32)">
            <summary>
            根据位置取得数据
            </summary>
        </member>
        <member name="T:BP.WF.WorkNode">
            <summary>
            WF 的摘要说明。
            工作流.
            这里包含了两个方面
            工作的信息．
            流程的信息．
            </summary>
        </member>
        <member name="M:BP.WF.WorkNode.IsCanOpenCurrentWorkNode(System.Int32)">
            <summary>
            判断一个人能不能对这个工作节点进行操作。
            </summary>
            <param name="empId"></param>
            <returns></returns>
        </member>
        <member name="M:BP.WF.WorkNode.InitWorkerLists(BP.WF.WorkNode)">
            <summary>
            产生下一步的工作者列表
            </summary>
            <param name="wn">要产生的工作者的工作节点.</param>
            <returns>工作者s</returns>
        </member>
        <member name="M:BP.WF.WorkNode.GetWorkerLists(BP.WF.WorkNode)">
            <summary>
            产生工作人员列表
            </summary>
            <param name="wn"></param>
            <returns></returns>
        </member>
        <member name="M:BP.WF.WorkNode.DoReturnWork(System.String)">
            <summary>
            执行返回工作
            </summary>
            <param name="msg">退回工作的原因</param>
        </member>
        <member name="M:BP.WF.WorkNode.DoSetThisWorkOver">
            <summary>
            执行工作完成
            </summary>
        </member>
        <member name="M:BP.WF.WorkNode.GetCanDoWorkEmpsByDuty(System.Int32)">
            <summary>
            按照 "职务" 得到的能够执行这项工作的集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.WorkNode.GetCanDoWorkEmpsByDept(System.Int32)">
            <summary>
            按照 "部门" 得到的能够执行这项工作的集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.WorkNode.WayOf1to1(BP.Port.Station,BP.WF.WorkNode,BP.Port.Station)">
            <summary>
            处理一对一的情况
            </summary>
            <param name="s">当前的工作岗位</param> 
            <param name="wn">要启动的节点</param>
            <param name="st">启动的工作岗位</param>
        </member>
        <member name="M:BP.WF.WorkNode.WayOf1toMExt(BP.WF.WorkNode,BP.Port.Stations)">
            <summary>
            从一个工作岗位到多个工作岗位的情况. 模式 1 to m to 1 . 
            </summary>
            <param name="wn"></param>
            <param name="sts"></param>
            <returns></returns>
        </member>
        <member name="M:BP.WF.WorkNode.WayOf1toM(BP.WF.WorkNode,BP.Port.Stations)">
            <summary>
            从一个工作岗位到多个工作岗位的情况:
            这种情况, 通常是  M to 1 to M 的情况.开始的工作节点是M. 
            
            特别的情况是: 1 to M to 1 . 例如领导分配工作.
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.WorkNode.WayOfMto1(BP.WF.WorkNode,BP.Port.Station)">
            <summary>
            多个工作岗位向一个工作岗位接点流动．
            </summary>
            <param name="wn">将要启动的工作节点</param>
            <param name="st">将要工作岗位</param>
            <returns></returns>
        </member>
        <member name="M:BP.WF.WorkNode.WayOfMtoM(BP.WF.WorkNode,BP.Port.Stations)">
            <summary>
            多对多的工作岗位
            </summary>
            <param name="wn"></param>
            <param name="sts"></param>
            <returns></returns>
        </member>
        <member name="M:BP.WF.WorkNode.WayOf1to1(BP.Port.Station,BP.WF.WorkNode,BP.Port.Station,System.String)">
            <summary>
            处理一对一的情况
            </summary>		 
            <param name="fromSt">当前工作节点工作岗位</param>
            <param name="wn">要启动的节点</param>
            <param name="toSt">启动新的工作接点要使用的工作岗位</param> 
            /// <param name="taxpayerDept">taxpayerDept</param> 
        </member>
        <member name="M:BP.WF.WorkNode.WayOf1toM(BP.WF.WorkNode,BP.Port.Stations,System.String)">
            <summary>
            从一个工作岗位到多个工作岗位的情况:
            这种情况, 通常是  M to 1 to M 的情况.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.WorkNode.WayOfMto1(BP.WF.WorkNode,BP.Port.Station,System.String)">
            <summary>
            当前的工作岗位
            </summary>
            <param name="wn"></param>
            <param name="st"></param>
            <param name="taxpayerDept"></param>
            <returns></returns>
        </member>
        <member name="M:BP.WF.WorkNode.WorkerListWayOfDept(BP.WF.WorkNode,System.Data.DataTable)">
            <summary>
            部门
            </summary>
        </member>
        <member name="M:BP.WF.WorkNode.WorkerListWayOfDuty(System.Data.DataTable,BP.WF.WorkNode)">
            <summary>
            职务
            </summary>
        </member>
        <member name="M:BP.WF.WorkNode.setWorkerLists(BP.WF.WorkNode,System.String)">
            <summary>
            按照工作节点,一个sql 初始化他的WorkerLists
            </summary>
            <param name="wn"></param>
            <param name="sql"></param>
        </member>
        <member name="M:BP.WF.WorkNode.setWorkerLists(BP.WF.WorkNode,System.Data.DataTable)">
            <summary>
            按照工作节点,一个sql 初始化他的WorkerLists
            </summary>
            <param name="wn"></param>
            <param name="dt"></param>
        </member>
        <member name="F:BP.WF.WorkNode._HisDeptOfUse">
            <summary>
            使用的部门
            </summary>
        </member>
        <member name="M:BP.WF.WorkNode.ReSetCheckCent">
            <summary>
            重新设置考核数。
            </summary>
        </member>
        <member name="M:BP.WF.WorkNode.GetHadCompleteWorkNodes">
            <summary>
            得到以前的已经完成的工作节点.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.WorkNode.CheckGlobalCompleteCondition">
            <summary>
            检查全局的工作流程是不是完成任务
            如果完成了，就返回不做任何处理。
            如果符合流程完成的条件，就返回相应的信息。
            如果不符合流程的完成条件，return null;  
            </summary>
        </member>
        <member name="M:BP.WF.WorkNode.DoInitData_del">
            <summary>
            执行调用外部的方法
            </summary>
        </member>
        <member name="M:BP.WF.WorkNode.AfterNodeSave(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            在流程节点保存后的操作.
            1, 判断节点的任务是不是完成,如果完成,就设置节点的完成状态.
            2, 判断是不是符合工作流完成任务任务的条件, 如果完成,就设置,工作流程任务完成. return ;
            3, 判断节点的方向.
            1, 一个一个的判断此节点的方向, 满足就启动节点工作.
            2, 如果没有任何一个节点的工作.那末就抛出异常, 流程的节点方向条件定义错误. .
            </summary>
            <param name="TransferPC">是否要执行获取外部信息工组</param>
            <param name="ByTransfered">是不是被调用的,只用在开始节点,并且是外部调用的自动启动的流程,如果设置为true, 流程在当前的节点完成之后就不做下一步骤的工作,如果设置为false, 就做下一步工作.</param>
            <param name="IsShowRefFunc">是否显示相关功能,如果是用户页面调用设置Ture提示相关功能信息．</param>
            <returns>执行后的内容</returns>
        </member>
        <member name="M:BP.WF.WorkNode.AddIntoWacthDog(BP.WF.WorkerLists)">
            <summary>
            加入工作记录
            </summary>
            <param name="gwls"></param>
        </member>
        <member name="M:BP.WF.WorkNode.InitStartNodeWorkerList(System.Boolean)">
            <summary>
             出使化开始工作节点的工作人员列表,目的:
             1, 如果开始工作节点任务员工没有完成当前的工作,他保存以后下次能够看到他.
             2, 用于自动工作流程,如果另外一个流程启动了这个工作,那开始的工作
             3, 如果是多线程的工作,业可以调用他.
            </summary>
            <param name="ByTransfered">是不自动调度流程，如果是就不产生工作者列表。</param> 
        </member>
        <member name="M:BP.WF.WorkNode.InitStartNodeWorkerList1(System.Boolean)">
            <summary>
             出使化开始工作节点的工作人员列表,目的:
             1, 如果开始工作节点任务员工没有完成当前的工作,他保存以后下次能够看到他.
             2, 用于自动工作流程,如果另外一个流程启动了这个工作,那开始的工作
             3, 如果是多线程的工作,业可以调用他.
            </summary>
            <param name="ByTransfered">是不自动调度流程，如果是就不产生工作者列表。</param> 
        </member>
        <member name="M:BP.WF.WorkNode.InitGenerWorkFlow(BP.WF.Node)">
            <summary>
            产生工作流程
            </summary>
        </member>
        <member name="M:BP.WF.WorkNode.AfterWorkOfCheckSave">
            <summary>
            调用审核节点任务完成
            </summary>		 
        </member>
        <member name="M:BP.WF.WorkNode.AfterWorkSave(System.Boolean)">
            <summary>
            调用非审核节点任务完成
            </summary>		 
        </member>
        <member name="M:BP.WF.WorkNode.StartupNewNodeWork">
            <summary>
            启动下一个节点de 工作.
            </summary>		 
        </member>
        <member name="M:BP.WF.WorkNode.StartNextNode(BP.WF.Node)">
            <summary>
            启动指定的下一个节点...
            </summary>
            <param name="nd">要启动的节点</param>
        </member>
        <member name="M:BP.WF.WorkNode.beforeStartNode(BP.WF.Work,BP.WF.Node)">
            <summary>
            在启动下个工作要做的工作。
            </summary>
            <param name="wk">要启动的工作</param>
            <param name="nd">要启动的节点。</param>
            <returns>启动的信息</returns>
        </member>
        <member name="M:BP.WF.WorkNode.StartNextCheckNode(BP.WF.Node)">
            <summary>
            启动下一个审核节点
            </summary>
            <param name="nd">工作节点</param>
        </member>
        <member name="M:BP.WF.WorkNode.StartNextWorkNode(BP.WF.Node)">
            <summary>
            启动下一个工作节点
            </summary>
            <param name="nd">节点</param>		 
            <returns></returns>
        </member>
        <member name="F:BP.WF.WorkNode._HisWork">
            <summary>
            工作
            </summary>
        </member>
        <member name="F:BP.WF.WorkNode._HisNode">
            <summary>
            节点
            </summary>
        </member>
        <member name="M:BP.WF.WorkNode.GetCheckWork">
            <summary>
            标准的check, 如果当前的工作不是审核工作.就throw new exception
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.WorkNode.#ctor(System.Int32,System.Int32)">
            <summary>
            建立一个工作节点事例.
            </summary>
            <param name="workId">工作ID</param>
            <param name="nodeId">节点ID</param>
        </member>
        <member name="M:BP.WF.WorkNode.#ctor(BP.WF.Work,BP.WF.Node)">
            <summary>
            建立一个工作节点事例
            </summary>
            <param name="nd">节点ID</param>
            <param name="wk">工作</param>
        </member>
        <member name="M:BP.WF.WorkNode.GetPreviousWorkNode">
            <summary>
            得当他的上一步工作
            1, 从当前的找到他的上一步工作的节点集合.		 
            如果没有找到转向他的节点,就返回,当前的工作.
            </summary>
            <returns>得当他的上一步工作</returns>
        </member>
        <member name="M:BP.WF.WorkNode.GetNextWorkNode">
            <summary>
            得当他的下一步工作.
            如果当前工作在没有处理完毕状态,就返回当前的工作.
            </summary>
            <returns>得当他的下一步工作</returns>
        </member>
        <member name="P:BP.WF.WorkNode.HisStationOfUse">
            <summary>
            取出当前工作用的岗位.
            这对与多个工作岗位的节点来说的.
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:BP.WF.WorkNode.HisStations">
            <summary>
            工作岗位
            </summary>
        </member>
        <member name="P:BP.WF.WorkNode.HisStationOfFirst">
            <summary>
            返回第一个工作节点
            </summary>
        </member>
        <member name="P:BP.WF.WorkNode.HisDeptOfUse">
            <summary>
            取出当前工作用的部门.
            这对与多个工作部门的节点来说的.
            </summary>
            <returns>当前工作使用的部门</returns>
        </member>
        <member name="P:BP.WF.WorkNode.OpHisDepts">
            <summary>
            操作员部门s
            </summary>
        </member>
        <member name="P:BP.WF.WorkNode.HisDeptOfFirst">
            <summary>
            返回第一个工作部门
            </summary>
        </member>
        <member name="P:BP.WF.WorkNode.HisNodeCompleteConditions">
            <summary>
            节点完成任务的条件
            条件与条件之间是or 的关系, 就是说,如果任何一个条件满足,这个员工在这个节电上的任务就完成了.
            </summary>
        </member>
        <member name="P:BP.WF.WorkNode.HisFlowCompleteConditions">
            <summary>
            他的完成任务的条件,此节点是完成任务的条件集合
            条件与条件之间是or 的关系, 就是说,如果任何一个条件满足,这个任务就完成了.
            </summary>
        </member>
        <member name="P:BP.WF.WorkNode.HisWork">
            <summary>
            工作
            </summary>
        </member>
        <member name="P:BP.WF.WorkNode.HisNode">
            <summary>
            节点
            </summary>
        </member>
        <member name="P:BP.WF.WorkNode.HisWorkFlow">
            <summary>
            工作流程
            </summary>
        </member>
        <member name="P:BP.WF.WorkNode.IsComplete">
            <summary>
            当前节点的工作是不是完成。
            </summary>
        </member>
        <member name="T:BP.WF.WorkNodes">
            <summary>
            工作节点集合.
            </summary>
        </member>
        <member name="M:BP.WF.WorkNodes.#ctor">
            <summary>
            工作节点集合
            </summary>
        </member>
        <member name="M:BP.WF.WorkNodes.#ctor(BP.WF.Flow,System.Int32)">
            <summary>
            工作节点集合, 如果工作已经完成任务.
            </summary>
            <param name="flow">流程</param>
            <param name="wkID">工作ID</param> 
        </member>
        <member name="M:BP.WF.WorkNodes.DeleteWorks">
            <summary>
            删除工作流程
            </summary>
        </member>
        <member name="M:BP.WF.WorkNodes.Add(BP.WF.WorkNode)">
            <summary>
            增加一个WorkNode
            </summary>
            <param name="wn">工作 节点</param>
        </member>
        <member name="P:BP.WF.WorkNodes.GetWorks">
            <summary>
            他的工作s
            </summary> 
        </member>
        <member name="P:BP.WF.WorkNodes.Item(System.Int32)">
            <summary>
            根据位置取得数据
            </summary>
        </member>
        <member name="T:BP.WF.CH.QAState">
            <summary>
            QAState
            </summary>
        </member>
        <member name="F:BP.WF.CH.QAState.Init">
            <summary>
            出事化
            </summary>
        </member>
        <member name="F:BP.WF.CH.QAState.Accept">
            <summary>
            接受
            </summary>
        </member>
        <member name="F:BP.WF.CH.QAState.Dissent">
            <summary>
            不接受
            </summary>
        </member>
        <member name="T:BP.WF.CH.CHQualityAttr">
            <summary>
            流程质量考核
            </summary>
        </member>
        <member name="F:BP.WF.CH.CHQualityAttr.QAState">
            <summary>
            质量考核状态．
            </summary>
        </member>
        <member name="F:BP.WF.CH.CHQualityAttr.WorkId">
            <summary>
            工作ID
            </summary>
        </member>
        <member name="F:BP.WF.CH.CHQualityAttr.FK_Flow">
            <summary>
            FK_Flow
            </summary>
        </member>
        <member name="F:BP.WF.CH.CHQualityAttr.FK_Node">
            <summary>
            当前节点
            </summary>
        </member>
        <member name="F:BP.WF.CH.CHQualityAttr.FK_Dept">
            <summary>
            要考核的部门
            </summary>
        </member>
        <member name="F:BP.WF.CH.CHQualityAttr.CentOfDept">
            <summary>
            部门扣分
            </summary>
        </member>
        <member name="F:BP.WF.CH.CHQualityAttr.NoteOfDept">
            <summary>
            部门扣分原因
            </summary>
        </member>
        <member name="F:BP.WF.CH.CHQualityAttr.FK_Station">
            <summary>
            要考核的工作岗位
            </summary>
        </member>
        <member name="F:BP.WF.CH.CHQualityAttr.CentOfStation">
            <summary>
            岗位扣分
            </summary>
        </member>
        <member name="F:BP.WF.CH.CHQualityAttr.NoteOfStation">
            <summary>
            岗位扣分备注
            </summary>
        </member>
        <member name="F:BP.WF.CH.CHQualityAttr.FK_Emp">
            <summary>
            员工
            </summary>
        </member>
        <member name="F:BP.WF.CH.CHQualityAttr.CentOfEmp">
            <summary>
            员工扣分
            </summary>
        </member>
        <member name="F:BP.WF.CH.CHQualityAttr.NoteOfEmp">
            <summary>
            员工扣分备注
            </summary>
        </member>
        <member name="F:BP.WF.CH.CHQualityAttr.Checker">
            <summary>
            考核人
            </summary>
        </member>
        <member name="F:BP.WF.CH.CHQualityAttr.CheckerStation">
            <summary>
            考核人de工作岗位
            </summary>
        </member>
        <member name="F:BP.WF.CH.CHQualityAttr.CheckerDateTime">
            <summary>
            考核时间
            </summary>
        </member>
        <member name="F:BP.WF.CH.CHQualityAttr.FK_NY">
            <summary>
            陈述报告
            </summary>
        </member>
        <member name="F:BP.WF.CH.CHQualityAttr.FK_ZSJG">
            <summary>
            征收机关
            </summary>
        </member>
        <member name="F:BP.WF.CH.CHQualityAttr.FK_AP">
            <summary>
            季度
            </summary>
        </member>
        <member name="F:BP.WF.CH.CHQualityAttr.FK_ND">
            <summary>
            年度
            </summary>
        </member>
        <member name="F:BP.WF.CH.CHQualityAttr.FK_YF">
            <summary>
            月份
            </summary>
        </member>
        <member name="F:BP.WF.CH.CHQualityAttr.Statement">
            <summary>
            Statement
            </summary>
        </member>
        <member name="T:BP.WF.CH.CHQuality">
            <summary>
            流程质量考核
            </summary>
        </member>
        <member name="M:BP.WF.CH.CHQuality.#ctor">
            <summary>
            流程质量考核
            </summary>
        </member>
        <member name="M:BP.WF.CH.CHQuality.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            流程质量考核
            </summary>
        </member>
        <member name="M:BP.WF.CH.CHQuality.#ctor(System.Int32,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            流程质量考核
            </summary>
            <param name="workId">workId</param>
            <param name="flowNo">flowNo</param>
            <param name="checkNodeId">checkNodeId</param>
            <param name="dept">dept</param>
            <param name="station">station</param>
            <param name="emp">emp</param>
            <param name="checker">checker</param>
        </member>
        <member name="P:BP.WF.CH.CHQuality.Statement">
            <summary>
            工作流程
            </summary>
        </member>
        <member name="P:BP.WF.CH.CHQuality.QAState">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:BP.WF.CH.CHQuality.WorkId">
            <summary>
            工作ID
            </summary>
        </member>
        <member name="P:BP.WF.CH.CHQuality.FK_Flow">
            <summary>
            工作流程
            </summary>
        </member>
        <member name="P:BP.WF.CH.CHQuality.FK_Node">
            <summary>
            考核节点
            </summary>
        </member>
        <member name="P:BP.WF.CH.CHQuality.FK_Dept">
            <summary>
            考核部门
            </summary>
        </member>
        <member name="P:BP.WF.CH.CHQuality.FK_Station">
            <summary>
            考核岗位
            </summary>
        </member>
        <member name="P:BP.WF.CH.CHQuality.FK_Emp">
            <summary>
            考核人员
            </summary>
        </member>
        <member name="P:BP.WF.CH.CHQuality.Checker">
            <summary>
            考核人
            </summary>
        </member>
        <member name="P:BP.WF.CH.CHQuality.CheckerStation">
            <summary>
            考核人de岗位
            </summary>
        </member>
        <member name="P:BP.WF.CH.CHQuality.CheckerDateTime">
            <summary>
            考核时间
            </summary>
        </member>
        <member name="P:BP.WF.CH.CHQuality.EnMap">
            <summary>
            重写基类方法
            </summary>
        </member>
        <member name="T:BP.WF.CH.CHQualitys">
            <summary>
            流程质量考核s
            </summary>
        </member>
        <member name="M:BP.WF.CH.CHQualitys.Retrieve(System.Int32,System.String,System.Int32,System.String,System.String)">
            <summary>
            按照考核人的工作岗位查询
            </summary>
            <param name="workId">工作ID</param>
            <param name="flowNo">流程编号</param>
            <param name="nodeId">节电ID</param>
            <param name="dept">部门</param>
            <param name="checkStat">考核人的工作岗位</param>
        </member>
        <member name="M:BP.WF.CH.CHQualitys.Retrieve(System.Int32,System.String)">
            <summary>
            查询出来全部的流程上的考核信息
            </summary>
            <param name="workId">工作ID</param>
            <param name="flowNo">流程编号</param>		 	 		 
        </member>
        <member name="M:BP.WF.CH.CHQualitys.Retrieve(System.Int32,System.String,System.String)">
            <summary>
            查询出来全部的流程上的考核信息
            </summary>
            <param name="workId">工作ID</param>
            <param name="flowNo">流程编号</param>		 	 
            <param name="checkerStation">考核人的岗位</param>			 
        </member>
        <member name="M:BP.WF.CH.CHQualitys.#ctor">
            <summary>
            流程质量考核s 
            </summary>
        </member>
        <member name="P:BP.WF.CH.CHQualitys.GetNewEntity">
            <summary>
            得到它的 Entity
            </summary>
        </member>
        <member name="T:BP.WF.CHQualityRptOfDept">
            <summary>
            纳税人统计报表
            </summary>
        </member>
        <member name="M:BP.WF.CHQualityRptOfDept.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="T:BP.WF.CHQualityRptOfEmp">
            <summary>
            纳税人统计报表
            </summary>
        </member>
        <member name="M:BP.WF.CHQualityRptOfEmp.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="T:BP.WF.CHQualityRptOfStation">
            <summary>
            纳税人统计报表
            </summary>
        </member>
        <member name="M:BP.WF.CHQualityRptOfStation.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="T:BP.WF.GSJMSRpt">
            <summary>
            纳税人报表
            </summary>
        </member>
        <member name="M:BP.WF.GSJMSRpt.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="T:BP.WF.WFCHOfFlowAttr">
            <summary>
            流程
            </summary>
        </member>
        <member name="F:BP.WF.WFCHOfFlowAttr.FK_ZSJG">
            <summary>
            征收机关
            </summary>
        </member>
        <member name="F:BP.WF.WFCHOfFlowAttr.WFState">
            <summary>
            流程状态
            </summary>
        </member>
        <member name="F:BP.WF.WFCHOfFlowAttr.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="F:BP.WF.WFCHOfFlowAttr.WFLog">
            <summary>
            流程日至
            </summary>
        </member>
        <member name="F:BP.WF.WFCHOfFlowAttr.FK_Flow">
            <summary>
            流程
            </summary>
        </member>
        <member name="F:BP.WF.WFCHOfFlowAttr.FK_NY">
            <summary>
            年月
            </summary>
        </member>
        <member name="F:BP.WF.WFCHOfFlowAttr.FK_AP">
            <summary>
            季度
            </summary>
        </member>
        <member name="F:BP.WF.WFCHOfFlowAttr.FK_Dept">
            <summary>
            要考核的部门
            </summary>
        </member>
        <member name="F:BP.WF.WFCHOfFlowAttr.WorkId">
            <summary>
            工作ID
            </summary>
        </member>
        <member name="F:BP.WF.WFCHOfFlowAttr.NodeState">
            <summary>
            考核的节点
            </summary>
        </member>
        <member name="F:BP.WF.WFCHOfFlowAttr.FK_Emp">
            <summary>
            执行员
            </summary>
        </member>
        <member name="F:BP.WF.WFCHOfFlowAttr.FK_Station">
            <summary>
            考核的工作岗位
            </summary>
        </member>
        <member name="F:BP.WF.WFCHOfFlowAttr.RecordDateTime">
            <summary>
            工作的发起时间
            </summary>
        </member>
        <member name="F:BP.WF.WFCHOfFlowAttr.CompleteDateTime">
            <summary>
            完成日期
            </summary>
        </member>
        <member name="F:BP.WF.WFCHOfFlowAttr.SpanDays">
            <summary>
            SpanDays
            </summary>
        </member>
        <member name="F:BP.WF.WFCHOfFlowAttr.Note">
            <summary>
            Note
            </summary>
        </member>
        <member name="T:BP.WF.WFCHOfFlow">
            <summary>
            流程
            </summary>
        </member>
        <member name="M:BP.WF.WFCHOfFlow.#ctor">
            <summary>
            流程
            </summary>
        </member>
        <member name="P:BP.WF.WFCHOfFlow.WorkId">
            <summary>
            节点ID
            </summary>
        </member>
        <member name="P:BP.WF.WFCHOfFlow.FK_Emp">
            <summary>
            员工
            </summary>
        </member>
        <member name="P:BP.WF.WFCHOfFlow.WFState">
            <summary>
            员工
            </summary>
        </member>
        <member name="P:BP.WF.WFCHOfFlow.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:BP.WF.WFCHOfFlow.WFLog">
            <summary>
            日志
            </summary>
        </member>
        <member name="P:BP.WF.WFCHOfFlow.FK_Dept">
            <summary>
            部门
            </summary>
        </member>
        <member name="P:BP.WF.WFCHOfFlow.FK_Flow">
            <summary>
            流程
            </summary>
        </member>
        <member name="P:BP.WF.WFCHOfFlow.FK_ZSJG">
            <summary>
            征收机关
            </summary>
        </member>
        <member name="P:BP.WF.WFCHOfFlow.CompleteDateTime">
            <summary>
            完成时间
            </summary>
        </member>
        <member name="P:BP.WF.WFCHOfFlow.RecordDateTime">
            <summary>
            记录时间
            </summary>
        </member>
        <member name="P:BP.WF.WFCHOfFlow.EnMap">
            <summary>
            重写基类方法
            </summary>
        </member>
        <member name="T:BP.WF.WFCHOfFlows">
            <summary>
            流程s BP.Tax.FK.WFCHOfFlows
            </summary>
        </member>
        <member name="M:BP.WF.WFCHOfFlows.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:BP.WF.WFCHOfFlows.GetNewEntity">
            <summary>
            得到它的 Entity 
            </summary>
        </member>
        <member name="T:BP.WF.CHOfFlowRpt">
            <summary>
            流程量化分析
            </summary>
        </member>
        <member name="M:BP.WF.CHOfFlowRpt.#ctor">
            <summary>
            流程量化分析
            </summary>
        </member>
        <member name="T:BP.WF.CHOfNodeAttr">
            <summary>
            消息
            </summary>
        </member>
        <member name="F:BP.WF.CHOfNodeAttr.FK_ZSJG">
            <summary>
            征收机关
            </summary>
        </member>
        <member name="F:BP.WF.CHOfNodeAttr.FK_Flow">
            <summary>
            流程
            </summary>
        </member>
        <member name="F:BP.WF.CHOfNodeAttr.FK_NY">
            <summary>
            年月
            </summary>
        </member>
        <member name="F:BP.WF.CHOfNodeAttr.FK_AP">
            <summary>
            季度
            </summary>
        </member>
        <member name="F:BP.WF.CHOfNodeAttr.FK_Dept">
            <summary>
            要考核的部门
            </summary>
        </member>
        <member name="F:BP.WF.CHOfNodeAttr.WorkId">
            <summary>
            工作ID
            </summary>
        </member>
        <member name="F:BP.WF.CHOfNodeAttr.FK_Node">
            <summary>
            考核的节点
            </summary>
        </member>
        <member name="F:BP.WF.CHOfNodeAttr.NodeState">
            <summary>
            节点状态
            </summary>
        </member>
        <member name="F:BP.WF.CHOfNodeAttr.FK_Emp">
            <summary>
            执行员
            </summary>
        </member>
        <member name="F:BP.WF.CHOfNodeAttr.FK_Station">
            <summary>
            考核的工作岗位
            </summary>
        </member>
        <member name="F:BP.WF.CHOfNodeAttr.RecordDateTime">
            <summary>
            工作的发起时间
            </summary>
        </member>
        <member name="F:BP.WF.CHOfNodeAttr.CompleteDateTime">
            <summary>
            完成日期
            </summary>
        </member>
        <member name="F:BP.WF.CHOfNodeAttr.Cent">
            <summary>
            实际得分
            </summary>
        </member>
        <member name="F:BP.WF.CHOfNodeAttr.CentOfAdd">
            <summary>
            加分
            </summary>
        </member>
        <member name="F:BP.WF.CHOfNodeAttr.CentOfCut">
            <summary>
            扣分
            </summary>
        </member>
        <member name="F:BP.WF.CHOfNodeAttr.SpanDays">
            <summary>
            SpanDays
            </summary>
        </member>
        <member name="F:BP.WF.CHOfNodeAttr.Note">
            <summary>
            Note
            </summary>
        </member>
        <member name="T:BP.WF.CHOfNode">
            <summary>
            消息
            </summary>
        </member>
        <member name="M:BP.WF.CHOfNode.#ctor">
            <summary>
            消息
            </summary>
        </member>
        <member name="P:BP.WF.CHOfNode.EnMap">
            <summary>
            重写基类方法
            </summary>
        </member>
        <member name="T:BP.WF.CHOfNodes">
            <summary>
            消息s BP.Tax.FK.CHOfNodes
            </summary>
        </member>
        <member name="M:BP.WF.CHOfNodes.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:BP.WF.CHOfNodes.GetNewEntity">
            <summary>
            得到它的 Entity 
            </summary>
        </member>
        <member name="T:BP.WF.CHOfNodeRpt">
            <summary>
            纳税人统计报表
            </summary>
        </member>
        <member name="M:BP.WF.CHOfNodeRpt.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="T:BP.WF.CHOfNodeRptCheck">
            <summary>
            纳税人统计报表
            </summary>
        </member>
        <member name="M:BP.WF.CHOfNodeRptCheck.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="T:BP.WF.CHOfNodeRptCut">
            <summary>
            纳税人统计报表
            </summary>
        </member>
        <member name="M:BP.WF.CHOfNodeRptCut.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="T:BP.WF.GenerWorkFlowDtlAttr">
            <summary>
            产生的工作
            </summary>
        </member>
        <member name="F:BP.WF.GenerWorkFlowDtlAttr.WorkID">
            <summary>
            地税编号
            </summary>
        </member>
        <member name="F:BP.WF.GenerWorkFlowDtlAttr.FK_Flow">
            <summary>
            工作流
            </summary>
        </member>
        <member name="F:BP.WF.GenerWorkFlowDtlAttr.PRI">
            <summary>
            PRI
            </summary>
        </member>
        <member name="F:BP.WF.GenerWorkFlowDtlAttr.WFState">
            <summary>
            流程状态
            </summary>
        </member>
        <member name="F:BP.WF.GenerWorkFlowDtlAttr.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="F:BP.WF.GenerWorkFlowDtlAttr.FK_Dept">
            <summary>
            部门
            </summary>
        </member>
        <member name="F:BP.WF.GenerWorkFlowDtlAttr.FK_Emp">
            <summary>
            记录人
            </summary>
        </member>
        <member name="F:BP.WF.GenerWorkFlowDtlAttr.RecordDateTime">
            <summary>
            产生时间
            </summary>
        </member>
        <member name="F:BP.WF.GenerWorkFlowDtlAttr.CompleteDateTime">
            <summary>
            完成时间
            </summary>
        </member>
        <member name="F:BP.WF.GenerWorkFlowDtlAttr.Cent">
            <summary>
            得分
            </summary>
        </member>
        <member name="F:BP.WF.GenerWorkFlowDtlAttr.FlowNote">
            <summary>
            note
            </summary>
        </member>
        <member name="F:BP.WF.GenerWorkFlowDtlAttr.FK_CurrentNode">
            <summary>
            当前工作到的节点.
            </summary>
        </member>
        <member name="F:BP.WF.GenerWorkFlowDtlAttr.FK_Station">
            <summary>
            当前工作岗位
            </summary>
        </member>
        <member name="F:BP.WF.GenerWorkFlowDtlAttr.FK_NY">
            <summary>
            月份
            </summary>
        </member>
        <member name="F:BP.WF.GenerWorkFlowDtlAttr.FK_ZSJG">
            <summary>
            征收机关
            </summary>
        </member>
        <member name="T:BP.WF.GenerWorkFlowDtl">
            <summary>
            产生的工作
            </summary>
        </member>
        <member name="M:BP.WF.GenerWorkFlowDtl.#ctor">
            <summary>
            产生的工作流程
            </summary>
        </member>
        <member name="M:BP.WF.GenerWorkFlowDtl.#ctor(System.Int32,System.String)">
            <summary>
            产生的工作流程
            </summary>
            <param name="workId">工作流程ID</param>
            <param name="flowNo">流程编号</param>
        </member>
        <member name="M:BP.WF.GenerWorkFlowDtl.afterDelete">
            <summary>
            删除后,需要把工作者列表也要删除.
            </summary>
        </member>
        <member name="P:BP.WF.GenerWorkFlowDtl.HisFlow">
            <summary>
            HisFlow
            </summary>
        </member>
        <member name="P:BP.WF.GenerWorkFlowDtl.FK_Flow">
            <summary>
            工作流程编号
            </summary>
        </member>
        <member name="P:BP.WF.GenerWorkFlowDtl.FK_Dept">
            <summary>
            部门
            </summary>
        </member>
        <member name="P:BP.WF.GenerWorkFlowDtl.FK_Station">
            <summary>
            当前的工作岗位
            </summary>
        </member>
        <member name="P:BP.WF.GenerWorkFlowDtl.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:BP.WF.GenerWorkFlowDtl.RecordDateTime">
            <summary>
            产生时间
            </summary>
        </member>
        <member name="P:BP.WF.GenerWorkFlowDtl.FlowNote">
            <summary>
            流程备注
            </summary>
        </member>
        <member name="P:BP.WF.GenerWorkFlowDtl.WorkID">
            <summary>
            流程ID
            </summary>
        </member>
        <member name="P:BP.WF.GenerWorkFlowDtl.PRI">
            <summary>
            级别
            </summary>
        </member>
        <member name="P:BP.WF.GenerWorkFlowDtl.FK_CurrentNode">
            <summary>
            当前工作到的节点
            </summary>
        </member>
        <member name="P:BP.WF.GenerWorkFlowDtl.WFState">
            <summary>
            工作流程状态( 0, 未完成,1 完成, 2 强制终止 3, 删除状态,) 
            </summary>
        </member>
        <member name="P:BP.WF.GenerWorkFlowDtl.WFStateLab">
            <summary>
            流程状态
            </summary>
        </member>
        <member name="P:BP.WF.GenerWorkFlowDtl.EnMap">
            <summary>
            重写基类方法
            </summary>
        </member>
        <member name="T:BP.WF.GenerWorkFlowDtls">
            <summary>
            产生的工作s
            </summary>
        </member>
        <member name="M:BP.WF.GenerWorkFlowDtls.QuByFlowAndEmp(System.String,System.Int32)">
            <summary>
            根据工作流程,员工ID 查询出来他当前的能做的工作.
            </summary>
            <param name="flowNo">流程编号</param>
            <param name="empId">员工ID</param>
            <returns></returns>
        </member>
        <member name="M:BP.WF.GenerWorkFlowDtls.#ctor">
            <summary>
            产生工作流程集合
            </summary>
        </member>
        <member name="P:BP.WF.GenerWorkFlowDtls.GetNewEntity">
            <summary>
            得到它的 Entity 
            </summary>
        </member>
        <member name="T:BP.WF.GenerWorkFlowDtlRpt">
            <summary>
            纳税人统计报表
            </summary>
        </member>
        <member name="M:BP.WF.GenerWorkFlowDtlRpt.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="T:BP.CH.CHEventAttr">
            <summary>
            事件考核属性
            </summary>
        </member>
        <member name="F:BP.CH.CHEventAttr.BelongToDept">
            <summary>
            隶属部门
            </summary>
        </member>
        <member name="F:BP.CH.CHEventAttr.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="F:BP.CH.CHEventAttr.ND">
            <summary>
            ND
            </summary>
        </member>
        <member name="F:BP.CH.CHEventAttr.JD">
            <summary>
            JD
            </summary>
        </member>
        <member name="F:BP.CH.CHEventAttr.YF">
            <summary>
            YF
            </summary>
        </member>
        <member name="F:BP.CH.CHEventAttr.Docs">
            <summary>
            内容
            </summary>
        </member>
        <member name="F:BP.CH.CHEventAttr.Recorder">
            <summary>
            记录人
            </summary>
        </member>
        <member name="F:BP.CH.CHEventAttr.RecordDatetime">
            <summary>
            记录时间
            </summary>
        </member>
        <member name="F:BP.CH.CHEventAttr.Note">
            <summary>
            Note
            </summary>
        </member>
        <member name="T:BP.CH.CHEvent">
            <summary>
            事件考核
            </summary>
        </member>
        <member name="M:BP.CH.CHEvent.#ctor">
            <summary>
            事件考核
            </summary>
        </member>
        <member name="M:BP.CH.CHEvent.#ctor(System.Int32)">
            <summary>
            CHEvent
            </summary>
            <param name="oid"></param>
        </member>
        <member name="M:BP.CH.CHEvent.beforeDelete">
            <summary>
            删除出现错误,此任务不是您录入的您不能删除.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.CH.CHEvent.afterDelete">
            <summary>
            DELETE CH_Ref3Obj WHERE FK_Event NOT IN (SELECT OID FROM CH_Event )
            </summary>
        </member>
        <member name="P:BP.CH.CHEvent.BelongToDept">
            <summary>
             隶属部门
            </summary>
        </member>
        <member name="P:BP.CH.CHEvent.Title">
            <summary>
             标题
            </summary>
        </member>
        <member name="P:BP.CH.CHEvent.Docs">
            <summary>
             内容
            </summary>
        </member>
        <member name="P:BP.CH.CHEvent.Recorder">
            <summary>
             记录人
            </summary>
        </member>
        <member name="P:BP.CH.CHEvent.RecordDatetime">
            <summary>
             记录时间
            </summary>
        </member>
        <member name="P:BP.CH.CHEvent.EnMap">
            <summary>
            Map
            </summary>
        </member>
        <member name="T:BP.CH.CHEvents">
            <summary>
            事件考核s
            </summary>
        </member>
        <member name="M:BP.CH.CHEvents.#ctor">
            <summary>
            事件考核s
            </summary>
        </member>
        <member name="P:BP.CH.CHEvents.GetNewEntity">
            <summary>
            获取实体
            </summary>
        </member>
        <member name="T:BP.WF.WFCHOfNodeAttr">
            <summary>
            消息
            </summary>
        </member>
        <member name="F:BP.WF.WFCHOfNodeAttr.FK_ZSJG">
            <summary>
            
            </summary>
        </member>
        <member name="F:BP.WF.WFCHOfNodeAttr.FK_Flow">
            <summary>
            FK_Flow
            </summary>
        </member>
        <member name="F:BP.WF.WFCHOfNodeAttr.FK_NY">
            <summary>
            年月
            </summary>
        </member>
        <member name="F:BP.WF.WFCHOfNodeAttr.FK_AP">
            <summary>
            季度
            </summary>
        </member>
        <member name="F:BP.WF.WFCHOfNodeAttr.FK_Dept">
            <summary>
            要考核的部门
            </summary>
        </member>
        <member name="F:BP.WF.WFCHOfNodeAttr.WorkId">
            <summary>
            工作ID
            </summary>
        </member>
        <member name="F:BP.WF.WFCHOfNodeAttr.FK_Node">
            <summary>
            考核的节点
            </summary>
        </member>
        <member name="F:BP.WF.WFCHOfNodeAttr.NodeState">
            <summary>
            节点状态
            </summary>
        </member>
        <member name="F:BP.WF.WFCHOfNodeAttr.DoEmp">
            <summary>
            执行员
            </summary>
        </member>
        <member name="F:BP.WF.WFCHOfNodeAttr.FK_Station">
            <summary>
            考核的工作岗位
            </summary>
        </member>
        <member name="F:BP.WF.WFCHOfNodeAttr.RecordDateTime">
            <summary>
            工作的发起时间
            </summary>
        </member>
        <member name="F:BP.WF.WFCHOfNodeAttr.CompleteDateTime">
            <summary>
            完成日期
            </summary>
        </member>
        <member name="F:BP.WF.WFCHOfNodeAttr.Cent">
            <summary>
            实际得分
            </summary>
        </member>
        <member name="F:BP.WF.WFCHOfNodeAttr.CentOfAdd">
            <summary>
            加分
            </summary>
        </member>
        <member name="F:BP.WF.WFCHOfNodeAttr.CentOfCut">
            <summary>
            扣分
            </summary>
        </member>
        <member name="F:BP.WF.WFCHOfNodeAttr.SpanDays">
            <summary>
            SpanDays
            </summary>
        </member>
        <member name="F:BP.WF.WFCHOfNodeAttr.Note">
            <summary>
            Note
            </summary>
        </member>
        <member name="T:BP.WF.WFCHOfNode">
            <summary>
            消息
            </summary>
        </member>
        <member name="M:BP.WF.WFCHOfNode.#ctor">
            <summary>
            消息
            </summary>
        </member>
        <member name="M:BP.WF.WFCHOfNode.#ctor(System.Int32)">
            <summary>
            节点OID
            </summary>
            <param name="workid">workid</param>
        </member>
        <member name="P:BP.WF.WFCHOfNode.WorkId">
            <summary>
            WorkId
            </summary>
        </member>
        <member name="P:BP.WF.WFCHOfNode.DoEmp">
            <summary>
            执行员工
            </summary>
        </member>
        <member name="P:BP.WF.WFCHOfNode.NodeState">
            <summary>
            节点状态
            </summary>
        </member>
        <member name="P:BP.WF.WFCHOfNode.NodeState_del">
            <summary>
            节点状态
            </summary>
        </member>
        <member name="P:BP.WF.WFCHOfNode.NodeID">
            <summary>
            节点ID
            </summary>
        </member>
        <member name="P:BP.WF.WFCHOfNode.FK_Station">
            <summary>
            岗位
            </summary>
        </member>
        <member name="P:BP.WF.WFCHOfNode.FK_Dept">
            <summary>
            部门
            </summary>
        </member>
        <member name="P:BP.WF.WFCHOfNode.RecordDateTime">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="P:BP.WF.WFCHOfNode.CompleteDateTime">
            <summary>
            完成时间
            </summary>
        </member>
        <member name="P:BP.WF.WFCHOfNode.Note">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:BP.WF.WFCHOfNode.Cent">
            <summary>
            实际得分数
            </summary>
        </member>
        <member name="P:BP.WF.WFCHOfNode.CentOfAdd">
            <summary>
            加分
            </summary>
        </member>
        <member name="P:BP.WF.WFCHOfNode.CentOfCut">
            <summary>
            扣分
            </summary>
        </member>
        <member name="P:BP.WF.WFCHOfNode.SpanDays">
            <summary>
            间隔天
            </summary>
        </member>
        <member name="P:BP.WF.WFCHOfNode.EnMap">
            <summary>
            重写基类方法
            </summary>
        </member>
        <member name="T:BP.WF.WFCHOfNodes">
            <summary>
            消息s BP.Tax.FK.WFCHOfNodes
            </summary>
        </member>
        <member name="M:BP.WF.WFCHOfNodes.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:BP.WF.WFCHOfNodes.GetNewEntity">
            <summary>
            得到它的 Entity 
            </summary>
        </member>
        <member name="T:BP.CH.CheckCycle">
            <summary>
            考核周期
            </summary>
        </member>
        <member name="F:BP.CH.CheckCycle.Year">
            <summary>
            年度考核
            </summary>
        </member>
        <member name="F:BP.CH.CheckCycle.Quarter">
            <summary>
            季度考核
            </summary>
        </member>
        <member name="F:BP.CH.CheckCycle.Month">
            <summary>
            月份考核
            </summary>
        </member>
        <member name="T:BP.CH.CheckItemType">
            <summary>
            考核的类型
            </summary>
        </member>
        <member name="F:BP.CH.CheckItemType.CheckOfSingToPerson">
            <summary>
            单次考核到人Multilayer
            </summary>
        </member>
        <member name="F:BP.CH.CheckItemType.CheckOfSingToStation">
            <summary>
            单次考核到岗位
            </summary>
        </member>
        <member name="F:BP.CH.CheckItemType.CheckOfMultiToPerson">
            <summary>
            多次考核到人.
            </summary>
        </member>
        <member name="F:BP.CH.CheckItemType.CheckOfMultiToStation">
            <summary>
            多次考核到岗位
            </summary>
        </member>
        <member name="T:BP.CH.ItemAttr">
            <summary>
            考核项目属性
            </summary>
        </member>
        <member name="F:BP.CH.ItemAttr.Score">
            <summary>
            扣分标准（每人次）
            </summary>
        </member>
        <member name="F:BP.CH.ItemAttr.FK_ItemSort">
            <summary>
            隶属类别
            </summary>
        </member>
        <member name="F:BP.CH.ItemAttr.CheckCycle">
            <summary>
            考核周期(年度，季度，月份)
            </summary>
        </member>
        <member name="F:BP.CH.ItemAttr.IsSingle">
            <summary>
            是否单次考核
            </summary>
        </member>
        <member name="F:BP.CH.ItemAttr.IsPersonal">
            <summary>
            IsPersonal
            </summary>
        </member>
        <member name="T:BP.CH.Item">
            <summary>
            考核项目
            </summary> 
        </member>
        <member name="M:BP.CH.Item.GetCanCheckDepts(System.Int32)">
            <summary>
            得到能够考核到的部门
            </summary>
            <param name="oid"></param>
            <returns></returns>
        </member>
        <member name="M:BP.CH.Item.#ctor">
            <summary>
            条目
            </summary>
        </member>
        <member name="M:BP.CH.Item.#ctor(System.String)">
            <summary>
            条目
            </summary>
            <param name="_No">Item</param>
        </member>
        <member name="P:BP.CH.Item.FK_ItemSort">
            <summary>
            隶属类别
            </summary>
        </member>
        <member name="P:BP.CH.Item.Score">
            <summary>
            扣分标准（每人次）
            </summary>
        </member>
        <member name="P:BP.CH.Item.CheckCycle">
            <summary>
            考核周期(年度，季度，月份)
            </summary>
        </member>
        <member name="P:BP.CH.Item.IsSingle">
            <summary>
            是否单次考核
            </summary>
        </member>
        <member name="P:BP.CH.Item.IsPersonal">
            <summary>
            是否考核到人
            </summary>
        </member>
        <member name="P:BP.CH.Item.EnMap">
            <summary>
            EnMap
            </summary>
        </member>
        <member name="T:BP.CH.Items">
            <summary>
            条目
            </summary>
        </member>
        <member name="M:BP.CH.Items.GetItemsByEmpId(System.Int32)">
            <summary>
            根据一个员工的ID , 得到他能够考核的项目.
            </summary>
            <param name="empId">员工ID</param>
            <returns></returns>
        </member>
        <member name="M:BP.CH.Items.#ctor">
            <summary>
            Items
            </summary>
        </member>
        <member name="M:BP.CH.Items.ItemsByKey(System.String)">
            <summary>
            根据隶属考核类别查询所有考核项目
            </summary>
            <param name="_ItemSort">考核项目类型编号</param>
            <returns>查询出来的数量</returns>
        </member>
        <member name="P:BP.CH.Items.GetNewEntity">
            <summary>
            GetNewEntity
            </summary>
        </member>
        <member name="T:BP.CH.ItemSortAttr">
            <summary>
            属性
            </summary>
        </member>
        <member name="F:BP.CH.ItemSortAttr.TotalScore">
            <summary>
            合计
            </summary>
        </member>
        <member name="T:BP.CH.ItemSort">
            <summary>
            考核项目类别
            </summary>
        </member>
        <member name="M:BP.CH.ItemSort.#ctor">
            <summary>
            hhh
            </summary>
        </member>
        <member name="M:BP.CH.ItemSort.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="_No"></param>
        </member>
        <member name="P:BP.CH.ItemSort.TotalScore">
            <summary>
            总分
            </summary>
        </member>
        <member name="P:BP.CH.ItemSort.EnMap">
            <summary>
            Map
            </summary>
        </member>
        <member name="T:BP.CH.ItemSorts">
            <summary>
            类别集合
            </summary>
        </member>
        <member name="M:BP.CH.ItemSorts.#ctor">
            <summary>
            类别集合
            </summary>		
        </member>
        <member name="P:BP.CH.ItemSorts.GetNewEntity">
            <summary>
            类别集合
            </summary>
        </member>
        <member name="T:BP.WF.CH.PubClass">
            <summary>
            PubClass 的摘要说明。
            </summary>
        </member>
        <member name="P:BP.WF.CH.PubClass.CHOfUsingRateCent">
            <summary>
            流程使用率考核
            </summary>
        </member>
        <member name="P:BP.WF.CH.PubClass.CHOfEfficiencyCent">
            <summary>
            流程效率考核
            </summary>
        </member>
        <member name="T:BP.CH.Ref3Obj">
            <summary>
            事件考核
            </summary>
        </member>
        <member name="T:BP.CH.RefObj">
            <summary>
            涉及的对象
            </summary>
        </member>
        <member name="M:BP.CH.RefObj.#ctor">
            <summary>
            涉及的对象
            </summary>
        </member>
        <member name="P:BP.CH.RefObj.FK_Event">
            <summary>
             事件
            </summary>
        </member>
        <member name="P:BP.CH.RefObj.FK_Item">
            <summary>
             标题
            </summary>
        </member>
        <member name="P:BP.CH.RefObj.Cent">
            <summary>
             内容
            </summary>
        </member>
        <member name="P:BP.CH.RefObj.HisItem">
            <summary>
            HisItem
            </summary>
        </member>
        <member name="P:BP.CH.RefObj.HisCHEvent">
            <summary>
            HisCHEvent
            </summary>
        </member>
        <member name="M:BP.CH.Ref3Obj.#ctor">
            <summary>
            事件考核
            </summary>
        </member>
        <member name="M:BP.CH.Ref3Obj.beforeUpdateInsertAction">
            <summary>
            在操作之前要做的权限判断
            </summary>
            <returns></returns>
        </member>
        <member name="P:BP.CH.Ref3Obj.FK_Dept">
            <summary>
             部门
            </summary>
        </member>
        <member name="P:BP.CH.Ref3Obj.HisDept">
            <summary>
            部门
            </summary>
        </member>
        <member name="P:BP.CH.Ref3Obj.EnMap">
            <summary>
            Map
            </summary>
        </member>
        <member name="T:BP.CH.Ref3Objs">
            <summary>
            事件考核s
            </summary>
        </member>
        <member name="M:BP.CH.Ref3Objs.#ctor">
            <summary>
            事件考核s
            </summary>
        </member>
        <member name="P:BP.CH.Ref3Objs.GetNewEntity">
            <summary>
            获取实体
            </summary>
        </member>
        <member name="T:BP.CH.RefObjAttr">
            <summary>
            涉及的对象属性
            </summary>
        </member>
        <member name="F:BP.CH.RefObjAttr.FK_Event">
            <summary>
            事件
            </summary>
        </member>
        <member name="F:BP.CH.RefObjAttr.FK_Item">
            <summary>
            考项目
            </summary>
        </member>
        <member name="F:BP.CH.RefObjAttr.Cent">
            <summary>
            分
            </summary>
        </member>
        <member name="T:BP.CH.RefObjs">
            <summary>
            涉及的对象s
            </summary>
        </member>
        <member name="M:BP.CH.RefObjs.#ctor">
            <summary>
            涉及的对象s
            </summary>
        </member>
        <member name="T:BP.WF.CheckState">
            <summary>
            审核状态
            </summary>
        </member>
        <member name="F:BP.WF.CheckState.Pause">
            <summary>
            暂停
            </summary>
        </member>
        <member name="F:BP.WF.CheckState.Agree">
            <summary>
            同意
            </summary>
        </member>
        <member name="F:BP.WF.CheckState.Dissent">
            <summary>
            不同意
            </summary>
        </member>
        <member name="T:BP.WF.CheckWorkAttr">
            <summary>
            采集信息基类属性
            </summary>
        </member>
        <member name="T:BP.WF.WorkAttr">
            <summary>
            工作属性
            </summary>
        </member>
        <member name="F:BP.WF.WorkAttr.OID">
            <summary>
            工作ID
            </summary>
        </member>
        <member name="F:BP.WF.WorkAttr.CompleteDateTime">
            <summary>
            完成任务时间
            </summary>
        </member>
        <member name="F:BP.WF.WorkAttr.RecordDateTime">
            <summary>
            记录时间
            </summary>
        </member>
        <member name="F:BP.WF.WorkAttr.Recorder">
            <summary>
            记录人
            </summary>
        </member>
        <member name="F:BP.WF.WorkAttr.NodeState">
            <summary>
            节点工作状态(0 是初试化, 1 已经完成, 2,已经读取)
            </summary>
        </member>
        <member name="F:BP.WF.WorkAttr.Cent">
            <summary>
            分数
            </summary>
        </member>
        <member name="F:BP.WF.WorkAttr.Note">
            <summary>
            备注
            </summary>
        </member>
        <member name="F:BP.WF.CheckWorkAttr.CheckState">
            <summary>
            审核状态( 0, 不同意, 1, 表示同意, 2 挂起) 
            </summary>
        </member>
        <member name="F:BP.WF.CheckWorkAttr.NodeID">
            <summary>
            NodeID
            </summary>
        </member>
        <member name="F:BP.WF.CheckWorkAttr.RefMsg">
            <summary>
            参考消息
            </summary>
        </member>
        <member name="T:BP.WF.CheckWork">
            <summary>
            WorkBase 的摘要说明。
            工作流程采集信息的 审核基类.
            </summary>
        </member>
        <member name="T:BP.WF.Work">
            <summary>
            WorkBase 的摘要说明。
            工作流程采集信息的基类
            </summary>
        </member>
        <member name="M:BP.WF.Work.GetCent">
            <summary>
            得到他的扣分
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.Work.GetNodeState(System.Boolean)">
            <summary>
            得到他的节点状态
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.Work.#ctor">
            <summary>
            工作流程
            </summary>
        </member>
        <member name="M:BP.WF.Work.#ctor(System.Int32)">
            <summary>
            工作流程
            </summary>
            <param name="oid">WFOID</param>		 
        </member>
        <member name="M:BP.WF.Work.BeforeWorkNodeComplete">
            <summary>
            在此节点任务为完成之前要做的工作.
            1,判断用户的录入是不是正确.
            2, 
            </summary>
            <returns>消息</returns>
        </member>
        <member name="M:BP.WF.Work.AfterWorkNodeComplete">
            <summary>
            节点任务完成之后要做的工作.
            可能要做的是
            1, 启动其他的流程.
            2, ...
            </summary>
            <returns>消息</returns>
        </member>
        <member name="M:BP.WF.Work.InsertAsOID(System.Int32)">
            <summary>
            按照指定的OID Insert.
            </summary>
        </member>
        <member name="M:BP.WF.Work.SaveAsOID(System.Int32)">
            <summary>
            按照指定的OID 保存
            </summary>
            <param name="oid"></param>
        </member>
        <member name="M:BP.WF.Work.Save">
            <summary>
            保存实体信息
            </summary>
        </member>
        <member name="M:BP.WF.Work.beforeUpdateInsertAction">
            <summary>
            在更新之前,与插入之前要做的工作.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.Work.beforeInsert">
            <summary>
            结束前插入
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.Work.beforeUpdate">
            <summary>
            结束前更新
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.Work.beforeDelete">
            <summary>
            逻辑处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.Work.afterDelete">
            <summary>
            逻辑处理
            </summary>
        </member>
        <member name="M:BP.WF.Work.afterInsert">
            <summary>
            逻辑处理,在建立之后要做的工作.
            1, 创建各个流程.
            2, 把这个事务的信息建立到工作流程里面.
            3, 
            </summary>
        </member>
        <member name="M:BP.WF.Work.afterUpdate">
            <summary>
            逻辑处理
            </summary>
        </member>
        <member name="M:BP.WF.Work.BeforeDirectSave">
            <summary>
            直接的保存前要做的工作
            </summary>
        </member>
        <member name="M:BP.WF.Work.DirectSave">
            <summary>
            直接的保存
            </summary>
        </member>
        <member name="P:BP.WF.Work.OID">
            <summary>
            OID, 如果是空的就返回 0 . 
            </summary>
        </member>
        <member name="P:BP.WF.Work.CompleteDateTime">
            <summary>
            完成时间
            </summary>
        </member>
        <member name="P:BP.WF.Work.RecordDateTime">
            <summary>
            记录时间
            </summary>
        </member>
        <member name="P:BP.WF.Work.Recorder">
            <summary>
            记录人
            </summary>
        </member>
        <member name="P:BP.WF.Work.RecorderOfEmp">
            <summary>
            员工
            </summary>
        </member>
        <member name="P:BP.WF.Work.RecorderText">
            <summary>
            记录人名称
            </summary>
        </member>
        <member name="P:BP.WF.Work.DelayDays">
            <summary>
            拖延天数  
            </summary>
        </member>
        <member name="P:BP.WF.Work.HisNode">
            <summary>
            工作的节点.
            </summary>
        </member>
        <member name="P:BP.WF.Work.HisWorkFlow">
            <summary>
            他的工作流程
            </summary>
        </member>
        <member name="P:BP.WF.Work.NodeStateOfEnum">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:BP.WF.Work.NodeState">
            <summary>
            节点状态
            </summary>
        </member>
        <member name="P:BP.WF.Work.NodeState_del">
            <summary>
            节点状态已经完成
            0,初始化
            1,已经完成
            2,警告状态
            3,扣分状态
            4,强制终止状态	 
            5,删除状态
            </summary>
        </member>
        <member name="P:BP.WF.Work.NodeStateText">
            <summary>
            节点状态NodeStateText
            </summary>
        </member>
        <member name="P:BP.WF.Work.Cent">
            <summary>
            分数
            </summary>
        </member>
        <member name="P:BP.WF.Work.Note">
            <summary>
            备注(在审核活动中为 审核人意见)
            </summary>
        </member>
        <member name="P:BP.WF.Work.SpanDays">
            <summary>
            跨度天数
            </summary>
        </member>
        <member name="P:BP.WF.Work.HisRecorder">
            <summary>
            他的记录人
            </summary>
        </member>
        <member name="M:BP.WF.CheckWork.#ctor">
            <summary>
            工作流程
            </summary>
        </member>
        <member name="M:BP.WF.CheckWork.#ctor(System.Int32)">
            <summary>
            工作流程
            </summary>
            <param name="oid">工作流程的ID</param>
        </member>
        <member name="M:BP.WF.CheckWork.beforeInsert">
            <summary>
            逻辑处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.CheckWork.beforeUpdate">
            <summary>
            逻辑处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.CheckWork.beforeDelete">
            <summary>
            逻辑处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.CheckWork.afterDelete">
            <summary>
            逻辑处理
            </summary>
        </member>
        <member name="M:BP.WF.CheckWork.afterInsert">
            <summary>
            逻辑处理,在建立之后要做的工作.
            1, 创建各个流程.
            2, 把这个事务的信息建立到工作流程里面.
            3, 
            </summary>
        </member>
        <member name="M:BP.WF.CheckWork.afterUpdate">
            <summary>
            逻辑处理
            </summary>
        </member>
        <member name="P:BP.WF.CheckWork.RefMsg">
            <summary>
            关联的消息
            </summary>
        </member>
        <member name="P:BP.WF.CheckWork.NodeID">
            <summary>
            NodeID
            </summary>
        </member>
        <member name="P:BP.WF.CheckWork.HisCheckState">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:BP.WF.CheckWork.CheckState">
            <summary>
            审核状态( 0,不同意,1,同意,2挂起) 
            </summary>
        </member>
        <member name="T:BP.WF.CheckWorks">
            <summary>
            审核工作的基类 集合
            </summary>
        </member>
        <member name="T:BP.WF.Works">
            <summary>
            工作流程采集信息的基类 集合
            </summary>
        </member>
        <member name="M:BP.WF.Works.#ctor">
            <summary>
            信息采集基类
            </summary>
        </member>
        <member name="M:BP.WF.Works.Retrieve(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            查询工作(不适合审核节点查询)
            </summary>
            <param name="empId">工作人员</param>
            <param name="nodeStat">节点状态</param>
            <param name="fromdate">记录日期从</param>
            <param name="todate">记录日期到</param>
            <returns></returns>
        </member>
        <member name="P:BP.WF.Works.NodeId">
            <summary>
            节点ID
            </summary>
        </member>
        <member name="P:BP.WF.Works.FlowNo">
            <summary>
            流程编号
            </summary>
        </member>
        <member name="M:BP.WF.CheckWorks.#ctor">
            <summary>
            审核工作集合
            </summary>
        </member>
        <member name="M:BP.WF.CheckWorks.#ctor(System.Int32)">
            <summary>
            审核工作集合
            </summary>
            <param name="NodeId">节点ID</param>
        </member>
        <member name="M:BP.WF.CheckWorks.#ctor(System.Int32,System.String,System.String)">
            <summary>
            构造
            </summary>
            <param name="NodeId">节点ID</param>
            <param name="fromDatetime">纪录日期从</param>
            <param name="toDateTime">到</param>
        </member>
        <member name="M:BP.WF.CheckWorks.Retrieve(System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            审核节点查询 
            </summary>
            <param name="empId">工作人员(all)</param>
            <param name="nodeStat">节点状态</param>
            <param name="nodeId">节点ID</param>
            <param name="fromdate">记录日期从</param>
            <param name="todate">记录日期到</param>
            <returns></returns>
        </member>
        <member name="T:BP.WF.NumCheckAttr">
            <summary>
            数量审核工作类属性
            </summary>
        </member>
        <member name="F:BP.WF.NumCheckAttr.Num">
            <summary>
            数量
            </summary>
        </member>
        <member name="T:BP.WF.NumCheck">
            <summary>
            SimpleCheckWork 的摘要说明。
            数量审核工作类
            </summary>
        </member>
        <member name="M:BP.WF.NumCheck.#ctor">
            <summary>
            数量审核工作类
            </summary>
        </member>
        <member name="M:BP.WF.NumCheck.#ctor(System.Int32)">
            <summary>
            数量审核工作类
            </summary>
            <param name="wfoid">工作流程ID</param>
        </member>
        <member name="M:BP.WF.NumCheck.#ctor(System.Int32,System.Int32)">
            <summary>
            数量审核工作类
            </summary>
            <param name="oid">工作流程ID</param>
            <param name="nodeId">节点ID</param>
        </member>
        <member name="P:BP.WF.NumCheck.Num">
            <summary>
            审核Num
            </summary>
        </member>
        <member name="P:BP.WF.NumCheck.EnMap">
            <summary>
            属性
            </summary>
        </member>
        <member name="T:BP.WF.NumChecks">
            <summary>
            数量审核工作类集合
            </summary>
        </member>
        <member name="F:BP.WF.NumChecks._nodeId">
            <summary>
            _nodeId
            </summary>
        </member>
        <member name="F:BP.WF.NumChecks._flowNo">
            <summary>
            _flowNo
            </summary>
        </member>
        <member name="M:BP.WF.NumChecks.#ctor">
            <summary>
            标准审核
            </summary>
        </member>
        <member name="M:BP.WF.NumChecks.#ctor(System.Int32)">
            <summary>
            生成工作节点
            </summary>
            <param name="nodeid"></param>
        </member>
        <member name="M:BP.WF.NumChecks.#ctor(System.Int32,System.String,System.String)">
            <summary>
            构造
            </summary>
            <param name="nodeid">nodeid</param>
            <param name="fromdatetime">fromdatetime</param>
            <param name="todatetime">todatetime</param>
        </member>
        <member name="P:BP.WF.NumChecks.NodeId">
            <summary>
            节点ID
            </summary>
        </member>
        <member name="P:BP.WF.NumChecks.FlowNo">
            <summary>
            工作流程编号
            </summary>
        </member>
        <member name="P:BP.WF.NumChecks.GetNewEntity">
            <summary>
            工作列表s
            </summary>
        </member>
        <member name="T:BP.WF.StandardCheckAttr">
            <summary>
            标准的审核工作类属性
            </summary>
        </member>
        <member name="T:BP.WF.StandardCheck">
            <summary>
            SimpleCheckWork 的摘要说明。
            标准的审核工作类
            </summary>
        </member>
        <member name="M:BP.WF.StandardCheck.#ctor">
            <summary>
            标准的审核工作类
            </summary>
        </member>
        <member name="M:BP.WF.StandardCheck.#ctor(System.Int32)">
            <summary>
            标准的审核工作类
            </summary>
            <param name="oid"></param>
        </member>
        <member name="P:BP.WF.StandardCheck.EnMap">
            <summary>
            属性
            </summary>
        </member>
        <member name="T:BP.WF.StandardChecks">
            <summary>
            标准的审核工作类集合
            </summary>
        </member>
        <member name="F:BP.WF.StandardChecks._nodeId">
            <summary>
            _nodeId
            </summary>
        </member>
        <member name="F:BP.WF.StandardChecks._flowNo">
            <summary>
            _flowNo
            </summary>
        </member>
        <member name="M:BP.WF.StandardChecks.#ctor">
            <summary>
            标准审核
            </summary>
        </member>
        <member name="M:BP.WF.StandardChecks.#ctor(System.Int32)">
            <summary>
            StandardChecks
            </summary>
            <param name="nodeid"></param>
        </member>
        <member name="M:BP.WF.StandardChecks.#ctor(System.Int32,System.String,System.String)">
            <summary>
            StandardChecks
            </summary>
            <param name="nodeid">nodeid</param>
            <param name="from">from</param>
            <param name="to">to</param>
        </member>
        <member name="P:BP.WF.StandardChecks.NodeId">
            <summary>
            节点ID
            </summary>
        </member>
        <member name="P:BP.WF.StandardChecks.FlowNo">
            <summary>
            工作流程编号
            </summary>
        </member>
        <member name="P:BP.WF.StandardChecks.GetNewEntity">
            <summary>
            工作列表s
            </summary>
        </member>
        <member name="T:BP.WF.FlowCheckNodeType">
            <summary>
            节点类型
            </summary>
        </member>
        <member name="F:BP.WF.FlowCheckNodeType.StandardCheck">
            <summary>
            标准类型
            </summary>
        </member>
        <member name="F:BP.WF.FlowCheckNodeType.NumCheck">
            <summary>
            数量审核
            </summary>
        </member>
        <member name="T:BP.WF.FlowCheckNode">
            <summary>
            这里存放每个节点的信息.	 
            </summary>
        </member>
        <member name="F:BP.WF.FlowCheckNode.NodeID">
            <summary>
            节点ID
            </summary>
        </member>
        <member name="F:BP.WF.FlowCheckNode.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="F:BP.WF.FlowCheckNode.FlowCheckNodeType">
            <summary>
            ddd
            </summary>
        </member>
        <member name="P:BP.WF.FlowCheckNode.WorksClassName">
            <summary>
            wsss
            </summary>
        </member>
        <member name="T:BP.WF.FlowCheckNodes">
            <summary>
            节点集合
            </summary>
        </member>
        <member name="M:BP.WF.FlowCheckNodes.#ctor">
            <summary>
            节点集合
            </summary>
        </member>
        <member name="M:BP.WF.FlowCheckNodes.Add(BP.WF.FlowCheckNode)">
            <summary>
            将对象添加到集合尾处，如果对象已经存在，则不添加
            </summary>
            <param name="flowNode">要添加的对象</param>
            <returns>返回添加到的地方</returns>
        </member>
        <member name="M:BP.WF.FlowCheckNodes.Add(System.Int32,System.String,BP.WF.FlowCheckNodeType)">
            <summary>
            增加一个属性
            </summary>
            <param name="NodeID">节点ID</param>
            <param name="NodeName">节电名称</param>
            <param name="type">FlowCheckNodeType</param>
        </member>
        <member name="P:BP.WF.FlowCheckNodes.Item(System.Int32)">
            <summary>
            根据位置取得数据
            </summary>
        </member>
        <member name="T:BP.WF.PCStartWorkAttr">
            <summary>
            开始工作基类属性
            </summary>
        </member>
        <member name="T:BP.WF.StartWorkAttr">
            <summary>
            开始工作基类属性
            </summary>
        </member>
        <member name="F:BP.WF.StartWorkAttr.Title">
            <summary>
            工作内容标题
            </summary>
        </member>
        <member name="F:BP.WF.StartWorkAttr.PRI">
            <summary>
            紧急程度
            </summary>
        </member>
        <member name="F:BP.WF.StartWorkAttr.WFState">
            <summary>
            工作流程状态( 0, 进行中,1 完成任务, 2强制终止) 
            </summary>
        </member>
        <member name="F:BP.WF.StartWorkAttr.BelongToDept">
            <summary>
            隶属的部门
            </summary>
        </member>
        <member name="F:BP.WF.StartWorkAttr.WFLog">
            <summary>
            日志
            </summary>
        </member>
        <member name="T:BP.WF.PCStartWork">
            <summary>	 
            PC开始工作基类,所有开始PC工作都要从这里继承
            这个工作的特点是:
            1, 计算机启动工作.
            2, 
            </summary>
        </member>
        <member name="T:BP.WF.StartWork">
            <summary>	 
            开始工作基类,所有开始工作都要从这里继承
            </summary>
        </member>
        <member name="M:BP.WF.StartWork.#ctor">
            <summary>
            工作流程
            </summary>
        </member>
        <member name="M:BP.WF.StartWork.#ctor(System.Int32)">
            <summary>
            工作流程
            </summary>
            <param name="wfID">工作流程的ID</param>
        </member>
        <member name="M:BP.WF.StartWork.beforeDelete">
            <summary>
            删除之前的操作。
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.StartWork.beforeInsert">
            <summary>
            插入之前的操作。
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.StartWork.beforeUpdate">
            <summary>
            更新操作
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.StartWork.afterDelete">
            <summary>
            逻辑处理
            </summary>
        </member>
        <member name="M:BP.WF.StartWork.afterInsert">
            <summary>
            逻辑处理,在建立之后要做的工作.
            1, 创建各个流程.
            2, 把这个事务的信息建立到工作流程里面. 
            </summary>
        </member>
        <member name="M:BP.WF.StartWork.afterUpdate">
            <summary>
            逻辑处理
            </summary>
        </member>
        <member name="P:BP.WF.StartWork.WFLog">
            <summary>
            日志
            </summary>
        </member>
        <member name="P:BP.WF.StartWork.Title">
            <summary>
            工作内容标题
            </summary>
        </member>
        <member name="P:BP.WF.StartWork.BelongToDept">
            <summary>
            隶属的部门, 自己编的号码.
            也是发起人使用的部门.
            </summary>
        </member>
        <member name="P:BP.WF.StartWork.BelongToDeptOfDept">
            <summary>
            隶属的部门, 自己编的号码.
            也是发起人的部门
            </summary>
        </member>
        <member name="P:BP.WF.StartWork.PRI">
            <summary>
            PRI
            </summary>
        </member>
        <member name="P:BP.WF.StartWork.WFState">
            <summary>
            工作流程状态( 0, 未完成,1 完成, 2 强制终止 3, 删除状态,) 
            </summary>
        </member>
        <member name="M:BP.WF.PCStartWork.#ctor">
            <summary>
            工作流程
            </summary>
        </member>
        <member name="M:BP.WF.PCStartWork.#ctor(System.Int32)">
            <summary>
            工作流程
            </summary>
            <param name="wfID">工作流程的ID</param>
        </member>
        <member name="M:BP.WF.PCStartWork.beforeInsert">
            <summary>
            逻辑处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.PCStartWork.beforeUpdate">
            <summary>
            逻辑处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.PCStartWork.beforeDelete">
            <summary>
            逻辑处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.PCStartWork.afterDelete">
            <summary>
            逻辑处理
            </summary>
        </member>
        <member name="M:BP.WF.PCStartWork.afterInsert">
            <summary>
            逻辑处理,在建立之后要做的工作.
            1, 创建各个流程.
            2, 把这个事务的信息建立到工作流程里面. 
            </summary>
        </member>
        <member name="M:BP.WF.PCStartWork.afterUpdate">
            <summary>
            逻辑处理
            </summary>
        </member>
        <member name="T:BP.WF.PCStartWorks">
            <summary>
            工作流程采集信息的基类 集合
            </summary>
        </member>
        <member name="T:BP.WF.StartWorks">
            <summary>
            工作流程采集信息的基类 集合
            </summary>
        </member>
        <member name="F:BP.WF.StartWorks._flowCheckNodes">
            <summary>
            他的审核节点
            </summary>
        </member>
        <member name="M:BP.WF.StartWorks.#ctor">
            <summary>
            信息采集基类
            </summary>
        </member>
        <member name="M:BP.WF.StartWorks.RetrieveByDeptWFStatePRI(System.String,System.String,System.String)">
            <summary>
            sss
            </summary>
            <param name="deptNo"></param>
            <param name="wfState"></param>
            <param name="pri"></param>
            <returns></returns>
        </member>
        <member name="M:BP.WF.StartWorks.RetrieveMyTask(System.String)">
            <summary>
            查询到我的任务.
            </summary>		 
            <returns></returns>
        </member>
        <member name="M:BP.WF.StartWorks.RetrieveMyTask(System.String,System.String)">
            <summary>
            查询到我的任务.
            </summary>		 
            <returns></returns>
        </member>
        <member name="P:BP.WF.StartWorks.FlowCheckNodes">
            <summary>
            子类需要实现（他的审核节点）
            </summary>
        </member>
        <member name="M:BP.WF.PCStartWorks.AutoGenerWorkFlow">
            <summary>
            调用自动产生工作流程.
            </summary>
        </member>
        <member name="M:BP.WF.PCStartWorks.#ctor">
            <summary>
            信息采集基类
            </summary>
        </member>
        <member name="T:BP.WF.PCTaxpayerStartWorkAttr">
            <summary>
            开始工作基类属性
            </summary>
        </member>
        <member name="F:BP.WF.PCTaxpayerStartWorkAttr.FK_Taxpayer">
            <summary>
            纳税人
            </summary>
        </member>
        <member name="F:BP.WF.PCTaxpayerStartWorkAttr.FK_TaxpayerDept">
            <summary>
            纳税的对应的部门
            </summary>
        </member>
        <member name="T:BP.WF.PCTaxpayerStartWork">
            <summary>	 
            PC开始工作基类,所有开始PC工作都要从这里继承
            这个工作的特点:
            1, 计算机在调度的定时的启动工作.
            2, 调度的人员
            </summary>
        </member>
        <member name="F:BP.WF.PCTaxpayerStartWork._HisTaxpayer">
            <summary>
            _HisTaxpayer
            </summary>
        </member>
        <member name="M:BP.WF.PCTaxpayerStartWork.#ctor">
            <summary>
            工作流程
            </summary>
        </member>
        <member name="M:BP.WF.PCTaxpayerStartWork.#ctor(System.Int32)">
            <summary>
            工作流程
            </summary>
            <param name="wfID">工作流程的ID</param>
        </member>
        <member name="M:BP.WF.PCTaxpayerStartWork.beforeUpdateInsertAction">
            <summary>
            在插入于更新前找到纳税人对应的部门.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.PCTaxpayerStartWork.beforeInsert">
            <summary>
            逻辑处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.PCTaxpayerStartWork.beforeUpdate">
            <summary>
            逻辑处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.PCTaxpayerStartWork.beforeDelete">
            <summary>
            逻辑处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.PCTaxpayerStartWork.afterDelete">
            <summary>
            逻辑处理
            </summary>
        </member>
        <member name="M:BP.WF.PCTaxpayerStartWork.afterInsert">
            <summary>
            逻辑处理,在建立之后要做的工作.
            1, 创建各个流程.
            2, 把这个事务的信息建立到工作流程里面. 
            </summary>
        </member>
        <member name="M:BP.WF.PCTaxpayerStartWork.afterUpdate">
            <summary>
            逻辑处理
            </summary>
        </member>
        <member name="P:BP.WF.PCTaxpayerStartWork.FK_Taxpayer">
            <summary>
            纳税人
            </summary>
        </member>
        <member name="P:BP.WF.PCTaxpayerStartWork.FK_TaxpayerDept">
            <summary>
            小组编号
            </summary>
        </member>
        <member name="P:BP.WF.PCTaxpayerStartWork.HisTaxpayer">
            <summary>
            HisTaxpayer
            </summary>
        </member>
        <member name="T:BP.WF.PCTaxpayerStartWorks">
            <summary>
            工作流程采集信息的基类 集合
            </summary>
        </member>
        <member name="M:BP.WF.PCTaxpayerStartWorks.#ctor">
            <summary>
            信息采集基类
            </summary>
        </member>
        <member name="T:BP.WF.PCWorkAttr">
            <summary>
            计算机工作基类属性
            </summary>
        </member>
        <member name="T:BP.WF.PCWork">
            <summary>	 
            计算机工作基类,所有计算机工作都要从这里继承
            这个工作的特点是,
            1,计算机通过调度获取外部的属性.
            2,产生的消息不加入消息列表.
            3,完成这个工作的人员是系统自动的随机的取出.
            4,
            </summary>
        </member>
        <member name="M:BP.WF.PCWork.InitData">
            <summary>
            执行获取外部数据
            </summary>
        </member>
        <member name="M:BP.WF.PCWork.DoInitData">
            <summary>
            执行 init data
            </summary>
        </member>
        <member name="M:BP.WF.PCWork.#ctor">
            <summary>
            工作流程
            </summary>
        </member>
        <member name="M:BP.WF.PCWork.#ctor(System.Int32)">
            <summary>
            工作流程
            </summary>
            <param name="wfID">工作流程的ID</param>
        </member>
        <member name="M:BP.WF.PCWork.beforeInsert">
            <summary>
            逻辑处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.PCWork.beforeUpdate">
            <summary>
            逻辑处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.PCWork.beforeDelete">
            <summary>
            逻辑处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.PCWork.afterDelete">
            <summary>
            逻辑处理
            </summary>
        </member>
        <member name="M:BP.WF.PCWork.afterInsert">
            <summary>
            逻辑处理,在建立之后要做的工作.
            1, 创建各个流程.
            2, 把这个事务的信息建立到工作流程里面.
            3, 把这个事务的信息建立到工作流程里面.
            </summary>
        </member>
        <member name="M:BP.WF.PCWork.afterUpdate">
            <summary>
            逻辑处理
            </summary>
        </member>
        <member name="T:BP.WF.PCWorks">
            <summary>
            工作流程采集信息的基类 集合
            </summary>
        </member>
        <member name="M:BP.WF.PCWorks.#ctor">
            <summary>
            信息采集基类
            </summary>
        </member>
        <member name="M:BP.WF.PCWorks.DoInitData">
            <summary>
            执行初始化数据
            </summary>
        </member>
        <member name="T:BP.WF.SimpleWork">
            <summary>
            简单的work
            </summary>
        </member>
        <member name="M:BP.WF.SimpleWork.#ctor">
            <summary>
            ss
            </summary>
        </member>
        <member name="M:BP.WF.SimpleWork.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="oid"></param>
        </member>
        <member name="M:BP.WF.SimpleWork.beforeInsert">
            <summary>
            逻辑处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.SimpleWork.beforeUpdate">
            <summary>
            逻辑处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.SimpleWork.beforeDelete">
            <summary>
            逻辑处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.SimpleWork.afterDelete">
            <summary>
            逻辑处理
            </summary>
        </member>
        <member name="M:BP.WF.SimpleWork.afterInsert">
            <summary>
            逻辑处理
            </summary>
        </member>
        <member name="M:BP.WF.SimpleWork.afterUpdate">
            <summary>
            逻辑处理
            </summary>
        </member>
        <member name="P:BP.WF.SimpleWork.EnMap">
            <summary>
            map
            </summary>
        </member>
        <member name="P:BP.WF.SimpleWork.PhysicsTable">
            <summary>
            指定表
            </summary>
        </member>
        <member name="P:BP.WF.SimpleWork.Desc">
            <summary>
            描述
            </summary>
        </member>
        <member name="T:BP.WF.SimpleWorks">
            <summary>
            SimpleWorks
            </summary>
        </member>
        <member name="M:BP.WF.SimpleWorks.#ctor">
            <summary>
            SimpleWorks
            </summary>
        </member>
        <member name="T:BP.WF.StartWorkOfZSJGAttr">
            <summary>
            征收机关开始工作节点属性
            </summary>
        </member>
        <member name="F:BP.WF.StartWorkOfZSJGAttr.FK_ZSJG">
            <summary>
            征收机关编号
            </summary>
        </member>
        <member name="T:BP.WF.StartWorkOfZSJG">
            <summary>	 
            征收机关开始节点,具有征收机关的属性的开始节点.
            </summary>
        </member>
        <member name="M:BP.WF.StartWorkOfZSJG.#ctor">
            <summary>
            工作流程
            </summary>
        </member>
        <member name="M:BP.WF.StartWorkOfZSJG.#ctor(System.Int32)">
            <summary>
            工作流程
            </summary>
            <param name="wfID">工作流程的ID</param>
        </member>
        <member name="M:BP.WF.StartWorkOfZSJG.beforeUpdateInsertAction">
            <summary>
            在插入于更新前找到纳税人对应的部门.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.StartWorkOfZSJG.beforeUpdate">
            <summary>
            更新之前的操作
            </summary>
            <returns></returns>
        </member>
        <member name="P:BP.WF.StartWorkOfZSJG.FK_ZSJG">
            <summary>
            征收机关
            </summary>
        </member>
        <member name="P:BP.WF.StartWorkOfZSJG.FK_ZSJGName">
            <summary>
            征收机关名称
            </summary>
        </member>
        <member name="P:BP.WF.StartWorkOfZSJG.HisZSJG">
            <summary>
            纳税人
            </summary>
        </member>
        <member name="T:BP.WF.StartWorkOfZSJGs">
            <summary>
            工作流程采集信息的基类 集合
            </summary>
        </member>
        <member name="M:BP.WF.StartWorkOfZSJGs.#ctor">
            <summary>
            信息采集基类
            </summary>
        </member>
        <member name="T:BP.WF.TaxpayerStartWorkAttr">
            <summary>
            开始工作基类属性
            </summary>
        </member>
        <member name="F:BP.WF.TaxpayerStartWorkAttr.FK_Taxpayer">
            <summary>
            纳税人编号
            </summary>
        </member>
        <member name="F:BP.WF.TaxpayerStartWorkAttr.FK_TaxpayerDept">
            <summary>
            小组
            </summary>
        </member>
        <member name="T:BP.WF.TaxpayerStartWork">
            <summary>	 
            开始工作基类,所有开始工作都要从这里继承
            </summary>
        </member>
        <member name="M:BP.WF.TaxpayerStartWork.#ctor">
            <summary>
            工作流程
            </summary>
        </member>
        <member name="M:BP.WF.TaxpayerStartWork.#ctor(System.Int32)">
            <summary>
            工作流程
            </summary>
            <param name="wfID">工作流程的ID</param>
        </member>
        <member name="M:BP.WF.TaxpayerStartWork.beforeUpdateInsertAction">
            <summary>
            在插入于更新前找到纳税人对应的部门.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BP.WF.TaxpayerStartWork.beforeUpdate">
            <summary>
            更新之前的操作
            </summary>
            <returns></returns>
        </member>
        <member name="P:BP.WF.TaxpayerStartWork.FK_Taxpayer">
            <summary>
            纳税人
            </summary>
        </member>
        <member name="P:BP.WF.TaxpayerStartWork.FK_TaxpayerDept">
            <summary>
            纳税人隶属的部门
            </summary>
        </member>
        <member name="P:BP.WF.TaxpayerStartWork.HisTaxpayer">
            <summary>
            纳税人
            </summary>
        </member>
        <member name="T:BP.WF.TaxpayerStartWorks">
            <summary>
            工作流程采集信息的基类 集合
            </summary>
        </member>
        <member name="M:BP.WF.TaxpayerStartWorks.#ctor">
            <summary>
            信息采集基类
            </summary>
        </member>
        <member name="M:BP.WF.TaxpayerStartWorks.RetrieveByDeptWFStatePRI(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            RetrieveByDeptWFStatePRI
            </summary>
            <param name="deptNo"></param>
            <param name="wfState"></param>
            <param name="pri"></param>
            <param name="team"></param>
            <returns>DataTable</returns>
        </member>
        <member name="T:BP.WF.WorkListAttr">
            <summary>
            工作信息列表
            </summary>
        </member>
        <member name="F:BP.WF.WorkListAttr.WorkDesc">
            <summary>
            工作描述
            </summary>
        </member>
        <member name="T:BP.WF.WorkList">
            <summary>
            工作列表
            </summary>
        </member>
        <member name="M:BP.WF.WorkList.#ctor">
            <summary>
            工作列表
            </summary> 
        </member>
        <member name="M:BP.WF.WorkList.#ctor(System.String)">
            <summary>
            工作列表
            </summary>
            <param name="_No"></param>
        </member>
        <member name="P:BP.WF.WorkList.EnMap">
            <summary>
            EnMap
            </summary>
        </member>
        <member name="T:BP.WF.WorkLists">
            <summary>
            工作列表s
            </summary>
        </member>
        <member name="M:BP.WF.WorkLists.#ctor">
            <summary>
            工作列表s
            </summary>
        </member>
        <member name="P:BP.WF.WorkLists.GetNewEntity">
            <summary>
            工作列表s
            </summary>
        </member>
        <member name="T:BP.WF.MsgsManager">
            <summary>
            MsgsManager
            </summary>
        </member>
        <member name="M:BP.WF.MsgsManager.DeleteByWorkId(System.Int32)">
            <summary>
            删除工作by工作ID
            </summary>
            <param name="workId"></param>
        </member>
        <member name="M:BP.WF.MsgsManager.AddMsgs(BP.WF.WFMsgs,System.Boolean)">
            <summary>
            是不是清除他们
            </summary>
            <param name="wls">消息集合</param>
            <param name="isClear">是否清除</param>
        </member>
        <member name="M:BP.WF.MsgsManager.AddMsgs(BP.WF.WorkerLists,System.String,System.String,System.String)">
            <summary>
            增加信息
            </summary>
            <param name="wls">工作者集合</param>
            <param name="flowName">流程名称</param>
            <param name="nodeName">节点名称</param>
            <param name="title">标题</param>
        </member>
        <member name="M:BP.WF.MsgsManager.GetMsgsByEmpID(System.Int32)">
            <summary>
            sss
            </summary>
            <param name="empId"></param>
            <returns></returns>
        </member>
        <member name="M:BP.WF.MsgsManager.GetMsgsCountByEmpID(System.Int32)">
            <summary>
            取出消息的个数
            </summary>
            <param name="empId"></param>
            <returns></returns>
        </member>
        <member name="M:BP.WF.MsgsManager.ClearMsgsByEmpID(System.Int32)">
            <summary>
            清除信息
            </summary>
            <param name="empId"></param>
        </member>
        <member name="M:BP.WF.MsgsManager.InitMsgs">
            <summary>
            初始化全部的消息。
            </summary>
        </member>
        <member name="T:BP.WF.Msg">
            <summary>
            Msg 的摘要说明。
            </summary>
        </member>
        <member name="F:BP.WF.Msg._SoundUrl">
            <summary>
            声音文件
            </summary>
        </member>
        <member name="F:BP.WF.Msg._IsOpenSound">
            <summary>
            _IsOpenSound
            </summary>
        </member>
        <member name="F:BP.WF.Msg._WorkId">
            <summary>
            _WorkId
            </summary>
        </member>
        <member name="F:BP.WF.Msg._NodeId">
            <summary>
            _NodeId
            </summary>
        </member>
        <member name="F:BP.WF.Msg._Info">
            <summary>
            _Info
            </summary>
        </member>
        <member name="F:BP.WF.Msg._ToEmpId">
            <summary>
            _ToEmpId
            </summary>
        </member>
        <member name="M:BP.WF.Msg.#ctor">
            <summary>
            信息
            </summary>
        </member>
        <member name="M:BP.WF.Msg.#ctor(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            信息
            </summary>
            <param name="workId"></param>
            <param name="nodeId"></param>
            <param name="toEmpId"></param>
            <param name="info"></param>
        </member>
        <member name="P:BP.WF.Msg.SoundUrl">
            <summary>
            声音文件
            </summary>
        </member>
        <member name="P:BP.WF.Msg.IsOpenSound">
            <summary>
            IsOpenSound
            </summary>
        </member>
        <member name="P:BP.WF.Msg.Info">
            <summary>
            信息
            </summary>
        </member>
        <member name="P:BP.WF.Msg.WorkID">
            <summary>
            工作ID
            </summary>
        </member>
        <member name="P:BP.WF.Msg.NodeId">
            <summary>
            NodeID
            </summary>
        </member>
        <member name="P:BP.WF.Msg.ToEmpId">
            <summary>
            ToEmpId
            </summary>
        </member>
        <member name="T:BP.WF.Msgs">
            <summary>
            消息集合
            </summary>
        </member>
        <member name="M:BP.WF.Msgs.AddMsg(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            增加消息
            </summary>
            <param name="workId"></param>
            <param name="nodeId"></param>
            <param name="toEmpId"></param>
            <param name="info"></param>
        </member>
        <member name="M:BP.WF.Msgs.AddMsg(BP.WF.Msg)">
            <summary>
            增加消息
            </summary>
            <param name="msg">消息</param>
        </member>
        <member name="M:BP.WF.Msgs.ClearByWorkId(System.Int32)">
            <summary>
            安工作ID 清除消息。
            </summary>
            <param name="workId"></param>
        </member>
        <member name="M:BP.WF.Msgs.ClearByEmpId(System.Int32)">
            <summary>
            清除员工信息
            </summary>
            <param name="empId"></param>
        </member>
        <member name="M:BP.WF.Msgs.GetMsgsByWorkID(System.Int32)">
            <summary>
            清除员工信息
            </summary>
            <param name="workId"></param>
            <returns></returns>
        </member>
        <member name="M:BP.WF.Msgs.GetMsgsByEmpID(System.Int32)">
            <summary>
            sss
            </summary>
            <param name="empId"></param>
            <returns></returns>
        </member>
        <member name="M:BP.WF.Msgs.GetMsgsCountByEmpID(System.Int32)">
            <summary>
            取得信息的数量。
            </summary>
            <param name="empId">员工</param>
            <returns>信息个数</returns>
        </member>
        <member name="M:BP.WF.Msgs.#ctor">
            <summary>
            消息s
            </summary>
        </member>
        <member name="P:BP.WF.Msgs.Item(System.Int32)">
            <summary>
            根据位置取得数据
            </summary>
        </member>
        <member name="T:BP.WF.UserMsgs">
            <summary>
            用户消息
            </summary>
        </member>
        <member name="F:BP.WF.UserMsgs._IsOpenSound">
            <summary>
            _IsOpenSound
            </summary>
        </member>
        <member name="M:BP.WF.UserMsgs.#ctor">
            <summary>
            用户消息
            </summary>
        </member>
        <member name="M:BP.WF.UserMsgs.#ctor(System.Int32)">
            <summary>
            用户消息
            </summary>
            <param name="empId"></param>
        </member>
        <member name="P:BP.WF.UserMsgs.IsOpenSound">
            <summary>
            _IsOpenSound
            </summary>
        </member>
        <member name="T:BP.WF.WFEmp">
            <summary>
            TaxEmp 的摘要说明。
            </summary>
        </member>
        <member name="M:BP.WF.WFEmp.#ctor">
            <summary>
            WFEmp
            </summary>
        </member>
        <member name="P:BP.WF.WFEmp.HisStationType">
            <summary>
            ss
            </summary>
        </member>
    </members>
</doc>
